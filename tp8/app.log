2022-01-24 20:24:45.564 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-24 20:25:45.434 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-24 20:37:43.681 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-24 20:40:28.291 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-24 20:40:28.543 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 20:40:28.656 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [presentation.] for bean with name 'Ctrl1' defined in class path resource [spring.xml]; nested exception is java.lang.ClassNotFoundException: presentation.
2022-01-24 20:42:18.511 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-24 20:42:18.906 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 20:42:19.038 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [presentation.OrderController] for bean with name 'Ctrl1' defined in class path resource [spring.xml]; nested exception is java.lang.ClassNotFoundException: presentation.OrderController
2022-01-24 20:45:27.621 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-24 20:45:27.926 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 20:45:28.019 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [presentation.OrderController] for bean with name 'Ctrl1' defined in class path resource [spring.xml]; nested exception is java.lang.ClassNotFoundException: presentation.OrderController
2022-01-24 20:46:39.528 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-24 20:46:40.417 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 20:46:40.597 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [presentation.OrderController] for bean with name 'ctrl1' defined in class path resource [spring.xml]; nested exception is java.lang.ClassNotFoundException: presentation.OrderController
2022-01-24 20:49:27.041 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-24 20:49:27.332 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 20:49:27.434 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [presentation.OrderController] for bean with name 'ctrl1' defined in class path resource [spring.xml]; nested exception is java.lang.ClassNotFoundException: presentation.OrderController
2022-01-24 20:57:31.697 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-24 20:57:32.006 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 20:57:32.129 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [presentation.OrderController] for bean with name 'ctrl1' defined in class path resource [spring.xml]; nested exception is java.lang.ClassNotFoundException: presentation.OrderController
2022-01-24 21:04:08.682 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-24 21:04:09.380 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 21:04:09.548 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [presentation.OrderController] for bean with name 'ctrl1' defined in class path resource [spring.xml]; nested exception is java.lang.ClassNotFoundException: presentation.OrderController
2022-01-24 23:48:05.856 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-24 23:48:06.136 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-24 23:48:06.223 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ctrl1'
2022-01-24 23:48:06.271 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-24 23:48:06.272 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-24 23:48:06.371 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ctrl1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'service' of bean class [ma.cigma.pfe.service.FactureServiceImpl]: Bean property 'service' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
2022-01-25 18:36:15.358 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-25 18:36:15.985 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-25 18:36:16.156 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ctrl1'
2022-01-25 18:36:16.222 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-25 18:36:16.223 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-25 18:36:16.347 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ctrl1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'service' of bean class [ma.cigma.pfe.service.FactureServiceImpl]: Bean property 'service' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
2022-01-25 20:05:38.698 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@77846d2c
2022-01-25 20:05:39.258 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-25 20:05:39.389 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ctrl1'
2022-01-25 20:05:39.444 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-25 20:05:39.445 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-25 20:05:39.524 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-25 20:05:39.620 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-25 20:05:39.917 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-25 20:05:39.918 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_orders, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_orders]
2022-01-25 20:05:39.924 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_orders] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-25 20:05:39.950 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_orders
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-25 20:05:39.994 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-25 20:05:40.002 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-25 20:05:40.017 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-25 20:05:40.018 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-25 20:05:40.395 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-25 20:05:40.399 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-25 20:05:40.406 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-25 20:05:40.441 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-25 20:05:40.516 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-25 20:05:40.543 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-25 20:05:40.751 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-01-25 20:05:40.752 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-01-25 20:05:40.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ddeb7cb
2022-01-25 20:05:40.758 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6be968ce
2022-01-25 20:05:40.763 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4082ba93
2022-01-25 20:05:40.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@609e8838
2022-01-25 20:05:40.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-01-25 20:05:40.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@73eb439a
2022-01-25 20:05:40.773 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@73eb439a
2022-01-25 20:05:40.777 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-01-25 20:05:40.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7ae0a9ec
2022-01-25 20:05:40.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7ae0a9ec
2022-01-25 20:05:40.784 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-01-25 20:05:40.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@2a693f59
2022-01-25 20:05:40.786 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2a693f59
2022-01-25 20:05:40.789 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@723ca036
2022-01-25 20:05:40.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@723ca036
2022-01-25 20:05:40.791 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@723ca036
2022-01-25 20:05:40.796 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-01-25 20:05:40.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4d0d9fe7
2022-01-25 20:05:40.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4d0d9fe7
2022-01-25 20:05:40.802 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-01-25 20:05:40.803 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6c4906d3
2022-01-25 20:05:40.804 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6c4906d3
2022-01-25 20:05:40.807 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-01-25 20:05:40.808 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@5c80cf32
2022-01-25 20:05:40.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5c80cf32
2022-01-25 20:05:40.814 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5b799640
2022-01-25 20:05:40.815 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5b799640
2022-01-25 20:05:40.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4e5ed836
2022-01-25 20:05:40.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4e5ed836
2022-01-25 20:05:40.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@239a307b
2022-01-25 20:05:40.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@239a307b
2022-01-25 20:05:40.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5745ca0e
2022-01-25 20:05:40.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@15a34df2
2022-01-25 20:05:40.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@55cb6996
2022-01-25 20:05:40.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55cb6996
2022-01-25 20:05:40.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@38467116
2022-01-25 20:05:40.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38467116
2022-01-25 20:05:40.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@5e7cd6cc
2022-01-25 20:05:40.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5e7cd6cc
2022-01-25 20:05:40.850 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-01-25 20:05:40.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6e2829c7
2022-01-25 20:05:40.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6e2829c7
2022-01-25 20:05:40.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1c742ed4
2022-01-25 20:05:40.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@69c81773
2022-01-25 20:05:40.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@69c81773
2022-01-25 20:05:40.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@69c81773
2022-01-25 20:05:40.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c05fddc
2022-01-25 20:05:40.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@50378a4
2022-01-25 20:05:40.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@50378a4
2022-01-25 20:05:40.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-01-25 20:05:40.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a6d7e92
2022-01-25 20:05:40.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@16150369
2022-01-25 20:05:40.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@16150369
2022-01-25 20:05:40.885 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@23f5b5dc
2022-01-25 20:05:40.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@23f5b5dc
2022-01-25 20:05:40.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-01-25 20:05:40.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f15d60e
2022-01-25 20:05:40.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58e1d9d
2022-01-25 20:05:40.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@47caedad
2022-01-25 20:05:40.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@47caedad
2022-01-25 20:05:40.905 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@47caedad
2022-01-25 20:05:40.908 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-01-25 20:05:40.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-01-25 20:05:40.910 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1500b2f3
2022-01-25 20:05:40.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5c86a017
2022-01-25 20:05:40.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1b919693
2022-01-25 20:05:40.921 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1b919693
2022-01-25 20:05:40.928 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1b919693
2022-01-25 20:05:40.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2584b82d
2022-01-25 20:05:40.936 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2584b82d
2022-01-25 20:05:40.937 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2584b82d
2022-01-25 20:05:40.940 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@626abbd0
2022-01-25 20:05:40.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@46d59067
2022-01-25 20:05:41.447 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@7486b455
2022-01-25 20:05:41.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7486b455
2022-01-25 20:05:41.456 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5efa40fe
2022-01-25 20:05:41.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@6d5620ce
2022-01-25 20:05:41.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6d5620ce
2022-01-25 20:05:41.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@24959ca4
2022-01-25 20:05:41.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@24959ca4
2022-01-25 20:05:41.518 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@461ad730
2022-01-25 20:05:41.566 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7068e664
2022-01-25 20:05:41.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7975d1d8
2022-01-25 20:05:41.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@32115b28
2022-01-25 20:05:41.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32115b28
2022-01-25 20:05:41.585 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-01-25 20:05:41.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-01-25 20:05:41.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-25 20:05:41.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-25 20:05:41.590 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-25 20:05:41.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-25 20:05:41.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-25 20:05:41.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-25 20:05:41.675 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-25 20:05:41.687 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-25 20:05:41.690 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-25 20:05:41.691 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-25 20:05:41.712 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-25 20:05:41.713 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-25 20:05:42.408 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(OrderDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.exception.internal.SQLStateConversionDelegate.convert(SQLStateConversionDelegate.java:115) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:101) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Client does not support authentication protocol requested by server; consider upgrading MySQL client
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.Util.getInstance(Util.java:381) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:984) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:956) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3491) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3423) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:910) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.secureAuth411(MysqlIO.java:3923) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1273) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2031) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:718) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:46) ~[mysql-connector-java-5.1.6.jar:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:406) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:302) ~[mysql-connector-java-5.1.6.jar:?]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:282) ~[mysql-connector-java-5.1.6.jar:?]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-25 20:05:42.428 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ctrl1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-25 20:05:42.516 INFO [Finalizer][org.hibernate.orm.connections] [stop] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.stop(DriverManagerConnectionProviderImpl.java:235)] - HHH10001008: Cleaning up connection pool [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-25 21:05:23.825 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-25 21:05:24.186 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-25 21:05:24.277 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ctrl1'
2022-01-25 21:05:24.310 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ctrl1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 's1' available
2022-01-25 21:10:21.544 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-25 21:10:21.855 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-25 21:10:21.948 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-25 21:10:21.984 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 's1' available
2022-01-25 21:10:39.004 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-25 21:10:39.283 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-25 21:10:39.378 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-25 21:10:39.414 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 's1' available
2022-01-25 21:11:46.419 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-25 21:11:46.678 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-25 21:11:46.787 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-25 21:11:46.826 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-25 21:11:46.828 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-25 21:11:46.867 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-25 21:11:46.955 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-25 21:11:47.102 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-25 21:11:47.103 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_orders, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_orders]
2022-01-25 21:11:47.108 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_orders] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-25 21:11:47.125 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_orders
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-25 21:11:47.150 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-25 21:11:47.156 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-25 21:11:47.164 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-25 21:11:47.165 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-25 21:11:47.392 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-25 21:11:47.396 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-25 21:11:47.401 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-25 21:11:47.428 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-25 21:11:47.505 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-25 21:11:47.534 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-25 21:11:47.761 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-25 21:11:47.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-25 21:11:47.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-25 21:11:47.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-25 21:11:47.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-25 21:11:47.773 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-25 21:11:47.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-25 21:11:47.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-25 21:11:47.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-25 21:11:47.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-25 21:11:47.786 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-25 21:11:47.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-25 21:11:47.792 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-25 21:11:47.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-25 21:11:47.794 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-25 21:11:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-25 21:11:47.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-25 21:11:47.799 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-25 21:11:47.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-25 21:11:47.806 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-25 21:11:47.807 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-25 21:11:47.812 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-25 21:11:47.812 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-25 21:11:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-25 21:11:47.817 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-25 21:11:47.818 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-25 21:11:47.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-25 21:11:47.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-25 21:11:47.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-25 21:11:47.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-25 21:11:47.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-25 21:11:47.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-25 21:11:47.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-25 21:11:47.835 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-25 21:11:47.838 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-25 21:11:47.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-25 21:11:47.841 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-25 21:11:47.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-25 21:11:47.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-25 21:11:47.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-25 21:11:47.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-25 21:11:47.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-25 21:11:47.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-25 21:11:47.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-25 21:11:47.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-25 21:11:47.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-25 21:11:47.869 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-25 21:11:47.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-25 21:11:47.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-25 21:11:47.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-25 21:11:47.876 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-25 21:11:47.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-25 21:11:47.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-25 21:11:47.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-25 21:11:47.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-25 21:11:47.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-25 21:11:47.888 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-25 21:11:47.893 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-25 21:11:47.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-25 21:11:47.898 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-25 21:11:47.902 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-25 21:11:47.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-25 21:11:47.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-25 21:11:47.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-25 21:11:47.908 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-25 21:11:47.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-25 21:11:47.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-25 21:11:47.915 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-25 21:11:47.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-25 21:11:47.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-25 21:11:47.919 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-25 21:11:47.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-25 21:11:47.921 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-25 21:11:47.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-25 21:11:47.926 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-25 21:11:47.938 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-25 21:11:47.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-25 21:11:47.940 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-25 21:11:47.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-25 21:11:47.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-25 21:11:47.956 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-25 21:11:47.957 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-25 21:11:47.959 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-25 21:11:47.961 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-25 21:11:47.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-25 21:11:47.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-25 21:11:47.972 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-25 21:11:47.974 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-25 21:11:47.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-25 21:11:47.976 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-25 21:11:47.999 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-25 21:11:48.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-25 21:11:48.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-25 21:11:48.003 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-25 21:11:48.003 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-25 21:11:48.084 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-25 21:11:48.124 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-25 21:11:48.126 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-25 21:11:48.127 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-25 21:11:48.136 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-25 21:11:48.137 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-25 21:11:50.775 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(OrderDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-25 21:11:50.814 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'dao' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-25 22:02:18.537 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-25 22:02:18.819 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-25 22:02:18.909 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ctrl1'
2022-01-25 22:02:18.944 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-25 22:02:18.945 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-25 22:02:18.981 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-25 22:02:19.077 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-25 22:02:19.239 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-25 22:02:19.240 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_orders, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_orders]
2022-01-25 22:02:19.243 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_orders] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-25 22:02:19.257 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_orders
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-25 22:02:19.275 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-25 22:02:19.284 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-25 22:02:19.292 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-25 22:02:19.294 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-25 22:02:19.523 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-25 22:02:19.527 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-25 22:02:19.530 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-25 22:02:19.567 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-25 22:02:19.639 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-25 22:02:19.663 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-25 22:02:19.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-25 22:02:19.900 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-25 22:02:19.901 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-25 22:02:19.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-25 22:02:19.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-25 22:02:19.910 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-25 22:02:19.914 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-25 22:02:19.915 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-25 22:02:19.917 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-25 22:02:19.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-25 22:02:19.921 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-25 22:02:19.921 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-25 22:02:19.925 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-25 22:02:19.926 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-25 22:02:19.927 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-25 22:02:19.931 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-25 22:02:19.933 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-25 22:02:19.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-25 22:02:19.940 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-25 22:02:19.941 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-25 22:02:19.942 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-25 22:02:19.946 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-25 22:02:19.947 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-25 22:02:19.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-25 22:02:19.952 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-25 22:02:19.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-25 22:02:19.954 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-25 22:02:19.959 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-25 22:02:19.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-25 22:02:19.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-25 22:02:19.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-25 22:02:19.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-25 22:02:19.968 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-25 22:02:19.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-25 22:02:19.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-25 22:02:19.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-25 22:02:19.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-25 22:02:19.985 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-25 22:02:19.987 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-25 22:02:19.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-25 22:02:19.992 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-25 22:02:19.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-25 22:02:19.997 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-25 22:02:19.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-25 22:02:20.003 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-25 22:02:20.017 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-25 22:02:20.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-25 22:02:20.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-25 22:02:20.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-25 22:02:20.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-25 22:02:20.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-25 22:02:20.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-25 22:02:20.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-25 22:02:20.031 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-25 22:02:20.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-25 22:02:20.034 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-25 22:02:20.035 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-25 22:02:20.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-25 22:02:20.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-25 22:02:20.043 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-25 22:02:20.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-25 22:02:20.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-25 22:02:20.048 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-25 22:02:20.051 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-25 22:02:20.052 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-25 22:02:20.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-25 22:02:20.056 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-25 22:02:20.059 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-25 22:02:20.060 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-25 22:02:20.062 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-25 22:02:20.066 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-25 22:02:20.068 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-25 22:02:20.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-25 22:02:20.071 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-25 22:02:20.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-25 22:02:20.087 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-25 22:02:20.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-25 22:02:20.090 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-25 22:02:20.101 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-25 22:02:20.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-25 22:02:20.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-25 22:02:20.136 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-25 22:02:20.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-25 22:02:20.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-25 22:02:20.143 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-25 22:02:20.150 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-25 22:02:20.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-25 22:02:20.152 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-25 22:02:20.153 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-25 22:02:20.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-25 22:02:20.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-25 22:02:20.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-25 22:02:20.156 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-25 22:02:20.156 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-25 22:02:20.157 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-25 22:02:20.198 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-25 22:02:20.224 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-25 22:02:20.225 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-25 22:02:20.226 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-25 22:02:20.234 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-25 22:02:20.235 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-25 22:02:22.529 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(OrderDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:11) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-25 22:02:22.546 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ctrl1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 19:10:21.042 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-26 19:10:21.353 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 19:10:21.473 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-26 19:10:21.510 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-26 19:10:21.511 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-26 19:10:21.549 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 19:10:21.652 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 19:10:21.842 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 19:10:21.843 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 19:10:21.848 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 19:10:21.869 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 19:10:21.914 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 19:10:21.920 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 19:10:21.931 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 19:10:21.932 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 19:10:22.175 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 19:10:22.193 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 19:10:22.203 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 19:10:22.259 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 19:10:22.358 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 19:10:22.404 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 19:10:22.613 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 19:10:22.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 19:10:22.627 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 19:10:22.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-26 19:10:22.635 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-26 19:10:22.638 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-26 19:10:22.644 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 19:10:22.645 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 19:10:22.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 19:10:22.651 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 19:10:22.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 19:10:22.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 19:10:22.657 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 19:10:22.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 19:10:22.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 19:10:22.664 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 19:10:22.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 19:10:22.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 19:10:22.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 19:10:22.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 19:10:22.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-26 19:10:22.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 19:10:22.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 19:10:22.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-26 19:10:22.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 19:10:22.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 19:10:22.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 19:10:22.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 19:10:22.698 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 19:10:22.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 19:10:22.702 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 19:10:22.706 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-26 19:10:22.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-26 19:10:22.710 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-26 19:10:22.713 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-26 19:10:22.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-26 19:10:22.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-26 19:10:22.724 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-26 19:10:22.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-26 19:10:22.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 19:10:22.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 19:10:22.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 19:10:22.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 19:10:22.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 19:10:22.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-26 19:10:22.760 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 19:10:22.761 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 19:10:22.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 19:10:22.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-26 19:10:22.769 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 19:10:22.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 19:10:22.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 19:10:22.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 19:10:22.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 19:10:22.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 19:10:22.784 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 19:10:22.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 19:10:22.796 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 19:10:22.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 19:10:22.800 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-26 19:10:22.804 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 19:10:22.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 19:10:22.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 19:10:22.815 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 19:10:22.816 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 19:10:22.817 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 19:10:22.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-26 19:10:22.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 19:10:22.936 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 19:10:22.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 19:10:22.956 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 19:10:22.957 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 19:10:22.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 19:10:22.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-26 19:10:23.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-26 19:10:23.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 19:10:23.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 19:10:23.082 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-26 19:10:23.115 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 19:10:23.117 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 19:10:23.127 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 19:10:23.128 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 19:10:23.130 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-26 19:10:23.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-26 19:10:23.136 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-26 19:10:23.146 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 19:10:23.169 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 19:10:23.172 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-26 19:10:23.173 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-26 19:10:23.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 19:10:23.176 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 19:10:23.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 19:10:23.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 19:10:23.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 19:10:23.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 19:10:23.301 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 19:10:23.334 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 19:10:23.336 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 19:10:23.337 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 19:10:23.346 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 19:10:23.347 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 19:10:25.904 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:14) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 19:10:25.933 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'dao' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 19:17:07.627 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-26 19:17:07.971 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 19:17:08.076 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ctrl1'
2022-01-26 19:17:08.111 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-26 19:17:08.114 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-26 19:17:08.204 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 19:17:08.311 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 19:17:08.508 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 19:17:08.511 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 19:17:08.515 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 19:17:08.533 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 19:17:08.557 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 19:17:08.563 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 19:17:08.570 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 19:17:08.572 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 19:17:08.889 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 19:17:08.893 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 19:17:08.897 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 19:17:08.923 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 19:17:08.990 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 19:17:09.014 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 19:17:09.252 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:17:09.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:17:09.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:17:09.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-26 19:17:09.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-26 19:17:09.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-26 19:17:09.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:17:09.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:17:09.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:17:09.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:17:09.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:17:09.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:17:09.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:17:09.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:17:09.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:17:09.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:17:09.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:17:09.289 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:17:09.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:17:09.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:17:09.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:17:09.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:17:09.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:17:09.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:17:09.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:17:09.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:17:09.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:17:09.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 19:17:09.316 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 19:17:09.319 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 19:17:09.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 19:17:09.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 19:17:09.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 19:17:09.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-26 19:17:09.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-26 19:17:09.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-26 19:17:09.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-26 19:17:09.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 19:17:09.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 19:17:09.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-26 19:17:09.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-26 19:17:09.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:17:09.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:17:09.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:17:09.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-26 19:17:09.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:17:09.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:17:09.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:17:09.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-26 19:17:09.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 19:17:09.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 19:17:09.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 19:17:09.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 19:17:09.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 19:17:09.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 19:17:09.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 19:17:09.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 19:17:09.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 19:17:09.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 19:17:09.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-26 19:17:09.384 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:17:09.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:17:09.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:17:09.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:17:09.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:17:09.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:17:09.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-26 19:17:09.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:17:09.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:17:09.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:17:09.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:17:09.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:17:09.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:17:09.407 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-26 19:17:09.409 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-26 19:17:09.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 19:17:09.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 19:17:09.424 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-26 19:17:09.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 19:17:09.434 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 19:17:09.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 19:17:09.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 19:17:09.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-26 19:17:09.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-26 19:17:09.448 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-26 19:17:09.455 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 19:17:09.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 19:17:09.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 19:17:09.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 19:17:09.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 19:17:09.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 19:17:09.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 19:17:09.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 19:17:09.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-26 19:17:09.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-26 19:17:09.564 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 19:17:09.662 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 19:17:09.666 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 19:17:09.667 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 19:17:09.678 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 19:17:09.743 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 19:17:12.152 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:14) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:828) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:448) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:241) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198) ~[mysql-connector-java-8.0.27.jar:8.0.27]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 19:17:12.166 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ctrl1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'dao' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 19:29:56.342 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-26 19:29:56.652 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 19:29:56.743 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'ctrl1'
2022-01-26 19:29:56.775 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-26 19:29:56.776 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-26 19:29:56.815 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 19:29:56.889 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 19:29:57.044 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 19:29:57.045 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 19:29:57.049 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 19:29:57.059 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 19:29:57.079 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 19:29:57.085 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 19:29:57.092 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 19:29:57.093 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 19:29:57.295 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 19:29:57.302 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 19:29:57.306 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 19:29:57.341 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 19:29:57.404 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 19:29:57.441 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 19:29:57.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:29:57.664 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:29:57.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:29:57.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-26 19:29:57.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-26 19:29:57.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-26 19:29:57.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:29:57.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:29:57.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:29:57.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:29:57.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:29:57.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:29:57.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:29:57.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:29:57.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:29:57.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:29:57.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:29:57.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:29:57.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:29:57.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:29:57.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:29:57.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:29:57.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:29:57.708 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:29:57.712 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:29:57.713 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:29:57.714 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:29:57.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 19:29:57.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 19:29:57.724 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 19:29:57.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 19:29:57.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 19:29:57.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 19:29:57.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-26 19:29:57.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-26 19:29:57.743 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-26 19:29:57.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-26 19:29:57.752 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 19:29:57.754 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 19:29:57.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-26 19:29:57.760 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-26 19:29:57.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:29:57.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:29:57.767 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:29:57.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-26 19:29:57.774 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:29:57.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:29:57.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:29:57.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-26 19:29:57.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 19:29:57.783 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 19:29:57.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 19:29:57.786 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 19:29:57.789 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 19:29:57.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 19:29:57.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 19:29:57.794 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 19:29:57.799 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 19:29:57.802 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 19:29:57.804 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-26 19:29:57.807 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:29:57.808 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:29:57.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:29:57.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:29:57.814 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:29:57.815 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:29:57.818 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-26 19:29:57.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:29:57.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:29:57.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:29:57.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:29:57.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:29:57.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:29:57.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-26 19:29:57.837 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-26 19:29:57.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 19:29:57.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 19:29:57.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-26 19:29:57.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 19:29:57.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 19:29:57.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 19:29:57.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 19:29:57.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-26 19:29:57.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-26 19:29:57.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-26 19:29:57.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 19:29:57.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 19:29:57.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 19:29:57.898 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 19:29:57.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 19:29:57.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 19:29:57.900 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 19:29:57.901 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 19:29:57.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-26 19:29:57.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-26 19:29:57.962 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 19:29:57.984 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 19:29:57.985 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 19:29:57.986 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 19:29:57.998 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 19:29:57.999 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 19:30:00.016 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:14) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 19:30:00.038 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ctrl1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'dao' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 19:56:26.121 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-26 19:56:26.383 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 19:56:26.479 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-26 19:56:26.510 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-26 19:56:26.511 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-26 19:56:26.544 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 19:56:26.644 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 19:56:26.795 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 19:56:26.796 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 19:56:26.799 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 19:56:26.813 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 19:56:26.831 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 19:56:26.835 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 19:56:26.850 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 19:56:26.851 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 19:56:27.080 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 19:56:27.083 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 19:56:27.089 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 19:56:27.119 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 19:56:27.185 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 19:56:27.209 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 19:56:27.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 19:56:27.421 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 19:56:27.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 19:56:27.424 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-26 19:56:27.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-26 19:56:27.430 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-26 19:56:27.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 19:56:27.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 19:56:27.438 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 19:56:27.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 19:56:27.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 19:56:27.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 19:56:27.447 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 19:56:27.448 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 19:56:27.449 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 19:56:27.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 19:56:27.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 19:56:27.454 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 19:56:27.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 19:56:27.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 19:56:27.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-26 19:56:27.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 19:56:27.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 19:56:27.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-26 19:56:27.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 19:56:27.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 19:56:27.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 19:56:27.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 19:56:27.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 19:56:27.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 19:56:27.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 19:56:27.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-26 19:56:27.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-26 19:56:27.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-26 19:56:27.490 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-26 19:56:27.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-26 19:56:27.494 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-26 19:56:27.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-26 19:56:27.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-26 19:56:27.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 19:56:27.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 19:56:27.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 19:56:27.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 19:56:27.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 19:56:27.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-26 19:56:27.519 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 19:56:27.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 19:56:27.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 19:56:27.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-26 19:56:27.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 19:56:27.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 19:56:27.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 19:56:27.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 19:56:27.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 19:56:27.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 19:56:27.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 19:56:27.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 19:56:27.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 19:56:27.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 19:56:27.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-26 19:56:27.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 19:56:27.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 19:56:27.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 19:56:27.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 19:56:27.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 19:56:27.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 19:56:27.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-26 19:56:27.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 19:56:27.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 19:56:27.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 19:56:27.568 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 19:56:27.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 19:56:27.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 19:56:27.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-26 19:56:27.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-26 19:56:27.585 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 19:56:27.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 19:56:27.588 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-26 19:56:27.598 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 19:56:27.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 19:56:27.606 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 19:56:27.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 19:56:27.608 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-26 19:56:27.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-26 19:56:27.613 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-26 19:56:27.620 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 19:56:27.638 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 19:56:27.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-26 19:56:27.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-26 19:56:27.643 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 19:56:27.644 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 19:56:27.645 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 19:56:27.646 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 19:56:27.649 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 19:56:27.651 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 19:56:27.699 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 19:56:27.718 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 19:56:27.719 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 19:56:27.720 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 19:56:27.731 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 19:56:27.732 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 19:56:29.800 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 19:56:29.815 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 19:58:25.631 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-26 19:58:25.953 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 19:58:26.085 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-26 19:58:26.128 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-26 19:58:26.129 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-26 19:58:26.176 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 19:58:26.295 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 19:58:26.489 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 19:58:26.490 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 19:58:26.493 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 19:58:26.509 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 19:58:26.565 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 19:58:26.574 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 19:58:26.579 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 19:58:26.582 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 19:58:26.864 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 19:58:26.868 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 19:58:26.873 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 19:58:26.924 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 19:58:27.013 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 19:58:27.051 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 19:58:27.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:58:27.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:58:27.442 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 19:58:27.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-26 19:58:27.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-26 19:58:27.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-26 19:58:27.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:58:27.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:58:27.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 19:58:27.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:58:27.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:58:27.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 19:58:27.519 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:58:27.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:58:27.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 19:58:27.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:58:27.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:58:27.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 19:58:27.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:58:27.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:58:27.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-26 19:58:27.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:58:27.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:58:27.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 19:58:27.568 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:58:27.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:58:27.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 19:58:27.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 19:58:27.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 19:58:27.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 19:58:27.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 19:58:27.589 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 19:58:27.590 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 19:58:27.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-26 19:58:27.596 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-26 19:58:27.600 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-26 19:58:27.600 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-26 19:58:27.605 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 19:58:27.606 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 19:58:27.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-26 19:58:27.613 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-26 19:58:27.621 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:58:27.622 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:58:27.624 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 19:58:27.629 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-26 19:58:27.635 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:58:27.636 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:58:27.637 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 19:58:27.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-26 19:58:27.650 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 19:58:27.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 19:58:27.655 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 19:58:27.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 19:58:27.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 19:58:27.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 19:58:27.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 19:58:27.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 19:58:27.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 19:58:27.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 19:58:27.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-26 19:58:27.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:58:27.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:58:27.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-26 19:58:27.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:58:27.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:58:27.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 19:58:27.708 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-26 19:58:27.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:58:27.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:58:27.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 19:58:27.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:58:27.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:58:27.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 19:58:27.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-26 19:58:27.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-26 19:58:27.743 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 19:58:27.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 19:58:27.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-26 19:58:27.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 19:58:27.806 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 19:58:27.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 19:58:27.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 19:58:27.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-26 19:58:27.901 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-26 19:58:27.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-26 19:58:27.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 19:58:27.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 19:58:27.911 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 19:58:27.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 19:58:27.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 19:58:27.915 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 19:58:27.915 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 19:58:27.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 19:58:27.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-26 19:58:27.922 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-26 19:58:27.980 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 19:58:28.000 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 19:58:28.002 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 19:58:28.004 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 19:58:28.042 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 19:58:28.043 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 19:58:31.097 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 19:58:31.118 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 22:05:30.073 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-26 22:05:30.354 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 22:05:30.464 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-26 22:05:30.495 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-26 22:05:30.495 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-26 22:05:30.526 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 22:05:30.620 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 22:05:30.792 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 22:05:30.792 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 22:05:30.807 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 22:05:30.823 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 22:05:30.917 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 22:05:30.932 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 22:05:30.932 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 22:05:30.948 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 22:05:31.167 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 22:05:31.167 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 22:05:31.182 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 22:05:31.229 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 22:05:31.292 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 22:05:31.323 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 22:05:31.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 22:05:31.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 22:05:31.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 22:05:32.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-26 22:05:32.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-26 22:05:32.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-26 22:05:32.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 22:05:32.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 22:05:32.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 22:05:32.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 22:05:32.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 22:05:32.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 22:05:32.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 22:05:32.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-26 22:05:32.073 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-26 22:05:32.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-26 22:05:32.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-26 22:05:32.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 22:05:32.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 22:05:32.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 22:05:32.088 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 22:05:32.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 22:05:32.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-26 22:05:32.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 22:05:32.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 22:05:32.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 22:05:32.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 22:05:32.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 22:05:32.135 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-26 22:05:32.151 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-26 22:05:32.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 22:05:32.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 22:05:32.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-26 22:05:32.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 22:05:32.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 22:05:32.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 22:05:32.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 22:05:32.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-26 22:05:32.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-26 22:05:32.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 22:05:32.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 22:05:32.479 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 22:05:32.495 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 22:05:32.495 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 22:05:32.495 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 22:05:32.510 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 22:05:32.510 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 22:05:34.635 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 22:05:34.651 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 22:13:52.256 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-26 22:13:52.518 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 22:13:52.596 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-26 22:13:52.627 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-26 22:13:52.643 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-26 22:13:52.674 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 22:13:52.752 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 22:13:52.956 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 22:13:52.956 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 22:13:52.956 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 22:13:52.987 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 22:13:53.002 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 22:13:53.018 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 22:13:53.018 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 22:13:53.018 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 22:13:53.268 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 22:13:53.284 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 22:13:53.284 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 22:13:53.330 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 22:13:53.377 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 22:13:53.409 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 22:13:54.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 22:13:54.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 22:13:54.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-26 22:13:54.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-26 22:13:54.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-26 22:13:54.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-26 22:13:54.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 22:13:54.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 22:13:54.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-26 22:13:54.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 22:13:54.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-26 22:13:54.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-26 22:13:54.062 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 22:13:54.062 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 22:13:54.062 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-26 22:13:54.070 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 22:13:54.070 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 22:13:54.070 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-26 22:13:54.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 22:13:54.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-26 22:13:54.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-26 22:13:54.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 22:13:54.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 22:13:54.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-26 22:13:54.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 22:13:54.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 22:13:54.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-26 22:13:54.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 22:13:54.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-26 22:13:54.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 22:13:54.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-26 22:13:54.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 22:13:54.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-26 22:13:54.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-26 22:13:54.118 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-26 22:13:54.118 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-26 22:13:54.118 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-26 22:13:54.126 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 22:13:54.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-26 22:13:54.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-26 22:13:54.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-26 22:13:54.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 22:13:54.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 22:13:54.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-26 22:13:54.150 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-26 22:13:54.158 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 22:13:54.158 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 22:13:54.158 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-26 22:13:54.158 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-26 22:13:54.158 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 22:13:54.166 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-26 22:13:54.166 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 22:13:54.166 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-26 22:13:54.166 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 22:13:54.166 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-26 22:13:54.174 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 22:13:54.174 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-26 22:13:54.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 22:13:54.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-26 22:13:54.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-26 22:13:54.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-26 22:13:54.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-26 22:13:54.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-26 22:13:54.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 22:13:54.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 22:13:54.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-26 22:13:54.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-26 22:13:54.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 22:13:54.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 22:13:54.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-26 22:13:54.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 22:13:54.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 22:13:54.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-26 22:13:54.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-26 22:13:54.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-26 22:13:54.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 22:13:54.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-26 22:13:54.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-26 22:13:54.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 22:13:54.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-26 22:13:54.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 22:13:54.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-26 22:13:54.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-26 22:13:54.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-26 22:13:54.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-26 22:13:54.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 22:13:54.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-26 22:13:54.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 22:13:54.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 22:13:54.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 22:13:54.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 22:13:54.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 22:13:54.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 22:13:54.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-26 22:13:54.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-26 22:13:54.374 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 22:13:54.398 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 22:13:54.398 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 22:13:54.398 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 22:13:54.406 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 22:13:54.406 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 22:13:56.693 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 22:13:56.709 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-26 22:17:29.250 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-26 22:17:29.453 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-26 22:17:29.547 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-26 22:17:29.578 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-26 22:17:29.578 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-26 22:17:29.609 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-26 22:17:29.687 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-26 22:17:29.859 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-26 22:17:29.859 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-26 22:17:29.859 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-26 22:17:29.875 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-26 22:17:29.890 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-26 22:17:29.890 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-26 22:17:29.906 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-26 22:17:29.906 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-26 22:17:30.047 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-26 22:17:30.047 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-26 22:17:30.047 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-26 22:17:30.078 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-26 22:17:30.203 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-26 22:17:30.219 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-26 22:17:30.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 22:17:30.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 22:17:30.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-26 22:17:30.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-26 22:17:30.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-26 22:17:30.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-26 22:17:30.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-26 22:17:30.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-26 22:17:30.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 22:17:30.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 22:17:30.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-26 22:17:30.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 22:17:30.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-26 22:17:30.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 22:17:30.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-26 22:17:30.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-26 22:17:30.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-26 22:17:30.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-26 22:17:30.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-26 22:17:30.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-26 22:17:30.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-26 22:17:30.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-26 22:17:30.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-26 22:17:30.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 22:17:30.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-26 22:17:30.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 22:17:30.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 22:17:30.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-26 22:17:30.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-26 22:17:30.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 22:17:30.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 22:17:30.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-26 22:17:30.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 22:17:30.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 22:17:30.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 22:17:30.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-26 22:17:30.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-26 22:17:30.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 22:17:30.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 22:17:30.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-26 22:17:30.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 22:17:30.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 22:17:30.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-26 22:17:30.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-26 22:17:30.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-26 22:17:30.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 22:17:30.656 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-26 22:17:30.656 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-26 22:17:30.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 22:17:30.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-26 22:17:30.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 22:17:30.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-26 22:17:30.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-26 22:17:30.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-26 22:17:30.789 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-26 22:17:30.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 22:17:30.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-26 22:17:30.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-26 22:17:30.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-26 22:17:30.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-26 22:17:30.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-26 22:17:30.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-26 22:17:30.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-26 22:17:30.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-26 22:17:30.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-26 22:17:30.888 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-26 22:17:30.904 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-26 22:17:30.904 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-26 22:17:30.904 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-26 22:17:30.935 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-26 22:17:30.935 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-26 22:17:33.535 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-26 22:17:33.551 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-27 19:16:08.728 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-27 19:16:09.072 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-27 19:16:09.365 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-27 19:16:09.462 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-27 19:16:09.464 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-27 19:16:09.547 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-27 19:16:09.725 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-27 19:16:09.925 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-27 19:16:09.926 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-27 19:16:09.929 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-27 19:16:09.951 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-27 19:16:09.977 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-27 19:16:09.982 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-27 19:16:09.989 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-27 19:16:09.990 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-27 19:16:10.421 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-27 19:16:10.431 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-27 19:16:10.445 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-27 19:16:10.547 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-27 19:16:10.639 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-27 19:16:10.665 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-27 19:16:11.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:16:11.048 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:16:11.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:16:11.052 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-27 19:16:11.056 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-27 19:16:11.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-27 19:16:11.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:16:11.064 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:16:11.065 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:16:11.068 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:16:11.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:16:11.070 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:16:11.074 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:16:11.075 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:16:11.076 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:16:11.082 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:16:11.084 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:16:11.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:16:11.090 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:16:11.091 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:16:11.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:16:11.097 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:16:11.098 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:16:11.099 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:16:11.102 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:16:11.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:16:11.106 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:16:11.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-27 19:16:11.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-27 19:16:11.113 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-27 19:16:11.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-27 19:16:11.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-27 19:16:11.122 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-27 19:16:11.128 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-27 19:16:11.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-27 19:16:11.134 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-27 19:16:11.136 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-27 19:16:11.141 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-27 19:16:11.141 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-27 19:16:11.148 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-27 19:16:11.149 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-27 19:16:11.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:16:11.162 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:16:11.163 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:16:11.170 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-27 19:16:11.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:16:11.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:16:11.176 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:16:11.179 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-27 19:16:11.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-27 19:16:11.185 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-27 19:16:11.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-27 19:16:11.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-27 19:16:11.194 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-27 19:16:11.195 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-27 19:16:11.200 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-27 19:16:11.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-27 19:16:11.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-27 19:16:11.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-27 19:16:11.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-27 19:16:11.216 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:16:11.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:16:11.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:16:11.221 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:16:11.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:16:11.223 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:16:11.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-27 19:16:11.229 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:16:11.229 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:16:11.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:16:11.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:16:11.235 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:16:11.236 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:16:11.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-27 19:16:11.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-27 19:16:11.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-27 19:16:11.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-27 19:16:11.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-27 19:16:11.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-27 19:16:11.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-27 19:16:11.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-27 19:16:11.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-27 19:16:11.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-27 19:16:11.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-27 19:16:11.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-27 19:16:11.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-27 19:16:11.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-27 19:16:11.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-27 19:16:11.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-27 19:16:11.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-27 19:16:11.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-27 19:16:11.356 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-27 19:16:11.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-27 19:16:11.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-27 19:16:11.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-27 19:16:11.411 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-27 19:16:11.430 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-27 19:16:11.431 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-27 19:16:11.432 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-27 19:16:11.449 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-27 19:16:11.450 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-27 19:16:14.908 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-27 19:16:14.930 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-27 19:22:04.906 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-27 19:22:05.241 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-27 19:22:05.345 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-27 19:22:05.383 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 's1'
2022-01-27 19:22:05.386 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'd1'
2022-01-27 19:22:05.423 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-27 19:22:05.544 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-27 19:22:05.744 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-27 19:22:05.746 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-27 19:22:05.751 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-27 19:22:05.771 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-27 19:22:05.789 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-27 19:22:05.795 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-27 19:22:05.802 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-27 19:22:05.803 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-27 19:22:06.001 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-27 19:22:06.011 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-27 19:22:06.019 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-27 19:22:06.071 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-27 19:22:06.170 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-27 19:22:06.240 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-27 19:22:06.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:22:06.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:22:06.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:22:06.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-27 19:22:06.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-27 19:22:06.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-27 19:22:06.571 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:22:06.572 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:22:06.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:22:06.579 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:22:06.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:22:06.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:22:06.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:22:06.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:22:06.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:22:06.600 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:22:06.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:22:06.608 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:22:06.612 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:22:06.615 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:22:06.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:22:06.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:22:06.632 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:22:06.632 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:22:06.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:22:06.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:22:06.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:22:06.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-27 19:22:06.649 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-27 19:22:06.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-27 19:22:06.966 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-27 19:22:06.977 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-27 19:22:06.978 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-27 19:22:06.987 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-27 19:22:06.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-27 19:22:07.001 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-27 19:22:07.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-27 19:22:07.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-27 19:22:07.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-27 19:22:07.053 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-27 19:22:07.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-27 19:22:07.083 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:22:07.089 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:22:07.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:22:07.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-27 19:22:07.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:22:07.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:22:07.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:22:07.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-27 19:22:07.118 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-27 19:22:07.119 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-27 19:22:07.122 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-27 19:22:07.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-27 19:22:07.131 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-27 19:22:07.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-27 19:22:07.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-27 19:22:07.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-27 19:22:07.145 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-27 19:22:07.146 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-27 19:22:07.149 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-27 19:22:07.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:22:07.156 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:22:07.157 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:22:07.160 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:22:07.161 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:22:07.163 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:22:07.167 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-27 19:22:07.170 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:22:07.172 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:22:07.173 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:22:07.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:22:07.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:22:07.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:22:07.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-27 19:22:07.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-27 19:22:07.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-27 19:22:07.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-27 19:22:07.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-27 19:22:07.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-27 19:22:07.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-27 19:22:07.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-27 19:22:07.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-27 19:22:07.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-27 19:22:07.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-27 19:22:07.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-27 19:22:07.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-27 19:22:07.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-27 19:22:07.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-27 19:22:07.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-27 19:22:07.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-27 19:22:07.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-27 19:22:07.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-27 19:22:07.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-27 19:22:07.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-27 19:22:07.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-27 19:22:07.390 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-27 19:22:07.449 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-27 19:22:07.452 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-27 19:22:07.454 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-27 19:22:07.475 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-27 19:22:07.477 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-27 19:22:10.198 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-27 19:22:10.215 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 's1' while setting bean property 'service'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 's1' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'd1' while setting bean property 'dao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'd1' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-27 19:30:55.172 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-27 19:30:55.445 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-27 19:30:55.535 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-27 19:30:55.572 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-27 19:30:55.574 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-27 19:30:55.610 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-27 19:30:55.702 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-27 19:30:55.855 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-27 19:30:55.856 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-27 19:30:55.861 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-27 19:30:55.874 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-27 19:30:55.891 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-27 19:30:55.896 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-27 19:30:55.903 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-27 19:30:55.904 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-27 19:30:56.107 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-27 19:30:56.111 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-27 19:30:56.115 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-27 19:30:56.143 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-27 19:30:56.222 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-27 19:30:56.247 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-27 19:30:56.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-27 19:30:56.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-27 19:30:56.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-27 19:30:56.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-27 19:30:56.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-27 19:30:56.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-27 19:30:56.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-27 19:30:56.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-27 19:30:56.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-27 19:30:56.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-27 19:30:56.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-27 19:30:56.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-27 19:30:56.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-27 19:30:56.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-27 19:30:56.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-27 19:30:56.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-27 19:30:56.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-27 19:30:56.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-27 19:30:56.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-27 19:30:56.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-27 19:30:56.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-27 19:30:56.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-27 19:30:56.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-27 19:30:56.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-27 19:30:56.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-27 19:30:56.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-27 19:30:56.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-27 19:30:56.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-27 19:30:56.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-27 19:30:56.571 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-27 19:30:56.572 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-27 19:30:56.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-27 19:30:56.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-27 19:30:56.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-27 19:30:56.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-27 19:30:56.586 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-27 19:30:56.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-27 19:30:56.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-27 19:30:56.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-27 19:30:56.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-27 19:30:56.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-27 19:30:56.606 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-27 19:30:56.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-27 19:30:56.608 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-27 19:30:56.613 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-27 19:30:56.627 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-27 19:30:56.628 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-27 19:30:56.629 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-27 19:30:56.632 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-27 19:30:56.635 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-27 19:30:56.636 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-27 19:30:56.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-27 19:30:56.640 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-27 19:30:56.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-27 19:30:56.643 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-27 19:30:56.646 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-27 19:30:56.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-27 19:30:56.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-27 19:30:56.653 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-27 19:30:56.655 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-27 19:30:56.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-27 19:30:56.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-27 19:30:56.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-27 19:30:56.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-27 19:30:56.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-27 19:30:56.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-27 19:30:56.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-27 19:30:56.671 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-27 19:30:56.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-27 19:30:56.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-27 19:30:56.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-27 19:30:56.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-27 19:30:56.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-27 19:30:56.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-27 19:30:56.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-27 19:30:56.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-27 19:30:56.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-27 19:30:56.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-27 19:30:56.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-27 19:30:56.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-27 19:30:56.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-27 19:30:56.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-27 19:30:56.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-27 19:30:56.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-27 19:30:56.741 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-27 19:30:56.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-27 19:30:56.754 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-27 19:30:56.757 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-27 19:30:56.758 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-27 19:30:56.761 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-27 19:30:56.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-27 19:30:56.763 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-27 19:30:56.764 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-27 19:30:56.767 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-27 19:30:56.769 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-27 19:30:56.821 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-27 19:30:56.837 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-27 19:30:56.838 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-27 19:30:56.839 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-27 19:30:56.846 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-27 19:30:56.847 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-27 19:30:59.128 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-27 19:30:59.145 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'dao' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-27 19:46:33.047 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-27 19:46:33.326 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-27 19:46:33.476 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-27 19:46:33.574 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-27 19:46:33.575 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-27 19:46:33.643 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-27 19:46:33.792 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-27 19:46:34.043 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-27 19:46:34.044 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-27 19:46:34.049 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-27 19:46:34.063 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-27 19:46:34.083 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-27 19:46:34.087 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-27 19:46:34.093 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-27 19:46:34.094 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-27 19:46:34.327 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-27 19:46:34.333 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-27 19:46:34.337 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-27 19:46:34.370 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-27 19:46:34.437 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-27 19:46:34.467 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-27 19:46:34.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:46:34.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:46:34.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-27 19:46:34.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-27 19:46:34.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-27 19:46:34.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-27 19:46:34.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:46:34.702 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:46:34.704 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-27 19:46:34.708 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:46:34.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:46:34.710 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-27 19:46:34.714 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:46:34.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:46:34.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-27 19:46:34.721 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:46:34.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:46:34.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-27 19:46:34.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:46:34.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:46:34.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-27 19:46:34.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:46:34.734 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:46:34.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-27 19:46:34.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:46:34.743 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:46:34.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-27 19:46:34.749 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-27 19:46:34.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-27 19:46:34.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-27 19:46:34.755 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-27 19:46:34.764 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-27 19:46:34.764 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-27 19:46:34.767 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-27 19:46:34.770 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-27 19:46:34.774 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-27 19:46:34.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-27 19:46:34.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-27 19:46:34.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-27 19:46:34.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-27 19:46:34.786 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-27 19:46:34.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:46:34.792 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:46:34.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-27 19:46:34.800 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-27 19:46:34.804 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:46:34.804 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:46:34.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-27 19:46:34.808 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-27 19:46:34.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-27 19:46:34.814 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-27 19:46:34.816 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-27 19:46:34.817 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-27 19:46:34.820 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-27 19:46:34.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-27 19:46:34.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-27 19:46:34.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-27 19:46:34.830 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-27 19:46:34.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-27 19:46:34.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-27 19:46:34.835 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:46:34.836 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:46:34.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-27 19:46:34.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:46:34.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:46:34.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-27 19:46:34.849 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-27 19:46:34.853 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:46:34.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:46:34.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-27 19:46:34.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:46:34.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:46:34.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-27 19:46:34.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-27 19:46:34.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-27 19:46:34.877 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-27 19:46:34.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-27 19:46:34.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-27 19:46:34.890 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-27 19:46:34.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-27 19:46:34.901 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-27 19:46:34.902 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-27 19:46:34.905 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-27 19:46:34.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-27 19:46:34.911 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-27 19:46:34.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-27 19:46:34.921 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-27 19:46:34.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-27 19:46:34.924 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-27 19:46:34.925 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-27 19:46:34.926 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-27 19:46:34.926 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-27 19:46:34.927 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-27 19:46:34.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-27 19:46:34.933 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-27 19:46:34.983 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-27 19:46:35.002 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-27 19:46:35.004 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-27 19:46:35.005 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-27 19:46:35.019 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-27 19:46:35.020 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-27 19:46:37.503 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [createEntityManagerFactory] [org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:65)] - Unable to build entity manager factory
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:244) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:208) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.handleTypes(MetadataBuildingProcess.java:352) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:111) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:770) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:797) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58) ~[hibernate-entitymanager-5.0.4.Final.jar:5.0.4.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39) ~[hibernate-jpa-2.1-api-1.0.0.Final.jar:1.0.0.Final]
	at ma.cigma.pfe.dao.FactureDaoImpl.<init>(FactureDaoImpl.java:12) ~[classes/:?]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_271]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_271]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_271]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_271]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1707) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1452) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:619) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944) [spring-beans-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:144) [spring-context-5.3.13.jar:5.3.13]
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:85) [spring-context-5.3.13.jar:5.3.13]
	at ma.cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:15) [classes/:?]
Caused by: org.hibernate.exception.JDBCConnectionException: Error calling Driver#connect
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator$1$1.convert(BasicConnectionCreator.java:105) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:123) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:835) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:455) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:240) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:199) ~[mysql-connector-java-8.0.16.jar:8.0.16]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.addConnections(PooledConnections.java:106) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:40) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:19) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.PooledConnections$Builder.build(PooledConnections.java:138) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:110) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:74) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:94) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:217) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:189) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:88) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:234) ~[hibernate-core-5.0.4.Final.jar:5.0.4.Final]
	... 54 more
2022-01-27 19:46:37.519 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'dao' while setting bean property 'fdao'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dao' defined in class path resource [spring.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [ma.cigma.pfe.dao.FactureDaoImpl]: Constructor threw exception; nested exception is javax.persistence.PersistenceException: Unable to build entity manager factory
2022-01-29 21:04:29.389 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-29 21:04:29.671 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:04:29.764 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:04:29.796 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:04:29.796 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:04:29.843 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:04:29.936 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:04:30.186 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:04:30.186 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:04:30.202 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:04:30.217 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:04:30.233 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:04:30.249 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:04:30.249 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:04:30.264 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:04:30.592 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:04:30.592 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:04:30.608 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:04:30.639 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:04:30.717 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:04:30.749 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:04:31.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:04:31.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:04:31.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:04:31.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-29 21:04:31.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-29 21:04:31.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:04:31.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:04:31.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:04:31.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:04:31.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:04:31.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:04:31.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:04:31.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:04:31.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-29 21:04:31.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-29 21:04:31.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-29 21:04:31.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-29 21:04:31.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-29 21:04:31.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-29 21:04:31.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-29 21:04:31.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-29 21:04:31.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-29 21:04:31.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-29 21:04:31.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-29 21:04:31.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-29 21:04:31.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-29 21:04:31.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-29 21:04:31.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:04:31.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:04:31.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:04:31.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-29 21:04:31.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:04:31.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:04:31.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:04:31.124 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-29 21:04:31.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-29 21:04:31.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-29 21:04:31.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-29 21:04:31.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:04:31.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:04:31.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:04:31.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:04:31.155 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:04:31.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:04:31.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-29 21:04:31.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:04:31.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:04:31.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:04:31.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:04:31.171 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:04:31.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:04:31.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-29 21:04:31.186 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-29 21:04:31.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-29 21:04:31.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-29 21:04:31.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-29 21:04:31.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-29 21:04:31.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-29 21:04:31.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-29 21:04:31.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-29 21:04:31.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-29 21:04:31.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-29 21:04:31.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-29 21:04:31.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-29 21:04:31.467 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:04:31.499 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:04:31.499 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:04:31.499 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:04:31.530 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:04:31.530 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:04:33.643 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:04:33.643 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:04:33.643 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:04:33.674 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:04:33.705 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:04:33.768 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:04:33.768 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:04:33.830 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:04:33.846 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:04:33.846 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:04:33.846 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:04:33.846 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:04:33.846 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:04:33.971 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:04:34.018 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:04:34.064 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:04:34.080 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 21:04:34.080 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFacture
2022-01-29 21:04:34.127 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:04:34.127 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:04:34.127 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:04:34.127 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:04:34.143 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:04:34.158 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:04:34.158 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:04:34.158 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:04:34.158 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfacture]
2022-01-29 21:04:34.236 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:04:34.252 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@425357dd
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:04:34.268 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:04:34.283 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:04:34.408 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:04:34.408 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:04:34.408 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e6ee0bc, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:04:34.439 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:04:34.455 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:04:34.611 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:04:34.611 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:04:34.643 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:04:34.643 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:04:34.736 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:04:34.736 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFacture where id =?
2022-01-29 21:04:34.736 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFacture facture_ where facture_.id=?
2022-01-29 21:04:34.736 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFacture (amount, date, id) values (?, ?, ?)
2022-01-29 21:04:34.736 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFacture set amount=?, date=? where id=?
2022-01-29 21:04:34.736 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFacture where id=?
2022-01-29 21:04:34.736 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFacture (amount, date) values (?, ?)
2022-01-29 21:04:34.799 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
2022-01-29 21:04:34.799 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.799 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.799 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.830 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.846 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.861 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.877 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:04:34.893 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:04:34.908 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:04:34.908 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:04:34.908 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:04:34.939 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:04:34.939 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:04:34.939 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFacture
2022-01-29 21:04:35.002 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: drop table if exists TFacture
2022-01-29 21:04:35.002 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Cannot drop table 'tfacture' referenced by a foreign key constraint 'FK1bdmoaac960s2dyy111r6g5bo' on table 'produit'.
2022-01-29 21:04:35.002 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFacture (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:04:35.002 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: create table TFacture (id bigint not null auto_increment, amount double precision, date datetime, primary key (id))
2022-01-29 21:04:35.002 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Table 'tfacture' already exists
2022-01-29 21:04:35.018 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:04:35.018 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:04:35.018 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:04:35.018 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:04:35.018 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:04:35.018 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:04:35.033 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e134896
2022-01-29 21:04:35.033 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 89cc08a7-174c-4bf4-8cb3-463412edbfd3 (<unnamed>)
2022-01-29 21:04:35.033 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:04:35.049 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:04:35.205 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4fcc0416
2022-01-29 21:04:35.205 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:04:35.471 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:04:35.752 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Initialization of bean failed; nested exception is org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'ma.cigma.pfe.dao.FactureDaoImpl' to required type 'ma.cigma.pfe.service.IFactureService' for property 'fdao'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'ma.cigma.pfe.dao.FactureDaoImpl' to required type 'ma.cigma.pfe.service.IFactureService' for property 'fdao': no matching editors or conversion strategy found
2022-01-29 21:05:03.664 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 21:11:34.037 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 21:11:34.381 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:11:34.475 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:11:34.506 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:11:34.506 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:11:34.553 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:11:34.631 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:11:34.881 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:11:34.881 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:11:34.881 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:11:34.928 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:11:34.944 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:11:34.959 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:11:34.975 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:11:34.975 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:11:35.225 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:11:35.225 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:11:35.225 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:11:35.272 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:11:35.397 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:11:35.444 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:11:35.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:11:35.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:11:35.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:11:35.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 21:11:35.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 21:11:35.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 21:11:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:11:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:11:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:11:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:11:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:11:35.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:11:35.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:11:35.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:11:35.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:11:35.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:11:35.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:11:35.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:11:35.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:11:35.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:11:35.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:11:35.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:11:35.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:11:35.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:11:35.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:11:35.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 21:11:35.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 21:11:35.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:11:35.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:11:35.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 21:11:35.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 21:11:35.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:11:35.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:11:35.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:11:35.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:11:35.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:11:35.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:11:35.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:11:35.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:11:35.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 21:11:35.803 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 21:11:35.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:11:35.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:11:35.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 21:11:35.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:11:35.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:11:35.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:11:35.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:11:35.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 21:11:35.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 21:11:35.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 21:11:35.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:11:35.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:11:35.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 21:11:36.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 21:11:36.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:11:36.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:11:36.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:11:36.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:11:36.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:11:36.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:11:36.069 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:11:36.115 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:11:36.115 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:11:36.115 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:11:36.131 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:11:36.131 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:11:39.413 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:11:39.413 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:11:39.413 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:11:39.444 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:11:39.491 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:11:39.569 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:11:39.569 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:11:39.632 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:11:39.632 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:11:39.632 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:11:39.632 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:11:39.632 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:11:39.648 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:11:39.648 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:11:39.648 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:11:39.648 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:11:39.648 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:11:39.648 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:11:39.663 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:11:39.663 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:11:39.663 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:11:39.757 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:11:39.851 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:11:39.898 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:11:39.913 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 21:11:39.929 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFacture
2022-01-29 21:11:39.976 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:11:39.991 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:11:39.991 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:11:40.007 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:11:40.007 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:11:40.022 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:11:40.038 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfacture]
2022-01-29 21:11:40.116 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:11:40.132 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:11:40.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:11:40.257 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:11:40.272 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:11:40.272 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:11:40.304 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:11:40.319 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:11:40.570 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:11:40.570 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:11:40.617 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:11:40.632 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:11:40.757 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:11:40.773 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFacture where id =?
2022-01-29 21:11:40.773 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFacture facture_ where facture_.id=?
2022-01-29 21:11:40.773 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFacture (amount, date, id) values (?, ?, ?)
2022-01-29 21:11:40.773 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFacture set amount=?, date=? where id=?
2022-01-29 21:11:40.773 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFacture where id=?
2022-01-29 21:11:40.773 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFacture (amount, date) values (?, ?)
2022-01-29 21:11:40.851 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-01-29 21:11:40.851 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.851 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.851 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.882 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.882 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.898 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.914 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:11:40.929 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:11:40.945 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:11:40.960 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:11:40.960 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:11:40.960 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:11:40.996 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:11:40.997 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:11:41.001 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFacture
2022-01-29 21:11:41.048 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: drop table if exists TFacture
2022-01-29 21:11:41.048 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Cannot drop table 'tfacture' referenced by a foreign key constraint 'FK1bdmoaac960s2dyy111r6g5bo' on table 'produit'.
2022-01-29 21:11:41.048 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFacture (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:11:41.048 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: create table TFacture (id bigint not null auto_increment, amount double precision, date datetime, primary key (id))
2022-01-29 21:11:41.048 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Table 'tfacture' already exists
2022-01-29 21:11:41.048 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:11:41.064 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:11:41.064 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:11:41.064 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:11:41.080 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:11:41.080 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:11:41.080 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@349d0836
2022-01-29 21:11:41.080 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: eec35997-4343-4587-a2cd-7383b0586e6e (<unnamed>)
2022-01-29 21:11:41.080 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:11:41.095 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:11:41.189 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@56de6d6b
2022-01-29 21:11:41.189 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:11:41.314 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:11:41.423 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Initialization of bean failed; nested exception is org.springframework.beans.ConversionNotSupportedException: Failed to convert property value of type 'ma.cigma.pfe.dao.FactureDaoImpl' to required type 'ma.cigma.pfe.service.IFactureService' for property 'fdao'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'ma.cigma.pfe.dao.FactureDaoImpl' to required type 'ma.cigma.pfe.service.IFactureService' for property 'fdao': no matching editors or conversion strategy found
2022-01-29 21:12:09.411 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 21:15:58.929 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-29 21:15:59.429 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:15:59.632 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:15:59.679 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:15:59.679 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:15:59.772 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:15:59.976 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:16:00.257 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:16:00.257 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:16:00.257 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:16:00.272 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:16:00.288 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:16:00.288 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:16:00.304 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:16:00.304 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:16:00.460 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:16:00.460 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:16:00.460 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:16:00.507 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:16:00.647 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:16:00.663 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:16:00.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:16:00.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:16:00.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:16:00.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-29 21:16:00.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-29 21:16:00.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-29 21:16:00.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:16:00.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:16:00.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:16:00.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:16:00.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:16:00.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:16:00.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-29 21:16:00.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-29 21:16:00.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-29 21:16:00.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-29 21:16:00.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-29 21:16:00.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-29 21:16:00.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-29 21:16:00.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-29 21:16:00.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-29 21:16:00.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-29 21:16:00.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-29 21:16:00.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-29 21:16:00.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-29 21:16:01.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-29 21:16:01.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:16:01.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:16:01.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:16:01.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-29 21:16:01.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-29 21:16:01.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:16:01.054 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:16:01.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:16:01.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:16:01.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-29 21:16:01.069 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-29 21:16:01.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-29 21:16:01.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-29 21:16:01.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-29 21:16:01.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-29 21:16:01.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-29 21:16:01.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-29 21:16:01.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-29 21:16:01.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-29 21:16:01.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-29 21:16:01.116 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-29 21:16:01.116 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-29 21:16:01.116 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-29 21:16:01.132 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-29 21:16:01.194 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:16:01.210 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:16:01.210 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:16:01.210 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:16:01.241 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:16:01.241 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:16:03.258 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:16:03.258 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:16:03.258 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:16:03.274 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:16:03.305 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:16:03.368 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:16:03.368 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:16:03.415 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:16:03.415 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:16:03.415 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:16:03.415 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:16:03.415 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:16:03.430 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:16:03.508 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:16:03.602 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:16:03.633 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:16:03.649 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 21:16:03.649 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFacture
2022-01-29 21:16:03.696 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:16:03.712 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:16:03.712 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:16:03.712 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:16:03.712 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:16:03.727 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:16:03.743 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:16:03.743 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:16:03.743 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:16:03.743 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfacture]
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@425357dd
2022-01-29 21:16:03.852 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:16:03.868 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:16:03.962 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:16:03.962 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:16:03.962 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e6ee0bc, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:16:03.993 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:16:03.993 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:16:04.118 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:16:04.118 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:16:04.133 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:16:04.133 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:16:04.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:16:04.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFacture where id =?
2022-01-29 21:16:04.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFacture facture_ where facture_.id=?
2022-01-29 21:16:04.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFacture (amount, date, id) values (?, ?, ?)
2022-01-29 21:16:04.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFacture set amount=?, date=? where id=?
2022-01-29 21:16:04.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFacture where id=?
2022-01-29 21:16:04.274 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFacture (amount, date) values (?, ?)
2022-01-29 21:16:04.337 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
2022-01-29 21:16:04.337 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.337 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.337 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.368 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.383 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.399 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.415 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.430 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:16:04.446 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-01-29 21:16:04.446 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:16:04.446 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:16:04.446 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:16:04.446 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:16:04.446 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:16:04.446 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:16:04.462 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:16:04.462 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:16:04.462 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:16:04.493 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:16:04.493 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:16:04.493 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFacture
2022-01-29 21:16:04.540 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: drop table if exists TFacture
2022-01-29 21:16:04.540 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Cannot drop table 'tfacture' referenced by a foreign key constraint 'FK1bdmoaac960s2dyy111r6g5bo' on table 'produit'.
2022-01-29 21:16:04.540 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFacture (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:16:04.540 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: create table TFacture (id bigint not null auto_increment, amount double precision, date datetime, primary key (id))
2022-01-29 21:16:04.540 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Table 'tfacture' already exists
2022-01-29 21:16:04.540 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:16:04.540 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:16:04.540 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:16:04.555 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:16:04.555 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:16:04.555 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:16:04.555 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e134896
2022-01-29 21:16:04.555 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 02186189-f26a-450c-b896-5cb4fc73f7a0 (<unnamed>)
2022-01-29 21:16:04.555 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:16:04.571 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:16:04.665 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4fcc0416
2022-01-29 21:16:04.665 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:16:04.821 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:16:33.271 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 21:25:46.238 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 21:25:46.535 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:25:46.676 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:25:46.722 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:25:46.722 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:25:46.769 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:25:46.847 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:25:47.019 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:25:47.019 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:25:47.019 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:25:47.035 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:25:47.051 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:25:47.066 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:25:47.066 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:25:47.066 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:25:47.254 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:25:47.254 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:25:47.254 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:25:47.301 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:25:47.367 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:25:47.399 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:25:47.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:25:47.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:25:47.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:25:47.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 21:25:47.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 21:25:47.602 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:25:47.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:25:47.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:25:47.649 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:25:47.649 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:25:47.649 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:25:47.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:25:47.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:25:47.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:25:47.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:25:47.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:25:47.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:25:47.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 21:25:47.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 21:25:47.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:25:47.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:25:47.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 21:25:47.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 21:25:47.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:25:47.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:25:47.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:25:47.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:25:47.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:25:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 21:25:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:25:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:25:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:25:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 21:25:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:25:47.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:25:47.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:25:47.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 21:25:47.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:25:47.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:25:47.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:25:47.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:25:47.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:25:47.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:25:47.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 21:25:47.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:25:47.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:25:47.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:25:47.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:25:47.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:25:47.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:25:47.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 21:25:47.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 21:25:47.938 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:25:47.938 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:25:47.938 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 21:25:48.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:25:48.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:25:48.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:25:48.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:25:48.016 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 21:25:48.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 21:25:48.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 21:25:48.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:25:48.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:25:48.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 21:25:48.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 21:25:48.047 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:25:48.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:25:48.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:25:48.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:25:48.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:25:48.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:25:48.141 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:25:48.230 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:25:48.230 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:25:48.230 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:25:48.245 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:25:48.245 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:25:50.875 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:25:50.875 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:25:50.875 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:25:50.890 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:25:50.922 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:25:50.984 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:25:51.000 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:25:51.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:25:51.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:25:51.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:25:51.047 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:25:51.062 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:25:51.078 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:25:51.140 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:25:51.203 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:25:51.250 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:25:51.265 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 21:25:51.265 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFacture
2022-01-29 21:25:51.312 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:25:51.328 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:25:51.328 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:25:51.328 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:25:51.343 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:25:51.359 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:25:51.359 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:25:51.359 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:25:51.359 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfacture]
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:25:51.453 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:25:51.468 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:25:51.562 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:25:51.562 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:25:51.562 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:25:51.593 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:25:51.609 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:25:51.734 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:25:51.734 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:25:51.765 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:25:51.765 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:25:51.953 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:25:51.953 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFacture where id =?
2022-01-29 21:25:51.953 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFacture facture_ where facture_.id=?
2022-01-29 21:25:51.953 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFacture (amount, date, id) values (?, ?, ?)
2022-01-29 21:25:51.953 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFacture set amount=?, date=? where id=?
2022-01-29 21:25:51.953 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFacture where id=?
2022-01-29 21:25:51.953 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFacture (amount, date) values (?, ?)
2022-01-29 21:25:52.031 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-01-29 21:25:52.031 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.031 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.031 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.062 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.078 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.078 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:25:52.078 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-01-29 21:25:52.078 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.078 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.078 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.078 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.093 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.109 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.125 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.140 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:25:52.156 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:25:52.234 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:25:52.234 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:25:52.234 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:25:52.281 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:25:52.281 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:25:52.281 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFacture
2022-01-29 21:25:52.337 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: drop table if exists TFacture
2022-01-29 21:25:52.338 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Cannot drop table 'tfacture' referenced by a foreign key constraint 'FK1bdmoaac960s2dyy111r6g5bo' on table 'produit'.
2022-01-29 21:25:52.338 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFacture (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:25:52.341 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: create table TFacture (id bigint not null auto_increment, amount double precision, date datetime, primary key (id))
2022-01-29 21:25:52.341 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Table 'tfacture' already exists
2022-01-29 21:25:52.345 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:25:52.346 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:25:52.348 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:25:52.354 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:25:52.359 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:25:52.359 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:25:52.364 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@349d0836
2022-01-29 21:25:52.369 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: f9eb9307-0cce-426f-8e1a-8650a45184e2 (<unnamed>)
2022-01-29 21:25:52.369 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:25:52.380 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:25:52.523 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@56de6d6b
2022-01-29 21:25:52.523 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:25:52.648 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:26:20.887 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 21:32:09.395 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-29 21:32:09.758 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:32:09.975 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:32:10.076 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:32:10.083 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:32:10.135 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:32:10.292 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:32:10.466 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:32:10.468 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:32:10.472 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:32:10.483 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:32:10.506 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:32:10.512 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:32:10.522 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:32:10.523 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:32:10.724 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:32:10.730 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:32:10.735 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:32:10.785 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:32:10.883 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:32:10.960 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:32:11.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:32:11.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:32:11.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-29 21:32:11.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-29 21:32:11.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-29 21:32:11.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-29 21:32:11.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:32:11.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:32:11.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-29 21:32:11.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:32:11.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:32:11.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-29 21:32:11.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:32:11.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:32:11.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-29 21:32:11.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:32:11.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:32:11.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-29 21:32:11.298 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:32:11.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:32:11.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-29 21:32:11.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:32:11.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:32:11.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-29 21:32:11.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:32:11.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:32:11.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-29 21:32:11.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-29 21:32:11.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-29 21:32:11.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-29 21:32:11.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-29 21:32:11.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-29 21:32:11.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-29 21:32:11.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-29 21:32:11.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-29 21:32:11.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-29 21:32:11.355 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-29 21:32:11.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-29 21:32:11.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-29 21:32:11.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-29 21:32:11.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-29 21:32:11.372 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:32:11.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:32:11.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-29 21:32:11.391 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-29 21:32:11.395 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:32:11.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:32:11.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-29 21:32:11.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-29 21:32:11.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-29 21:32:11.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-29 21:32:11.407 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-29 21:32:11.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-29 21:32:11.413 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-29 21:32:11.414 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-29 21:32:11.418 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-29 21:32:11.419 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-29 21:32:11.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-29 21:32:11.424 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-29 21:32:11.426 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-29 21:32:11.432 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:32:11.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:32:11.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-29 21:32:11.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:32:11.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:32:11.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-29 21:32:11.454 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-29 21:32:11.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:32:11.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:32:11.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-29 21:32:11.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:32:11.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:32:11.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-29 21:32:11.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-29 21:32:11.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-29 21:32:11.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-29 21:32:11.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-29 21:32:11.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-29 21:32:11.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-29 21:32:11.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-29 21:32:11.525 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-29 21:32:11.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-29 21:32:11.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-29 21:32:11.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-29 21:32:11.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-29 21:32:11.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-29 21:32:11.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-29 21:32:11.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:32:11.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:32:11.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:32:11.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:32:11.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:32:11.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:32:11.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-29 21:32:11.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-29 21:32:11.605 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:32:11.626 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:32:11.631 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:32:11.632 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:32:11.645 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:32:11.646 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:32:14.259 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:32:14.260 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:32:14.261 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:32:14.281 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:32:14.306 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:32:14.374 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:32:14.378 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:32:14.431 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:32:14.432 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:32:14.433 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:32:14.434 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:32:14.435 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:32:14.437 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:32:14.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:32:14.442 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:32:14.445 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:32:14.447 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:32:14.448 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:32:14.449 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:32:14.450 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:32:14.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:32:14.522 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:32:14.589 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:32:14.634 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:32:14.651 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 21:32:14.656 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFacture
2022-01-29 21:32:14.705 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:32:14.712 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:32:14.716 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:32:14.718 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:32:14.722 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:32:14.729 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:32:14.729 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:32:14.730 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:32:14.731 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:32:14.732 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:32:14.733 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFacture), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:32:14.736 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:32:14.739 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:32:14.740 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:32:14.741 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:32:14.745 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:32:14.746 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:32:14.747 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:32:14.750 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfacture]
2022-01-29 21:32:14.827 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:32:14.829 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:32:14.830 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:32:14.830 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:32:14.830 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:32:14.831 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:32:14.831 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:32:14.832 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:32:14.832 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:32:14.833 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:32:14.833 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:32:14.833 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:32:14.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:32:14.834 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:32:14.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:32:14.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:32:14.835 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:32:14.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:32:14.836 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:32:14.837 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:32:14.838 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:32:14.838 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:32:14.838 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@425357dd
2022-01-29 21:32:14.839 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:32:14.839 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:32:14.841 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:32:14.842 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:32:14.843 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:32:14.844 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:32:14.844 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:32:14.845 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:32:14.845 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:32:14.846 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:32:14.846 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:32:14.847 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:32:14.847 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:32:14.937 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:32:14.944 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:32:14.945 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e6ee0bc, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:32:14.974 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:32:14.985 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:32:15.104 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:32:15.105 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:32:15.134 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:32:15.134 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:32:15.218 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:32:15.219 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFacture where id =?
2022-01-29 21:32:15.219 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFacture facture_ where facture_.id=?
2022-01-29 21:32:15.220 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFacture (amount, date, id) values (?, ?, ?)
2022-01-29 21:32:15.220 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFacture set amount=?, date=? where id=?
2022-01-29 21:32:15.220 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFacture where id=?
2022-01-29 21:32:15.221 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFacture (amount, date) values (?, ?)
2022-01-29 21:32:15.268 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
2022-01-29 21:32:15.271 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.272 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.273 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.310 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.318 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.322 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:32:15.322 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 21:32:15.323 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.323 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.324 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.324 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.325 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.327 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:32:15.328 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 21:32:15.329 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.330 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.331 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.332 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.332 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.333 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:32:15.334 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 21:32:15.335 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.335 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.336 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.337 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.337 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.338 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:32:15.339 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 21:32:15.339 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.340 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.340 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.341 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.343 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.345 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:32:15.345 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 21:32:15.346 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.347 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.348 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.349 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.350 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.350 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:32:15.351 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 21:32:15.352 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.352 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.353 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.354 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.355 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.355 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:32:15.356 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 21:32:15.357 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.358 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.358 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.359 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.360 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.361 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:32:15.362 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 21:32:15.362 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.363 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.363 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.364 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.365 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.365 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=? for update
2022-01-29 21:32:15.366 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 21:32:15.366 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.367 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.367 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.368 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.369 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.369 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:32:15.370 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-01-29 21:32:15.370 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:32:15.371 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:32:15.371 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:32:15.372 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:32:15.373 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:32:15.374 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:32:15.406 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:32:15.407 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFacture facture0_ where facture0_.id=?
2022-01-29 21:32:15.407 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:32:15.429 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:32:15.430 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:32:15.434 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFacture
2022-01-29 21:32:15.473 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: drop table if exists TFacture
2022-01-29 21:32:15.474 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Cannot drop table 'tfacture' referenced by a foreign key constraint 'FK1bdmoaac960s2dyy111r6g5bo' on table 'produit'.
2022-01-29 21:32:15.475 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFacture (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:32:15.478 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:483)] - HHH000389: Unsuccessful: create table TFacture (id bigint not null auto_increment, amount double precision, date datetime, primary key (id))
2022-01-29 21:32:15.479 ERROR [main][org.hibernate.tool.hbm2ddl.SchemaExport] [perform] [org.hibernate.tool.hbm2ddl.SchemaExport.perform(SchemaExport.java:484)] - Table 'tfacture' already exists
2022-01-29 21:32:15.481 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:32:15.482 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:32:15.483 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:32:15.490 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:32:15.494 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:32:15.494 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:32:15.498 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3e134896
2022-01-29 21:32:15.501 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 5a20510c-7e35-4257-bbf7-3acd830be018 (<unnamed>)
2022-01-29 21:32:15.502 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:32:15.511 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:32:15.605 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4fcc0416
2022-01-29 21:32:15.606 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:32:15.787 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:32:44.259 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 21:37:24.845 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 21:37:25.144 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:37:25.232 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:37:25.258 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:37:25.258 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:37:25.285 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:37:25.379 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:37:25.551 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:37:25.551 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:37:25.551 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:37:25.566 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:37:25.582 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:37:25.582 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:37:25.597 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:37:25.597 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:37:25.988 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:37:26.004 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:37:26.019 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:37:26.186 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:37:26.264 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:37:26.295 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:37:26.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:37:26.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:37:26.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:37:26.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 21:37:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 21:37:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 21:37:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:37:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:37:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:37:26.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:37:26.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:37:26.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:37:26.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:37:26.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:37:26.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:37:26.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:37:26.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:37:26.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:37:26.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:37:26.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:37:26.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:37:26.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:37:26.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:37:26.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:37:26.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:37:26.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:37:26.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 21:37:26.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 21:37:26.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:37:26.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:37:26.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 21:37:26.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 21:37:26.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:37:26.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:37:26.623 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:37:26.623 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:37:26.623 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:37:26.623 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 21:37:26.623 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:37:26.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:37:26.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:37:26.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:37:26.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:37:26.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:37:26.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 21:37:26.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:37:26.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:37:26.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:37:26.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:37:26.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:37:26.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:37:26.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 21:37:26.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 21:37:26.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:37:26.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:37:26.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 21:37:26.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:37:26.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:37:26.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:37:26.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:37:26.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 21:37:26.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 21:37:26.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 21:37:26.795 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:37:26.795 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:37:26.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:37:26.842 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:37:26.857 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:37:26.857 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:37:26.857 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:37:26.873 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:37:26.873 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:37:29.199 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:37:29.199 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:37:29.215 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:37:29.230 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:37:29.246 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:37:29.308 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:37:29.324 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:37:29.371 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:37:29.386 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:37:29.386 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:37:29.386 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:37:29.386 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:37:29.386 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:37:29.386 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:37:29.449 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:37:29.496 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:37:29.543 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:37:29.558 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TFactures
2022-01-29 21:37:29.558 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 21:37:29.621 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:37:29.621 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:37:29.621 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:37:29.636 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:37:29.652 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:37:29.652 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:37:29.652 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:37:29.652 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:37:29.652 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:37:29.730 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7dac3fd8
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:37:29.746 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:37:29.840 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:37:29.855 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:37:29.855 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e287667, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:37:29.871 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:37:29.871 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:37:29.933 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:37:29.933 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:37:29.965 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:37:29.965 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:37:30.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:37:30.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 21:37:30.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 21:37:30.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 21:37:30.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 21:37:30.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 21:37:30.090 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 21:37:30.136 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2424686b]
2022-01-29 21:37:30.136 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.136 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.136 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.152 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5caf08]
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70807224]
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400d912a]
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.168 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12477988]
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
2022-01-29 21:37:30.183 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d01dfa5]
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ff1390]
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781a9412]
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:37:30.199 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:37:30.215 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:37:30.215 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:37:30.230 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:37:30.230 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:37:30.230 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:37:30.246 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:37:30.246 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:37:30.261 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-29 21:37:30.293 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:37:30.340 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:37:30.340 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:37:30.340 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:37:30.355 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:37:30.355 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:37:30.355 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:37:30.355 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@43b0ade
2022-01-29 21:37:30.355 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: d9775fe6-5e8b-4458-abce-e48ff374db08 (<unnamed>)
2022-01-29 21:37:30.355 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:37:30.371 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:37:30.496 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@6a4d7f76
2022-01-29 21:37:30.496 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:37:30.621 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:37:59.222 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 21:41:09.685 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 21:41:10.001 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:41:10.079 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:41:10.111 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:41:10.111 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:41:10.142 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:41:10.236 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:41:10.379 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:41:10.379 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:41:10.379 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:41:10.394 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:41:10.426 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:41:10.426 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:41:10.426 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:41:10.441 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:41:10.629 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:41:10.629 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:41:10.629 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:41:10.676 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:41:10.760 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:41:10.781 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:41:10.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:41:10.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:41:10.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:41:10.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 21:41:10.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 21:41:10.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 21:41:10.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:41:10.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:41:10.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:41:10.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:41:10.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:41:10.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:41:10.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:41:11.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:41:11.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:41:11.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:41:11.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:41:11.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:41:11.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:41:11.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:41:11.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:41:11.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:41:11.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:41:11.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:41:11.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 21:41:11.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 21:41:11.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:41:11.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:41:11.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 21:41:11.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 21:41:11.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:41:11.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:41:11.076 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:41:11.076 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:41:11.076 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:41:11.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 21:41:11.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:41:11.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:41:11.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:41:11.092 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:41:11.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:41:11.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:41:11.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:41:11.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 21:41:11.154 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 21:41:11.170 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:41:11.170 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:41:11.170 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 21:41:11.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:41:11.201 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:41:11.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:41:11.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:41:11.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 21:41:11.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 21:41:11.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 21:41:11.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:41:11.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:41:11.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 21:41:11.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 21:41:11.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:41:11.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:41:11.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:41:11.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:41:11.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:41:11.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:41:11.313 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:41:11.329 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:41:11.329 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:41:11.329 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:41:11.344 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:41:11.344 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:41:13.746 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:41:13.746 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:41:13.747 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:41:13.759 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:41:13.775 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:41:13.845 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:41:13.845 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:41:13.892 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:41:13.892 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:41:13.892 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:41:13.907 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:41:13.975 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:41:14.037 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:41:14.069 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:41:14.084 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TFactures
2022-01-29 21:41:14.100 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 21:41:14.147 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:41:14.147 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:41:14.162 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:41:14.162 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:41:14.162 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:41:14.162 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:41:14.162 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:41:14.162 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:41:14.178 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:41:14.272 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7dac3fd8
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:41:14.287 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:41:14.303 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:41:14.393 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:41:14.393 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:41:14.393 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e287667, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:41:14.424 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:41:14.453 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:41:14.623 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:41:14.623 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:41:14.655 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:41:14.655 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:41:14.748 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:41:14.748 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 21:41:14.748 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 21:41:14.748 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 21:41:14.748 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 21:41:14.748 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 21:41:14.748 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 21:41:14.811 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2424686b]
2022-01-29 21:41:14.811 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:14.811 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:14.811 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:14.845 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:14.845 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:14.845 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:41:14.845 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5caf08]
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70807224]
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400d912a]
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:14.861 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:14.902 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:41:14.902 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
2022-01-29 21:41:14.902 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:14.902 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:14.902 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:14.902 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:14.918 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:14.933 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:41:14.949 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12477988]
2022-01-29 21:41:14.980 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:15.027 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:15.027 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:15.027 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:15.027 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:15.041 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:41:15.042 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
2022-01-29 21:41:15.043 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:15.043 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:15.044 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:15.045 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:15.046 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:15.047 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:41:15.047 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d01dfa5]
2022-01-29 21:41:15.048 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ff1390]
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781a9412]
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:41:15.049 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:41:15.065 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:41:15.096 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:41:15.096 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:41:15.096 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:41:15.158 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:41:15.158 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:41:15.158 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-29 21:41:15.221 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:41:15.283 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:41:15.283 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:41:15.283 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:41:15.283 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:41:15.299 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:41:15.299 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:41:15.299 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45f24169
2022-01-29 21:41:15.299 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: ded7e438-0533-4d78-9878-b2d1d63053fa (<unnamed>)
2022-01-29 21:41:15.299 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:41:15.315 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:41:15.425 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5f84abe8
2022-01-29 21:41:15.425 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:41:15.572 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:41:43.753 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 21:45:37.540 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 21:45:37.822 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 21:45:37.915 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 21:45:37.947 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 21:45:37.947 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 21:45:37.978 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 21:45:38.056 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 21:45:38.212 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 21:45:38.212 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 21:45:38.212 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 21:45:38.228 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 21:45:38.243 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 21:45:38.243 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 21:45:38.259 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 21:45:38.259 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 21:45:38.431 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 21:45:38.431 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 21:45:38.431 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 21:45:38.462 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 21:45:38.540 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 21:45:38.572 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 21:45:38.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:45:38.777 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:45:38.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 21:45:38.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 21:45:38.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 21:45:38.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 21:45:38.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:45:38.779 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:45:38.795 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:45:38.810 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 21:45:38.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:45:38.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:45:38.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 21:45:38.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:45:38.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:45:38.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 21:45:38.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:45:38.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:45:38.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 21:45:38.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:45:38.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 21:45:38.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:45:38.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 21:45:38.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:45:38.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 21:45:38.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 21:45:38.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 21:45:38.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:45:38.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 21:45:38.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 21:45:38.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 21:45:38.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:45:38.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 21:45:38.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:45:38.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:45:38.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 21:45:38.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 21:45:38.889 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:45:38.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:45:38.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 21:45:38.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:45:38.951 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:45:38.951 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 21:45:38.951 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 21:45:38.951 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 21:45:38.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:45:38.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 21:45:38.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 21:45:38.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:45:38.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 21:45:38.982 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:45:38.982 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 21:45:38.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 21:45:38.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 21:45:38.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 21:45:39.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:45:39.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 21:45:39.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 21:45:39.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 21:45:39.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 21:45:39.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 21:45:39.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 21:45:39.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 21:45:39.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 21:45:39.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 21:45:39.107 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 21:45:39.107 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 21:45:39.107 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 21:45:39.123 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 21:45:39.123 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 21:45:39.123 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 21:45:41.043 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 21:45:41.043 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 21:45:41.043 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 21:45:41.059 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 21:45:41.090 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 21:45:41.153 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 21:45:41.153 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 21:45:41.200 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 21:45:41.200 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 21:45:41.200 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:45:41.200 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 21:45:41.200 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 21:45:41.215 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 21:45:41.293 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 21:45:41.349 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 21:45:41.380 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 21:45:41.406 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name TFactures
2022-01-29 21:45:41.418 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 21:45:41.456 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 21:45:41.456 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 21:45:41.472 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 21:45:41.472 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 21:45:41.472 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 21:45:41.472 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 21:45:41.472 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 21:45:41.472 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 21:45:41.488 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 21:45:41.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7dac3fd8
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 21:45:41.581 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 21:45:41.597 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 21:45:41.597 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 21:45:41.597 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 21:45:41.706 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 21:45:41.706 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 21:45:41.706 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1e287667, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 21:45:41.738 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 21:45:41.738 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 21:45:41.847 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:45:41.847 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:45:41.894 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 21:45:41.894 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 21:45:42.066 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 21:45:42.066 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 21:45:42.066 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 21:45:42.066 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 21:45:42.066 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 21:45:42.066 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 21:45:42.066 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 21:45:42.112 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2424686b]
2022-01-29 21:45:42.112 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.112 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.112 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.144 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.144 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.144 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5caf08]
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70807224]
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.159 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.175 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:45:42.175 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400d912a]
2022-01-29 21:45:42.175 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.175 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.175 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.175 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.175 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.191 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:45:42.191 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
2022-01-29 21:45:42.191 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.191 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.191 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.191 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.191 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.206 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:45:42.206 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12477988]
2022-01-29 21:45:42.206 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.206 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.206 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.206 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.206 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d01dfa5]
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.222 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31ff1390]
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.237 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781a9412]
2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 21:45:42.253 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:45:42.316 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:45:42.331 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 21:45:42.331 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 21:45:42.378 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 21:45:42.378 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 21:45:42.394 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-29 21:45:42.487 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 21:45:42.550 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 21:45:42.550 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 21:45:42.550 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 21:45:42.550 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 21:45:42.566 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 21:45:42.566 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 21:45:42.566 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@45f24169
2022-01-29 21:45:42.566 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: deac1e8c-8085-4898-9cf0-27a8bd59e010 (<unnamed>)
2022-01-29 21:45:42.581 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 21:45:42.581 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 21:45:42.691 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@5f84abe8
2022-01-29 21:45:42.691 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 21:45:42.987 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 21:46:11.062 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 22:32:17.489 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 22:32:17.757 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 22:32:17.852 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 22:32:17.898 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 22:32:17.899 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 22:32:17.957 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 22:32:18.133 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 22:32:18.440 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 22:32:18.441 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 22:32:18.447 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 22:32:18.484 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 22:32:18.508 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 22:32:18.515 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 22:32:18.524 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 22:32:18.525 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 22:32:18.826 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 22:32:18.829 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 22:32:18.833 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 22:32:18.863 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 22:32:18.929 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 22:32:18.966 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 22:32:19.177 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:32:19.178 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:32:19.179 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:32:19.182 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 22:32:19.185 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 22:32:19.187 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 22:32:19.191 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:32:19.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:32:19.194 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:32:19.198 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:32:19.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:32:19.200 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:32:19.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:32:19.205 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:32:19.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:32:19.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:32:19.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:32:19.213 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:32:19.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:32:19.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:32:19.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:32:19.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:32:19.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:32:19.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:32:19.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:32:19.231 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:32:19.232 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:32:19.236 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:32:19.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:32:19.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:32:19.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:32:19.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:32:19.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:32:19.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 22:32:19.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 22:32:19.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:32:19.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:32:19.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 22:32:19.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 22:32:19.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:32:19.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:32:19.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:32:19.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:32:19.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:32:19.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 22:32:19.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:32:19.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:32:19.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:32:19.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 22:32:19.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:32:19.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:32:19.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:32:19.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:32:19.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:32:19.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:32:19.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:32:19.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:32:19.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:32:19.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:32:19.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 22:32:19.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:32:19.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:32:19.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:32:19.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:32:19.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:32:19.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:32:19.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 22:32:19.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:32:19.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:32:19.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:32:19.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:32:19.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:32:19.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:32:19.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 22:32:19.335 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 22:32:19.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:32:19.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:32:19.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 22:32:19.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:32:19.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:32:19.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:32:19.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:32:19.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 22:32:19.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 22:32:19.377 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 22:32:19.383 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:32:19.384 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:32:19.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 22:32:19.387 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 22:32:19.387 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 22:32:19.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 22:32:19.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 22:32:19.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 22:32:19.391 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 22:32:19.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 22:32:19.501 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 22:32:19.526 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 22:32:19.528 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 22:32:19.529 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 22:32:19.540 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 22:32:19.541 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 22:32:21.581 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 22:32:21.581 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 22:32:21.582 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 22:32:21.601 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 22:32:21.626 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 22:32:21.691 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 22:32:21.695 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 22:32:21.747 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 22:32:21.749 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 22:32:21.750 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:32:21.751 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:32:21.752 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 22:32:21.755 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 22:32:21.756 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 22:32:21.758 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:32:21.761 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 22:32:21.762 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 22:32:21.763 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 22:32:21.764 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 22:32:21.764 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:32:21.766 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 22:32:21.829 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 22:32:21.897 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 22:32:21.946 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 22:32:21.959 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 22:32:21.968 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 22:32:22.018 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 22:32:22.023 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 22:32:22.027 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 22:32:22.029 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 22:32:22.033 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 22:32:22.041 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 22:32:22.043 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 22:32:22.045 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 22:32:22.046 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 22:32:22.046 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 22:32:22.048 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 22:32:22.051 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 22:32:22.052 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 22:32:22.054 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 22:32:22.055 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 22:32:22.059 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 22:32:22.061 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 22:32:22.062 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 22:32:22.066 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 22:32:22.164 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 22:32:22.166 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 22:32:22.167 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 22:32:22.167 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 22:32:22.167 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 22:32:22.168 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 22:32:22.168 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 22:32:22.168 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 22:32:22.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 22:32:22.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 22:32:22.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 22:32:22.170 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 22:32:22.170 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 22:32:22.171 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 22:32:22.172 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 22:32:22.172 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 22:32:22.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 22:32:22.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 22:32:22.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 22:32:22.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 22:32:22.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 22:32:22.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 22:32:22.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-01-29 22:32:22.177 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 22:32:22.177 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 22:32:22.178 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 22:32:22.179 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 22:32:22.179 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 22:32:22.180 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 22:32:22.181 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 22:32:22.181 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 22:32:22.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 22:32:22.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 22:32:22.183 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 22:32:22.183 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 22:32:22.184 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 22:32:22.284 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 22:32:22.290 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 22:32:22.291 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 22:32:22.314 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 22:32:22.327 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 22:32:22.430 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:32:22.431 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:32:22.454 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:32:22.455 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:32:22.580 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 22:32:22.581 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 22:32:22.582 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 22:32:22.582 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 22:32:22.583 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 22:32:22.584 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 22:32:22.584 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 22:32:22.647 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-01-29 22:32:22.650 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.651 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.652 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.682 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.693 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.699 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:32:22.700 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-01-29 22:32:22.700 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.701 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.702 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.703 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.704 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.705 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:32:22.705 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 22:32:22.706 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.707 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.707 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.708 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.709 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.710 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:32:22.711 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 22:32:22.712 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.713 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.714 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.715 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.716 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.716 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:32:22.717 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 22:32:22.718 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.718 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.719 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.719 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.720 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.722 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:32:22.723 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 22:32:22.723 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.726 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.727 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.728 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.729 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.730 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:32:22.731 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 22:32:22.731 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.732 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.733 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.734 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.735 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.736 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 22:32:22.737 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 22:32:22.737 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.738 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.739 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.740 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.741 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.742 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:32:22.743 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 22:32:22.743 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.744 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.745 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.746 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.747 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.747 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:32:22.748 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 22:32:22.749 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.749 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.750 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.750 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.752 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.752 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:32:22.753 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 22:32:22.754 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:32:22.754 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:32:22.755 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:32:22.756 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:32:22.757 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:32:22.758 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:32:22.784 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:32:22.785 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:32:22.785 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 22:32:22.827 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 22:32:22.828 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 22:32:22.842 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-29 22:32:22.923 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 22:32:22.979 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 22:32:22.980 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 22:32:22.981 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 22:32:22.987 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 22:32:22.990 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 22:32:22.991 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 22:32:22.994 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@720653c2
2022-01-29 22:32:22.998 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: fae0d86c-268c-46b8-bd70-a97439e330a1 (<unnamed>)
2022-01-29 22:32:22.998 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 22:32:23.007 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 22:32:23.140 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@29be7749
2022-01-29 22:32:23.141 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 22:32:23.280 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 22:32:51.592 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 22:38:02.055 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 22:38:02.339 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 22:38:02.427 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 22:38:02.459 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 22:38:02.460 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 22:38:02.501 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 22:38:02.582 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 22:38:02.733 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 22:38:02.734 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 22:38:02.738 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 22:38:02.752 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.user: root
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.format_sql: false
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.hbm2ddl.auto: create
		hibernate.show_sql: false
		javax.persistence.jdbc.password: root
		hibernate.connection.characterEncoding: utf8
		hibernate.connection.charSet: utf8]
2022-01-29 22:38:02.769 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 22:38:02.774 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 22:38:02.781 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 22:38:02.782 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 22:38:02.983 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 22:38:02.987 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 22:38:02.991 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 22:38:03.021 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 22:38:03.097 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 22:38:03.116 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 22:38:03.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:38:03.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:38:03.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:38:03.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 22:38:03.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 22:38:03.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 22:38:03.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:38:03.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:38:03.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:38:03.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:38:03.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:38:03.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:38:03.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:38:03.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:38:03.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:38:03.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:38:03.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:38:03.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:38:03.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:38:03.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:38:03.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:38:03.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:38:03.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:38:03.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:38:03.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:38:03.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:38:03.387 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:38:03.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:38:03.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:38:03.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:38:03.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:38:03.407 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:38:03.409 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:38:03.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 22:38:03.415 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 22:38:03.418 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:38:03.419 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:38:03.425 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 22:38:03.427 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 22:38:03.432 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:38:03.433 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:38:03.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:38:03.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:38:03.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:38:03.448 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 22:38:03.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:38:03.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:38:03.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:38:03.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 22:38:03.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:38:03.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:38:03.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:38:03.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:38:03.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:38:03.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:38:03.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:38:03.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:38:03.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:38:03.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:38:03.494 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 22:38:03.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:38:03.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:38:03.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:38:03.503 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:38:03.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:38:03.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:38:03.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 22:38:03.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:38:03.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:38:03.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:38:03.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:38:03.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:38:03.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:38:03.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 22:38:03.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 22:38:03.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:38:03.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:38:03.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 22:38:03.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:38:03.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:38:03.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:38:03.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:38:03.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 22:38:03.579 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 22:38:03.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 22:38:03.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:38:03.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:38:03.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 22:38:03.596 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 22:38:03.597 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 22:38:03.597 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 22:38:03.598 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 22:38:03.598 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 22:38:03.603 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 22:38:03.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 22:38:03.643 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 22:38:03.661 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 22:38:03.662 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root, characterEncoding=utf8, charSet=utf8}
2022-01-29 22:38:03.663 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 22:38:03.674 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 22:38:03.674 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 22:38:05.984 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 22:38:05.985 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 22:38:05.986 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 22:38:06.005 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 22:38:06.030 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 22:38:06.105 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 22:38:06.109 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 22:38:06.160 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 22:38:06.161 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 22:38:06.163 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:38:06.163 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:38:06.164 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 22:38:06.166 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 22:38:06.167 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 22:38:06.169 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:38:06.171 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 22:38:06.172 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 22:38:06.173 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 22:38:06.174 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 22:38:06.174 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:38:06.176 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 22:38:06.250 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 22:38:06.332 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 22:38:06.376 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 22:38:06.393 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 22:38:06.398 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 22:38:06.443 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 22:38:06.450 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 22:38:06.454 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 22:38:06.458 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 22:38:06.464 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 22:38:06.471 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 22:38:06.472 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 22:38:06.473 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 22:38:06.474 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 22:38:06.474 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 22:38:06.476 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 22:38:06.477 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 22:38:06.479 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 22:38:06.480 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 22:38:06.482 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 22:38:06.486 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 22:38:06.490 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 22:38:06.491 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 22:38:06.496 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 22:38:06.598 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 22:38:06.601 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 22:38:06.602 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 22:38:06.602 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 22:38:06.603 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 22:38:06.603 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 22:38:06.603 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 22:38:06.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 22:38:06.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 22:38:06.604 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 22:38:06.605 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 22:38:06.605 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 22:38:06.605 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 22:38:06.606 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 22:38:06.606 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 22:38:06.606 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 22:38:06.607 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 22:38:06.607 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 22:38:06.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 22:38:06.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 22:38:06.609 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 22:38:06.609 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 22:38:06.610 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-01-29 22:38:06.610 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 22:38:06.610 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 22:38:06.611 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 22:38:06.611 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 22:38:06.612 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 22:38:06.612 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 22:38:06.612 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 22:38:06.613 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 22:38:06.613 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 22:38:06.614 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 22:38:06.614 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 22:38:06.614 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 22:38:06.615 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 22:38:06.723 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 22:38:06.730 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 22:38:06.731 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {java.vendor=Oracle Corporation, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.connection.characterEncoding=utf8, hibernate.connection.charSet=utf8, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, user.name=J.SaLahEddine, user.language=en, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, java.version=1.8.0_271, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, hibernate.format_sql=false, java.class.version=52.0, user.country=US, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, path.separator=;, java.vm.version=25.271-b09, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\J.SaLahEddine, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.ejb.persistenceUnitName=unit_factures, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.os.patch.level=, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=root, user.dir=C:\Users\J.SaLahEddine\workshop, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, hibernate.show_sql=false}
2022-01-29 22:38:06.767 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 22:38:06.785 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 22:38:06.878 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:38:06.880 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:38:06.905 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:38:06.905 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:38:07.030 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 22:38:07.031 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 22:38:07.033 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 22:38:07.034 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 22:38:07.035 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 22:38:07.036 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 22:38:07.037 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 22:38:07.092 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-01-29 22:38:07.094 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.095 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.096 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.122 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.130 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.136 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:38:07.137 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-01-29 22:38:07.137 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.138 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.139 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.139 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.140 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.141 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:38:07.142 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 22:38:07.143 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.144 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.144 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.146 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.147 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.148 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:38:07.149 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 22:38:07.149 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.150 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.151 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.152 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.153 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.153 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:38:07.154 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 22:38:07.155 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.156 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.156 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.157 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.158 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.159 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:38:07.160 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 22:38:07.162 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.163 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.164 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.165 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.166 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.167 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:38:07.168 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 22:38:07.169 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.170 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.171 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.172 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.173 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.174 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 22:38:07.175 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 22:38:07.176 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.177 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.178 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.179 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.180 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.180 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:38:07.181 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 22:38:07.182 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.183 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.184 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.184 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.185 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.186 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:38:07.187 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 22:38:07.187 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.187 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.188 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.189 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.190 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.191 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:38:07.191 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 22:38:07.193 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:38:07.193 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:38:07.194 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:38:07.194 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:38:07.194 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:38:07.196 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:38:07.222 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:38:07.223 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:38:07.224 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 22:38:07.244 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 22:38:07.245 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 22:38:07.261 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - drop table if exists TFactures
2022-01-29 22:38:07.341 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - create table TFactures (id bigint not null auto_increment, amount double precision, date datetime, primary key (id))
2022-01-29 22:38:07.403 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 22:38:07.404 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 22:38:07.407 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 22:38:07.414 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 22:38:07.418 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 22:38:07.418 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 22:38:07.423 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@720653c2
2022-01-29 22:38:07.428 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: b21ea27f-dd78-4eb4-aa73-28362b3bf4a9 (<unnamed>)
2022-01-29 22:38:07.428 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 22:38:07.437 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 22:38:07.569 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@29be7749
2022-01-29 22:38:07.570 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 22:38:07.703 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 22:38:36.045 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 22:39:45.097 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 22:39:45.371 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 22:39:45.480 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 22:39:45.518 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 22:39:45.519 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 22:39:45.560 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 22:39:45.643 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 22:39:45.806 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 22:39:45.807 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 22:39:45.813 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 22:39:45.839 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: update
		javax.persistence.jdbc.user: root]
2022-01-29 22:39:45.860 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 22:39:45.872 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 22:39:45.879 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 22:39:45.881 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 22:39:46.079 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 22:39:46.083 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 22:39:46.089 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 22:39:46.129 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 22:39:46.193 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 22:39:46.221 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 22:39:46.434 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:39:46.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:39:46.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:39:46.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 22:39:46.444 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 22:39:46.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 22:39:46.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:39:46.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:39:46.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:39:46.456 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:39:46.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:39:46.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:39:46.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:39:46.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:39:46.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:39:46.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:39:46.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:39:46.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:39:46.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:39:46.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:39:46.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:39:46.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:39:46.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:39:46.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:39:46.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:39:46.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:39:46.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:39:46.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:39:46.492 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:39:46.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:39:46.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:39:46.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:39:46.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:39:46.503 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 22:39:46.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 22:39:46.508 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:39:46.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:39:46.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 22:39:46.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 22:39:46.521 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:39:46.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:39:46.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:39:46.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:39:46.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:39:46.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 22:39:46.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:39:46.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:39:46.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:39:46.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 22:39:46.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:39:46.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:39:46.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:39:46.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:39:46.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:39:46.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:39:46.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:39:46.554 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:39:46.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:39:46.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:39:46.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 22:39:46.568 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:39:46.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:39:46.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:39:46.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:39:46.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:39:46.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:39:46.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 22:39:46.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:39:46.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:39:46.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:39:46.585 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:39:46.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:39:46.588 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:39:46.590 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 22:39:46.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 22:39:46.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:39:46.605 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:39:46.606 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 22:39:46.616 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:39:46.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:39:46.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:39:46.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:39:46.628 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 22:39:46.629 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 22:39:46.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 22:39:46.638 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:39:46.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:39:46.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 22:39:46.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 22:39:46.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 22:39:46.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 22:39:46.643 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 22:39:46.644 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 22:39:46.645 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 22:39:46.646 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 22:39:46.818 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 22:39:46.833 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 22:39:46.837 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 22:39:46.838 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 22:39:46.849 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 22:39:46.850 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 22:39:49.048 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 22:39:49.049 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 22:39:49.050 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 22:39:49.076 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 22:39:49.101 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 22:39:49.170 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 22:39:49.173 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 22:39:49.225 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 22:39:49.227 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 22:39:49.228 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:39:49.228 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:39:49.229 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 22:39:49.232 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 22:39:49.233 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 22:39:49.236 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:39:49.238 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 22:39:49.239 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 22:39:49.240 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 22:39:49.242 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 22:39:49.242 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:39:49.245 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 22:39:49.314 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 22:39:49.382 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 22:39:49.424 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 22:39:49.440 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 22:39:49.446 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 22:39:49.501 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 22:39:49.509 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 22:39:49.514 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 22:39:49.518 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 22:39:49.523 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 22:39:49.530 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 22:39:49.531 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 22:39:49.532 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 22:39:49.533 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 22:39:49.535 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 22:39:49.536 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 22:39:49.537 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 22:39:49.538 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 22:39:49.539 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 22:39:49.539 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 22:39:49.543 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 22:39:49.544 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 22:39:49.545 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 22:39:49.548 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 22:39:49.632 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 22:39:49.636 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 22:39:49.636 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 22:39:49.637 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 22:39:49.637 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 22:39:49.638 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 22:39:49.639 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 22:39:49.639 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 22:39:49.639 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 22:39:49.640 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 22:39:49.640 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 22:39:49.641 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 22:39:49.641 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 22:39:49.641 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 22:39:49.643 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 22:39:49.643 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 22:39:49.643 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 22:39:49.644 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 22:39:49.645 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 22:39:49.645 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 22:39:49.646 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 22:39:49.646 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 22:39:49.647 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-01-29 22:39:49.647 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 22:39:49.648 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 22:39:49.648 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 22:39:49.649 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 22:39:49.650 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 22:39:49.650 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 22:39:49.651 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 22:39:49.653 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 22:39:49.653 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 22:39:49.654 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 22:39:49.655 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 22:39:49.655 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 22:39:49.656 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 22:39:49.762 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 22:39:49.765 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 22:39:49.766 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=update, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 22:39:49.796 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 22:39:49.807 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 22:39:49.905 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:39:49.906 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:39:49.928 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:39:49.928 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:39:50.032 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 22:39:50.032 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 22:39:50.036 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 22:39:50.037 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 22:39:50.038 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 22:39:50.038 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 22:39:50.039 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 22:39:50.109 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-01-29 22:39:50.112 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.113 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.114 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.148 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.155 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.161 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:39:50.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-01-29 22:39:50.163 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.163 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.164 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.165 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.166 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.167 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:39:50.167 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 22:39:50.168 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.169 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.170 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.171 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.171 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.173 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:39:50.173 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 22:39:50.174 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.175 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.176 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.176 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.178 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.178 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:39:50.180 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 22:39:50.180 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.181 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.182 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.183 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.184 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.185 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:39:50.186 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 22:39:50.187 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.189 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.190 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.191 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.192 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.193 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:39:50.194 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 22:39:50.194 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.195 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.196 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.196 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.197 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.198 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 22:39:50.199 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 22:39:50.200 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.201 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.202 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.202 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.203 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.204 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:39:50.205 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 22:39:50.206 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.206 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.207 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.208 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.209 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.210 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:39:50.211 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 22:39:50.212 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.212 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.213 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.214 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.215 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.215 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:39:50.216 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 22:39:50.216 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:39:50.217 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:39:50.218 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:39:50.218 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:39:50.219 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:39:50.221 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:39:50.292 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:39:50.293 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:39:50.294 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 22:39:50.306 INFO [main][org.hibernate.tool.hbm2ddl.SchemaUpdate] [execute] [org.hibernate.tool.hbm2ddl.SchemaUpdate.execute(SchemaUpdate.java:101)] - HHH000228: Running hbm2ddl schema update
2022-01-29 22:39:50.514 DEBUG [main][org.hibernate.mapping.Table] [sqlAlterStrings] [org.hibernate.mapping.Table.sqlAlterStrings(Table.java:505)] - No alter strings for table : TFactures
2022-01-29 22:39:50.523 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 22:39:50.525 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 22:39:50.533 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 22:39:50.538 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 22:39:50.539 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 22:39:50.545 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2b87581
2022-01-29 22:39:50.551 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 0b050fe9-664c-433b-9905-d522edf84098 (<unnamed>)
2022-01-29 22:39:50.552 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 22:39:50.561 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 22:39:50.654 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@bb095
2022-01-29 22:39:50.655 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 22:39:50.828 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 22:40:19.050 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 22:42:04.459 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 22:42:04.764 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 22:42:04.847 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 22:42:04.880 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 22:42:04.881 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 22:42:04.922 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 22:42:04.998 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 22:42:05.151 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 22:42:05.152 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 22:42:05.156 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 22:42:05.173 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 22:42:05.213 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 22:42:05.217 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 22:42:05.226 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 22:42:05.249 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 22:42:05.508 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 22:42:05.512 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 22:42:05.516 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 22:42:05.550 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 22:42:05.619 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 22:42:05.642 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 22:42:05.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:42:05.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:42:05.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:42:05.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 22:42:05.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 22:42:05.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 22:42:05.890 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:42:05.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:42:05.892 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:42:05.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:42:05.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:42:05.898 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:42:05.902 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:42:05.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:42:05.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:42:05.907 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:42:05.908 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:42:05.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:42:05.914 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:42:05.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:42:05.917 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:42:05.921 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:42:05.922 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:42:05.923 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:42:05.927 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:42:05.928 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:42:05.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:42:05.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:42:05.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:42:05.938 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:42:05.939 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:42:05.942 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:42:05.943 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:42:05.946 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 22:42:05.952 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 22:42:05.956 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:42:05.957 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:42:05.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 22:42:05.966 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 22:42:05.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:42:05.973 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:42:05.977 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:42:05.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:42:05.983 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:42:05.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 22:42:05.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:42:05.996 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:42:05.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:42:06.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 22:42:06.003 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:42:06.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:42:06.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:42:06.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:42:06.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:42:06.011 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:42:06.014 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:42:06.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:42:06.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:42:06.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:42:06.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 22:42:06.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:42:06.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:42:06.026 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:42:06.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:42:06.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:42:06.030 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:42:06.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 22:42:06.035 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:42:06.036 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:42:06.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:42:06.040 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:42:06.042 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:42:06.043 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:42:06.046 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 22:42:06.048 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 22:42:06.062 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:42:06.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:42:06.064 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 22:42:06.076 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:42:06.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:42:06.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:42:06.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:42:06.089 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 22:42:06.090 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 22:42:06.093 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 22:42:06.103 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:42:06.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:42:06.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 22:42:06.106 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 22:42:06.107 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 22:42:06.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 22:42:06.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 22:42:06.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 22:42:06.110 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 22:42:06.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 22:42:06.153 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 22:42:06.175 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 22:42:06.177 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 22:42:06.179 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 22:42:06.187 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 22:42:06.188 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 22:42:08.436 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 22:42:08.436 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 22:42:08.437 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 22:42:08.457 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 22:42:08.482 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 22:42:08.550 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 22:42:08.554 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 22:42:08.602 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 22:42:08.604 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 22:42:08.605 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:42:08.606 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:42:08.607 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 22:42:08.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 22:42:08.611 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 22:42:08.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:42:08.615 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 22:42:08.616 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 22:42:08.618 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 22:42:08.619 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 22:42:08.619 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:42:08.621 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 22:42:08.691 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 22:42:08.773 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 22:42:08.819 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 22:42:08.834 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 22:42:08.840 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 22:42:08.896 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 22:42:08.905 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 22:42:08.910 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 22:42:08.914 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 22:42:08.918 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 22:42:08.927 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 22:42:08.928 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 22:42:08.929 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 22:42:08.930 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 22:42:08.930 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 22:42:08.931 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 22:42:08.932 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 22:42:08.933 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 22:42:08.934 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 22:42:08.935 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 22:42:08.937 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 22:42:08.938 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 22:42:08.939 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 22:42:08.945 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 22:42:09.064 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 22:42:09.068 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 22:42:09.069 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 22:42:09.070 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 22:42:09.071 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 22:42:09.072 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 22:42:09.073 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 22:42:09.076 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 22:42:09.077 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 22:42:09.078 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 22:42:09.079 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 22:42:09.080 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 22:42:09.080 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 22:42:09.081 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 22:42:09.082 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 22:42:09.083 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 22:42:09.084 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 22:42:09.086 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 22:42:09.087 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 22:42:09.088 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 22:42:09.089 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 22:42:09.089 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 22:42:09.089 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@425357dd
2022-01-29 22:42:09.090 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 22:42:09.090 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 22:42:09.091 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 22:42:09.093 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 22:42:09.093 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 22:42:09.094 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 22:42:09.095 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 22:42:09.095 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 22:42:09.096 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 22:42:09.096 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 22:42:09.097 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 22:42:09.097 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 22:42:09.098 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 22:42:09.210 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 22:42:09.216 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 22:42:09.217 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e6ee0bc, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 22:42:09.275 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 22:42:09.286 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 22:42:09.400 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:42:09.401 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:42:09.452 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:42:09.452 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:42:09.546 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 22:42:09.547 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 22:42:09.547 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 22:42:09.548 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 22:42:09.548 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 22:42:09.549 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 22:42:09.549 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 22:42:09.627 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
2022-01-29 22:42:09.630 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.631 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.633 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.668 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.678 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.684 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:09.685 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 22:42:09.687 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.687 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.688 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.689 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.690 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.692 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:09.693 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 22:42:09.693 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.693 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.694 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.694 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.697 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.698 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:09.698 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 22:42:09.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.700 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.701 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.701 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.703 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.704 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:09.705 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 22:42:09.705 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.706 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.706 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.707 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.709 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.711 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:09.712 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 22:42:09.713 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.714 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.715 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.716 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.717 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.718 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:09.719 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 22:42:09.720 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.721 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.722 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.722 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.724 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.727 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 22:42:09.728 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 22:42:09.728 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.729 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.729 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.730 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.731 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.731 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:09.732 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 22:42:09.732 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.732 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.733 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.733 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.735 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.736 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:09.737 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 22:42:09.737 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.738 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.739 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.739 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.741 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.742 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:09.744 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-01-29 22:42:09.745 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:09.745 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:09.746 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:09.747 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:09.747 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:09.748 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:09.783 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:09.783 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:09.784 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 22:42:09.804 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 22:42:09.806 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 22:42:09.811 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-29 22:42:09.864 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 22:42:09.937 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 22:42:09.938 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 22:42:09.941 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 22:42:09.948 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 22:42:09.951 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 22:42:09.952 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 22:42:09.956 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ad5923a
2022-01-29 22:42:09.961 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 8a6f7f39-7d3d-45e3-b953-62d5b14747da (<unnamed>)
2022-01-29 22:42:09.962 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 22:42:09.969 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 22:42:10.072 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4650a407
2022-01-29 22:42:10.073 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 22:42:10.229 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 22:42:38.434 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-29 22:42:50.106 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-29 22:42:50.459 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-29 22:42:50.567 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-29 22:42:50.604 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-29 22:42:50.605 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-29 22:42:50.651 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-29 22:42:50.730 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-29 22:42:50.880 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-29 22:42:50.881 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-29 22:42:50.886 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-29 22:42:50.910 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-29 22:42:50.930 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-29 22:42:50.935 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-29 22:42:50.941 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-29 22:42:50.942 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-29 22:42:51.181 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-29 22:42:51.185 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-29 22:42:51.190 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-29 22:42:51.221 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-29 22:42:51.293 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-29 22:42:51.321 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-29 22:42:51.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:42:51.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:42:51.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-29 22:42:51.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-29 22:42:51.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-29 22:42:51.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-29 22:42:51.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:42:51.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:42:51.541 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-29 22:42:51.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:42:51.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:42:51.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-29 22:42:51.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:42:51.551 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:42:51.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-29 22:42:51.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:42:51.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:42:51.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-29 22:42:51.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:42:51.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:42:51.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-29 22:42:51.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:42:51.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:42:51.570 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-29 22:42:51.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:42:51.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:42:51.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-29 22:42:51.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:42:51.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-29 22:42:51.582 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:42:51.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-29 22:42:51.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:42:51.588 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-29 22:42:51.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-29 22:42:51.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-29 22:42:51.597 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:42:51.598 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-29 22:42:51.603 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-29 22:42:51.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-29 22:42:51.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:42:51.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-29 22:42:51.615 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:42:51.616 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:42:51.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-29 22:42:51.621 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-29 22:42:51.624 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:42:51.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:42:51.627 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-29 22:42:51.629 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-29 22:42:51.632 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:42:51.633 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-29 22:42:51.635 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:42:51.636 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-29 22:42:51.638 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:42:51.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-29 22:42:51.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:42:51.643 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-29 22:42:51.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:42:51.648 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-29 22:42:51.650 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-29 22:42:51.653 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:42:51.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:42:51.655 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-29 22:42:51.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:42:51.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:42:51.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-29 22:42:51.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-29 22:42:51.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:42:51.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:42:51.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-29 22:42:51.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:42:51.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:42:51.671 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-29 22:42:51.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-29 22:42:51.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-29 22:42:51.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:42:51.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-29 22:42:51.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-29 22:42:51.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:42:51.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-29 22:42:51.708 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:42:51.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-29 22:42:51.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-29 22:42:51.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-29 22:42:51.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-29 22:42:51.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:42:51.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-29 22:42:51.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-29 22:42:51.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-29 22:42:51.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-29 22:42:51.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-29 22:42:51.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-29 22:42:51.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-29 22:42:51.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-29 22:42:51.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-29 22:42:51.906 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-29 22:42:51.928 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-29 22:42:51.929 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-29 22:42:51.930 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-29 22:42:51.943 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-29 22:42:51.944 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-29 22:42:54.103 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-29 22:42:54.103 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-29 22:42:54.104 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-29 22:42:54.123 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-29 22:42:54.149 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-29 22:42:54.213 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-29 22:42:54.218 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-29 22:42:54.268 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-29 22:42:54.269 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-29 22:42:54.270 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:42:54.271 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-29 22:42:54.272 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-29 22:42:54.275 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-29 22:42:54.276 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-29 22:42:54.278 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:42:54.281 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-29 22:42:54.282 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-29 22:42:54.283 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-29 22:42:54.284 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-29 22:42:54.285 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-29 22:42:54.287 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-29 22:42:54.359 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-29 22:42:54.438 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-29 22:42:54.483 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-29 22:42:54.497 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-29 22:42:54.506 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-29 22:42:54.553 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-29 22:42:54.557 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-29 22:42:54.561 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-29 22:42:54.563 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-29 22:42:54.567 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-29 22:42:54.572 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-29 22:42:54.573 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-29 22:42:54.574 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-29 22:42:54.574 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-29 22:42:54.575 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-29 22:42:54.579 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-29 22:42:54.580 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-29 22:42:54.582 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-29 22:42:54.583 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-29 22:42:54.584 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-29 22:42:54.589 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-29 22:42:54.590 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-29 22:42:54.591 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-29 22:42:54.599 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-29 22:42:54.697 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-29 22:42:54.699 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-29 22:42:54.699 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-29 22:42:54.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-29 22:42:54.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-29 22:42:54.700 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-29 22:42:54.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-29 22:42:54.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-29 22:42:54.701 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-29 22:42:54.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-29 22:42:54.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-29 22:42:54.702 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-29 22:42:54.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-29 22:42:54.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-29 22:42:54.703 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-29 22:42:54.704 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-29 22:42:54.704 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-29 22:42:54.705 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-29 22:42:54.706 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-29 22:42:54.706 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-29 22:42:54.707 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-29 22:42:54.707 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-29 22:42:54.708 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-01-29 22:42:54.708 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-29 22:42:54.709 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-29 22:42:54.709 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-29 22:42:54.710 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-29 22:42:54.711 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-29 22:42:54.712 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-29 22:42:54.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-29 22:42:54.713 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-29 22:42:54.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-29 22:42:54.715 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-29 22:42:54.716 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-29 22:42:54.716 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-29 22:42:54.717 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-29 22:42:54.811 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-29 22:42:54.814 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-29 22:42:54.815 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-29 22:42:54.848 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-29 22:42:54.865 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-29 22:42:54.975 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:42:54.976 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:42:55.001 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-29 22:42:55.001 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-29 22:42:55.103 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-29 22:42:55.104 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-29 22:42:55.105 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-29 22:42:55.106 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-29 22:42:55.106 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-29 22:42:55.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-29 22:42:55.107 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-29 22:42:55.162 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-01-29 22:42:55.166 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.166 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.168 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.198 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.209 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.213 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:55.214 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-01-29 22:42:55.215 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.216 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.216 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.217 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.218 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.219 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:55.219 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-29 22:42:55.220 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.221 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.221 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.222 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.223 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.224 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:55.224 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-29 22:42:55.225 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.225 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.227 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.227 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.228 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.229 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:55.230 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-29 22:42:55.230 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.231 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.231 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.232 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.233 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.233 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:55.234 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-29 22:42:55.235 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.236 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.236 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.237 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.238 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.238 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:55.239 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-29 22:42:55.239 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.240 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.240 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.241 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.242 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.243 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-29 22:42:55.243 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-29 22:42:55.244 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.245 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.245 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.246 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.246 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.247 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:55.247 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-29 22:42:55.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.248 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.249 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.249 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.250 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.250 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-29 22:42:55.251 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-29 22:42:55.251 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.252 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.252 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.253 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.253 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.254 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:55.254 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-29 22:42:55.255 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-29 22:42:55.255 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-29 22:42:55.255 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-29 22:42:55.256 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-29 22:42:55.257 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-29 22:42:55.258 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:55.290 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:55.291 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-29 22:42:55.291 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-29 22:42:55.314 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-29 22:42:55.315 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-29 22:42:55.321 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-29 22:42:55.363 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-29 22:42:55.418 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-29 22:42:55.419 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-29 22:42:55.420 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-29 22:42:55.424 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-29 22:42:55.431 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-29 22:42:55.432 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-29 22:42:55.436 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@720653c2
2022-01-29 22:42:55.441 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: be73a08c-b2d2-4418-9739-13734f5555da (<unnamed>)
2022-01-29 22:42:55.442 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-29 22:42:55.451 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-29 22:42:55.551 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@29be7749
2022-01-29 22:42:55.552 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-29 22:42:55.705 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-29 22:43:24.102 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-30 11:05:43.533 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-30 11:05:43.908 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-30 11:05:44.017 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-30 11:05:44.048 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-30 11:05:44.064 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-30 11:05:44.095 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-30 11:05:44.252 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-30 11:05:44.533 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-30 11:05:44.533 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-30 11:05:44.548 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-30 11:05:44.564 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-30 11:05:44.580 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-30 11:05:44.595 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-30 11:05:44.595 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-30 11:05:44.595 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-30 11:05:44.798 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-30 11:05:44.798 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-30 11:05:44.798 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-30 11:05:44.845 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-30 11:05:44.939 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-30 11:05:44.986 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-30 11:05:45.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 11:05:45.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 11:05:45.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 11:05:45.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-30 11:05:45.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-30 11:05:45.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-30 11:05:45.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 11:05:45.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 11:05:45.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 11:05:45.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-30 11:05:45.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-30 11:05:45.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-30 11:05:45.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 11:05:45.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 11:05:45.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 11:05:45.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 11:05:45.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 11:05:45.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 11:05:45.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-30 11:05:45.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-30 11:05:45.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-30 11:05:45.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 11:05:45.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 11:05:45.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 11:05:45.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 11:05:45.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 11:05:45.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 11:05:45.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-30 11:05:45.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-30 11:05:45.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-30 11:05:45.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-30 11:05:45.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-30 11:05:45.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-30 11:05:45.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-30 11:05:45.455 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-30 11:05:45.455 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-30 11:05:45.455 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-30 11:05:45.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-30 11:05:45.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-30 11:05:45.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-30 11:05:45.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-30 11:05:45.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 11:05:45.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 11:05:45.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 11:05:45.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-30 11:05:45.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 11:05:45.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 11:05:45.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 11:05:45.595 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-30 11:05:45.611 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 11:05:45.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-30 11:05:45.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-30 11:05:45.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-30 11:05:45.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-30 11:05:45.658 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-30 11:05:45.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-30 11:05:45.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-30 11:05:45.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-30 11:05:45.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-30 11:05:45.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-30 11:05:45.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-30 11:05:45.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-30 11:05:45.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-30 11:05:45.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-30 11:05:45.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-30 11:05:45.751 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-30 11:05:45.814 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-30 11:05:45.814 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-30 11:05:45.814 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-30 11:05:45.861 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-30 11:05:45.861 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-30 11:05:48.345 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-30 11:05:48.345 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-30 11:05:48.345 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-30 11:05:48.408 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-30 11:05:48.454 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-30 11:05:48.548 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-30 11:05:48.564 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-30 11:05:48.673 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-30 11:05:48.673 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-30 11:05:48.689 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 11:05:48.689 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 11:05:48.689 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-30 11:05:48.689 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-30 11:05:48.689 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-30 11:05:48.689 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 11:05:48.689 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-30 11:05:48.704 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-30 11:05:48.704 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-30 11:05:48.704 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-30 11:05:48.704 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 11:05:48.704 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-30 11:05:48.829 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-30 11:05:48.970 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-30 11:05:49.017 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-30 11:05:49.032 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-30 11:05:49.048 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-30 11:05:49.111 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-30 11:05:49.111 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-30 11:05:49.126 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-30 11:05:49.126 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-30 11:05:49.126 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-30 11:05:49.142 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-30 11:05:49.142 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-30 11:05:49.142 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-30 11:05:49.157 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-30 11:05:49.173 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@425357dd
2022-01-30 11:05:49.251 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-30 11:05:49.267 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-30 11:05:49.267 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-30 11:05:49.267 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-30 11:05:49.267 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-30 11:05:49.267 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-30 11:05:49.267 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-30 11:05:49.282 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-30 11:05:49.282 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-30 11:05:49.282 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-30 11:05:49.282 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-30 11:05:49.282 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-30 11:05:49.282 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-30 11:05:49.439 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-30 11:05:49.439 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-30 11:05:49.439 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e6ee0bc, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-30 11:05:49.517 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-30 11:05:49.532 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-30 11:05:49.689 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 11:05:49.689 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 11:05:49.751 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 11:05:49.751 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 11:05:49.861 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-30 11:05:49.861 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-30 11:05:49.861 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-30 11:05:49.861 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-30 11:05:49.861 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-30 11:05:49.861 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-30 11:05:49.861 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-30 11:05:49.907 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
2022-01-30 11:05:49.907 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:49.923 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:49.923 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.017 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.032 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.032 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.048 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.064 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-30 11:05:50.079 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-30 11:05:50.095 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:05:50.111 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:05:50.126 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:05:50.157 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:05:50.157 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:05:50.157 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-30 11:05:50.189 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-30 11:05:50.189 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-30 11:05:50.204 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-30 11:05:50.282 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-30 11:05:50.345 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-30 11:05:50.345 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-30 11:05:50.361 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-30 11:05:50.361 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-30 11:05:50.361 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-30 11:05:50.361 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-30 11:05:50.376 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ad5923a
2022-01-30 11:05:50.376 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: ddf941c6-bac5-4fe0-8ef9-7f26746cc58b (<unnamed>)
2022-01-30 11:05:50.376 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-30 11:05:50.376 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-30 11:05:50.611 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4650a407
2022-01-30 11:05:50.611 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-30 11:05:50.782 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-30 11:06:18.359 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-30 11:16:53.138 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@194bcebf
2022-01-30 11:16:53.826 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-30 11:16:53.982 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-30 11:16:54.060 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-30 11:16:54.060 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-30 11:16:54.123 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-30 11:16:54.248 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-30 11:16:54.466 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-30 11:16:54.466 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-30 11:16:54.482 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-30 11:16:54.498 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-30 11:16:54.529 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-30 11:16:54.529 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-30 11:16:54.545 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-30 11:16:54.545 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-30 11:16:54.779 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-30 11:16:54.779 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-30 11:16:54.795 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-30 11:16:54.826 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-30 11:16:54.966 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-30 11:16:55.013 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-30 11:16:55.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@63f34b70
2022-01-30 11:16:55.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@63f34b70
2022-01-30 11:16:55.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63f34b70
2022-01-30 11:16:55.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3277e499
2022-01-30 11:16:55.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16afbd92
2022-01-30 11:16:55.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@486be205
2022-01-30 11:16:55.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@4d411036
2022-01-30 11:16:55.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@4d411036
2022-01-30 11:16:55.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d411036
2022-01-30 11:16:55.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7d373bcf
2022-01-30 11:16:55.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7d373bcf
2022-01-30 11:16:55.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d373bcf
2022-01-30 11:16:55.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@5a021cb9
2022-01-30 11:16:55.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@5a021cb9
2022-01-30 11:16:55.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a021cb9
2022-01-30 11:16:55.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@67af833b
2022-01-30 11:16:55.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@67af833b
2022-01-30 11:16:55.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67af833b
2022-01-30 11:16:55.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5489c777
2022-01-30 11:16:55.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5489c777
2022-01-30 11:16:55.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5489c777
2022-01-30 11:16:55.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@ecf9049
2022-01-30 11:16:55.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@ecf9049
2022-01-30 11:16:55.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ecf9049
2022-01-30 11:16:55.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6bc28a83
2022-01-30 11:16:55.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6bc28a83
2022-01-30 11:16:55.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bc28a83
2022-01-30 11:16:55.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7646731d
2022-01-30 11:16:55.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7646731d
2022-01-30 11:16:55.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62da83ed
2022-01-30 11:16:55.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62da83ed
2022-01-30 11:16:55.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@408b35bf
2022-01-30 11:16:55.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@408b35bf
2022-01-30 11:16:55.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@649f2009
2022-01-30 11:16:55.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6c4f9535
2022-01-30 11:16:55.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@344344fa
2022-01-30 11:16:55.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@344344fa
2022-01-30 11:16:55.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@750fe12e
2022-01-30 11:16:55.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@750fe12e
2022-01-30 11:16:55.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@3aacf32a
2022-01-30 11:16:55.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3aacf32a
2022-01-30 11:16:55.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ed190be
2022-01-30 11:16:55.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ed190be
2022-01-30 11:16:55.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ed190be
2022-01-30 11:16:55.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@41382722
2022-01-30 11:16:55.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@6ce1f601
2022-01-30 11:16:55.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ce1f601
2022-01-30 11:16:55.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ce1f601
2022-01-30 11:16:55.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c451c9c
2022-01-30 11:16:55.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@2a7b6f69
2022-01-30 11:16:55.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a7b6f69
2022-01-30 11:16:55.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@5528a42c
2022-01-30 11:16:55.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5528a42c
2022-01-30 11:16:55.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@29539e36
2022-01-30 11:16:55.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@29539e36
2022-01-30 11:16:55.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@49a64d82
2022-01-30 11:16:55.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49a64d82
2022-01-30 11:16:55.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60d84f61
2022-01-30 11:16:55.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60d84f61
2022-01-30 11:16:55.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@72bca894
2022-01-30 11:16:55.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@4593ff34
2022-01-30 11:16:55.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@4593ff34
2022-01-30 11:16:55.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@4593ff34
2022-01-30 11:16:55.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29caf222
2022-01-30 11:16:55.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29caf222
2022-01-30 11:16:55.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29caf222
2022-01-30 11:16:55.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1804f60d
2022-01-30 11:16:55.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@21680803
2022-01-30 11:16:55.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@21680803
2022-01-30 11:16:55.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@21680803
2022-01-30 11:16:55.529 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c074c0c
2022-01-30 11:16:55.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c074c0c
2022-01-30 11:16:55.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c074c0c
2022-01-30 11:16:55.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@2d0566ba
2022-01-30 11:16:55.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@2c444798
2022-01-30 11:16:55.560 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@10b3df93
2022-01-30 11:16:55.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10b3df93
2022-01-30 11:16:55.576 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33c2bd
2022-01-30 11:16:55.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@79f227a9
2022-01-30 11:16:55.591 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@79f227a9
2022-01-30 11:16:55.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@26d10f2e
2022-01-30 11:16:55.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26d10f2e
2022-01-30 11:16:55.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22ee2d0
2022-01-30 11:16:55.607 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26f143ed
2022-01-30 11:16:55.623 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@50b0bc4c
2022-01-30 11:16:55.638 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@437e951d
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@437e951d
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61e3a1fd
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51abf713
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@eadb475
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d4d48a6
2022-01-30 11:16:55.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@315df4bb
2022-01-30 11:16:55.701 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-30 11:16:55.716 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-30 11:16:55.716 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-30 11:16:55.716 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-30 11:16:55.732 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-30 11:16:55.732 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-30 11:16:58.216 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-30 11:16:58.216 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-30 11:16:58.216 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-30 11:16:58.247 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-30 11:16:58.279 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-30 11:16:58.357 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-30 11:16:58.357 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-30 11:16:58.435 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-30 11:16:58.435 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-30 11:16:58.435 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 11:16:58.435 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 11:16:58.435 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-30 11:16:58.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 11:16:58.466 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-30 11:16:58.622 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-30 11:16:58.779 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-30 11:16:58.888 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-30 11:16:58.919 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-30 11:16:58.935 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-30 11:16:59.029 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-30 11:16:59.044 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-30 11:16:59.044 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-30 11:16:59.044 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-30 11:16:59.060 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-30 11:16:59.076 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-30 11:16:59.091 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-30 11:16:59.091 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-30 11:16:59.091 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-30 11:16:59.091 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-30 11:16:59.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@3fd9e827
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-30 11:16:59.169 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-30 11:16:59.482 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-30 11:16:59.482 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-30 11:16:59.482 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {java.vendor=Oracle Corporation, jboss.modules.system.pkgs=com.intellij.rt, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IdeaIC2021.3\captureAgent\debugger-agent.jar, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, user.name=J.SaLahEddine, user.language=en, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, java.version=1.8.0_271, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, hibernate.format_sql=true, java.class.version=52.0, user.country=US, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1c9fbb61, path.separator=;, java.vm.version=25.271-b09, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\J.SaLahEddine, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.ejb.persistenceUnitName=unit_factures, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IdeaIC2021.3\captureAgent\debugger-agent.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.os.patch.level=, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=root, user.dir=C:\Users\J.SaLahEddine\workshop, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, intellij.debug.agent=true, hibernate.show_sql=true}
2022-01-30 11:16:59.513 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-30 11:16:59.529 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-30 11:16:59.638 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 11:16:59.638 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 11:16:59.669 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 11:16:59.669 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 11:16:59.810 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-30 11:16:59.810 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-30 11:16:59.810 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-30 11:16:59.810 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-30 11:16:59.810 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-30 11:16:59.810 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-30 11:16:59.810 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-30 11:16:59.872 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55fee662]
2022-01-30 11:16:59.872 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.872 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.872 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.919 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.935 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.935 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:16:59.935 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c9934da]
2022-01-30 11:16:59.935 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.935 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.935 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383caf89]
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ed560f]
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58253c57]
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.950 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bf14704]
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2be21396]
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@315105f]
2022-01-30 11:16:59.966 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40247d48]
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c93774]
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18b74ea]
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:16:59.982 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:16:59.997 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:16:59.997 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:17:00.044 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:17:00.044 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:17:00.044 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-30 11:17:00.075 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-30 11:17:00.075 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-30 11:17:00.075 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-30 11:17:00.138 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-30 11:17:00.185 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-30 11:17:00.185 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-30 11:17:00.200 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-30 11:17:00.200 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-30 11:17:00.200 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-30 11:17:00.200 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-30 11:17:00.216 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@70721c12
2022-01-30 11:17:00.216 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: f21cc27e-d8eb-4ce8-9c71-f0514c293fee (<unnamed>)
2022-01-30 11:17:00.216 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-30 11:17:00.232 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-30 11:17:00.404 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@7a2ab862
2022-01-30 11:17:00.404 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-30 11:17:00.607 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-30 11:18:22.987 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-30 11:19:39.875 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-30 11:19:40.157 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-30 11:19:40.219 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-30 11:19:40.250 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-30 11:19:40.250 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-30 11:19:40.282 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-30 11:19:40.344 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-30 11:19:40.563 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-30 11:19:40.578 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-30 11:19:40.625 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-30 11:19:40.672 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-30 11:19:40.719 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-30 11:19:40.719 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-30 11:19:40.735 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-30 11:19:40.735 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-30 11:19:41.188 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-30 11:19:41.203 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-30 11:19:41.203 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-30 11:19:41.219 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-30 11:19:41.282 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-30 11:19:41.297 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-30 11:19:41.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 11:19:41.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 11:19:41.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 11:19:41.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-30 11:19:41.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-30 11:19:41.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-30 11:19:41.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 11:19:41.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 11:19:41.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 11:19:41.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-30 11:19:41.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-30 11:19:41.547 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-30 11:19:41.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-30 11:19:41.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-30 11:19:41.578 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 11:19:41.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 11:19:41.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 11:19:41.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 11:19:41.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 11:19:41.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 11:19:41.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-30 11:19:41.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-30 11:19:41.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-30 11:19:41.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-30 11:19:41.610 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-30 11:19:41.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-30 11:19:41.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-30 11:19:41.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-30 11:19:41.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-30 11:19:41.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-30 11:19:41.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-30 11:19:41.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-30 11:19:41.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-30 11:19:41.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-30 11:19:41.657 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 11:19:41.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 11:19:41.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 11:19:41.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-30 11:19:41.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 11:19:41.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 11:19:41.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-30 11:19:41.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-30 11:19:41.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-30 11:19:41.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-30 11:19:41.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-30 11:19:41.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-30 11:19:41.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-30 11:19:41.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-30 11:19:41.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-30 11:19:41.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 11:19:41.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 11:19:41.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 11:19:41.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-30 11:19:41.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 11:19:41.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 11:19:41.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 11:19:41.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 11:19:41.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 11:19:41.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 11:19:41.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-30 11:19:41.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-30 11:19:41.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-30 11:19:41.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-30 11:19:41.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-30 11:19:41.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-30 11:19:41.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-30 11:19:41.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-30 11:19:41.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-30 11:19:41.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-30 11:19:41.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-30 11:19:41.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-30 11:19:41.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-30 11:19:41.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-30 11:19:41.891 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-30 11:19:41.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-30 11:19:41.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-30 11:19:41.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-30 11:19:41.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-30 11:19:41.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-30 11:19:41.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-30 11:19:41.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-30 11:19:41.938 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-30 11:19:41.953 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-30 11:19:41.953 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-30 11:19:41.953 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-30 11:19:41.969 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-30 11:19:41.969 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-30 11:19:44.453 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-30 11:19:44.453 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-30 11:19:44.453 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-30 11:19:44.469 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-30 11:19:44.500 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-30 11:19:44.547 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-30 11:19:44.563 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-30 11:19:44.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-30 11:19:44.625 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 11:19:44.625 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-30 11:19:44.688 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-30 11:19:44.797 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-30 11:19:44.844 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-30 11:19:44.859 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-30 11:19:44.859 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-30 11:19:44.953 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-30 11:19:44.969 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-30 11:19:44.969 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-30 11:19:44.969 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-30 11:19:44.969 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-30 11:19:44.984 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-30 11:19:44.984 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-30 11:19:44.984 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-30 11:19:44.984 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-30 11:19:44.984 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-30 11:19:44.984 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-30 11:19:44.984 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-30 11:19:45.000 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-30 11:19:45.000 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-30 11:19:45.000 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-30 11:19:45.000 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-30 11:19:45.000 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-30 11:19:45.016 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-30 11:19:45.016 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-30 11:19:45.094 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@425357dd
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-30 11:19:45.109 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-30 11:19:45.125 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-30 11:19:45.359 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-30 11:19:45.359 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-30 11:19:45.359 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e6ee0bc, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-30 11:19:45.391 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-30 11:19:45.406 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-30 11:19:45.516 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 11:19:45.516 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 11:19:45.531 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 11:19:45.547 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 11:19:45.676 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-30 11:19:45.676 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-30 11:19:45.676 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-30 11:19:45.676 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-30 11:19:45.676 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-30 11:19:45.676 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-30 11:19:45.676 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-30 11:19:45.723 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
2022-01-30 11:19:45.723 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.723 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.723 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.754 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.770 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.785 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 11:19:45.801 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 11:19:45.817 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 11:19:45.817 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 11:19:45.817 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:19:45.832 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:19:45.832 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 11:19:45.832 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-30 11:19:45.848 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-30 11:19:45.848 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-30 11:19:45.863 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-30 11:19:45.895 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-30 11:19:45.957 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-30 11:19:45.957 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-30 11:19:45.957 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-30 11:19:45.973 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-30 11:19:45.973 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-30 11:19:45.973 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-30 11:19:45.973 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ad5923a
2022-01-30 11:19:45.973 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: a8f145ad-78c1-421d-8fd2-fa8426c4b1db (<unnamed>)
2022-01-30 11:19:45.973 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-30 11:19:45.988 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-30 11:19:46.082 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4650a407
2022-01-30 11:19:46.082 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-30 11:19:46.254 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-30 11:19:46.379 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:51)] - begin
2022-01-30 11:19:46.395 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:231)] - Executing identity-insert immediately
2022-01-30 11:19:46.410 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    insert 
    into
        TFactures
        (amount, date) 
    values
        (?, ?)
2022-01-30 11:19:46.441 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:74)] - Natively generated identity: 1
2022-01-30 11:19:46.441 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:104)] - HHH000387: ResultSet's statement was not registered
2022-01-30 11:19:46.457 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:62)] - committing
2022-01-30 11:19:46.457 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:132)] - Processing flush-time cascades
2022-01-30 11:19:46.457 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:174)] - Dirty checking collections
2022-01-30 11:19:46.473 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:106)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-30 11:19:46.473 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-30 11:19:46.473 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:102)] - Listing entities:
2022-01-30 11:19:46.473 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:109)] - ma.cigma.pfe.models.Facture{date=Sun Jan 30 11:19:46 CET 2022, amount=20.05, id=1}
2022-01-30 19:51:31.163 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-01-30 19:51:31.420 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-30 19:51:31.508 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-30 19:51:31.535 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-30 19:51:31.536 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-30 19:51:31.576 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-30 19:51:31.643 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-30 19:51:31.880 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-30 19:51:31.882 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-30 19:51:31.888 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-30 19:51:31.909 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-30 19:51:31.937 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-30 19:51:31.945 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-30 19:51:31.954 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-30 19:51:31.956 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-30 19:51:32.234 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-30 19:51:32.237 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-30 19:51:32.241 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-30 19:51:32.271 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-30 19:51:32.357 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-30 19:51:32.391 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-30 19:51:32.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-30 19:51:32.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-30 19:51:32.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-01-30 19:51:32.645 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-01-30 19:51:32.650 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-01-30 19:51:32.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-01-30 19:51:32.655 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-30 19:51:32.656 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-30 19:51:32.657 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-01-30 19:51:32.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-30 19:51:32.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-01-30 19:51:32.661 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-01-30 19:51:32.666 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-30 19:51:32.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-01-30 19:51:32.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-01-30 19:51:32.671 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-30 19:51:32.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-01-30 19:51:32.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-01-30 19:51:32.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-30 19:51:32.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-01-30 19:51:32.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-01-30 19:51:32.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-30 19:51:32.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-01-30 19:51:32.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-01-30 19:51:32.690 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-30 19:51:32.691 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-30 19:51:32.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-01-30 19:51:32.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-30 19:51:32.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-01-30 19:51:32.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-01-30 19:51:32.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-01-30 19:51:32.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-01-30 19:51:32.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-01-30 19:51:32.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-01-30 19:51:32.710 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-01-30 19:51:32.714 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-01-30 19:51:32.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-01-30 19:51:32.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-01-30 19:51:32.721 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-01-30 19:51:32.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-01-30 19:51:32.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-01-30 19:51:32.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-30 19:51:32.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-01-30 19:51:32.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-01-30 19:51:32.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-01-30 19:51:32.748 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-30 19:51:32.749 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-30 19:51:32.749 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-01-30 19:51:32.752 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-01-30 19:51:32.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-01-30 19:51:32.757 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-01-30 19:51:32.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-30 19:51:32.760 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-01-30 19:51:32.763 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-30 19:51:32.764 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-01-30 19:51:32.768 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-30 19:51:32.770 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-01-30 19:51:32.777 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-30 19:51:32.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-01-30 19:51:32.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-01-30 19:51:32.784 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-01-30 19:51:32.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-01-30 19:51:32.786 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-01-30 19:51:32.789 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-30 19:51:32.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-30 19:51:32.791 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-01-30 19:51:32.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-01-30 19:51:32.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-01-30 19:51:32.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-01-30 19:51:32.799 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-01-30 19:51:32.802 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-30 19:51:32.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-30 19:51:32.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-01-30 19:51:32.807 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-01-30 19:51:32.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-01-30 19:51:32.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-01-30 19:51:32.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-01-30 19:51:32.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-01-30 19:51:32.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-01-30 19:51:32.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-01-30 19:51:32.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-30 19:51:32.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-01-30 19:51:32.846 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-01-30 19:51:32.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-01-30 19:51:32.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-01-30 19:51:32.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-30 19:51:32.859 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-01-30 19:51:32.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-01-30 19:51:32.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-01-30 19:51:32.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-30 19:51:32.863 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-30 19:51:32.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-30 19:51:32.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-30 19:51:32.865 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-30 19:51:32.866 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-30 19:51:32.900 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-30 19:51:32.915 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-30 19:51:32.916 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-30 19:51:32.917 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-30 19:51:32.925 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-30 19:51:32.927 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-30 19:51:35.318 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-30 19:51:35.318 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-30 19:51:35.319 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-30 19:51:35.338 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-30 19:51:35.363 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-30 19:51:35.472 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-30 19:51:35.478 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-30 19:51:35.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-30 19:51:35.582 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-30 19:51:35.586 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 19:51:35.587 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 19:51:35.590 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-30 19:51:35.593 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-30 19:51:35.599 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-30 19:51:35.603 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 19:51:35.608 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-30 19:51:35.616 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-30 19:51:35.618 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-30 19:51:35.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-30 19:51:35.620 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 19:51:35.624 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-30 19:51:35.758 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-30 19:51:35.887 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-30 19:51:35.968 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-30 19:51:35.981 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-30 19:51:35.987 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-30 19:51:36.028 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-30 19:51:36.033 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-30 19:51:36.036 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-30 19:51:36.038 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-30 19:51:36.041 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-30 19:51:36.048 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-30 19:51:36.049 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-30 19:51:36.051 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-30 19:51:36.052 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-30 19:51:36.053 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-30 19:51:36.054 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-30 19:51:36.059 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-30 19:51:36.063 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-30 19:51:36.064 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-30 19:51:36.065 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-30 19:51:36.070 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-30 19:51:36.072 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-30 19:51:36.076 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-30 19:51:36.081 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-30 19:51:36.169 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-30 19:51:36.172 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-30 19:51:36.172 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-30 19:51:36.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-30 19:51:36.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-30 19:51:36.173 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-30 19:51:36.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-30 19:51:36.174 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-30 19:51:36.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-30 19:51:36.175 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-30 19:51:36.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-30 19:51:36.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-30 19:51:36.176 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-30 19:51:36.177 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-30 19:51:36.177 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-30 19:51:36.178 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-30 19:51:36.178 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-30 19:51:36.179 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-30 19:51:36.181 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-30 19:51:36.181 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-30 19:51:36.182 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-30 19:51:36.183 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-30 19:51:36.183 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-01-30 19:51:36.184 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-30 19:51:36.184 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-30 19:51:36.185 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-30 19:51:36.186 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-30 19:51:36.187 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-30 19:51:36.188 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-30 19:51:36.189 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-30 19:51:36.189 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-30 19:51:36.190 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-30 19:51:36.191 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-30 19:51:36.192 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-30 19:51:36.192 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-30 19:51:36.193 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-30 19:51:36.284 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-30 19:51:36.290 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-30 19:51:36.291 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-30 19:51:36.320 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-30 19:51:36.331 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-30 19:51:36.438 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 19:51:36.439 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 19:51:36.473 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 19:51:36.474 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 19:51:36.560 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-30 19:51:36.561 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-30 19:51:36.562 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-30 19:51:36.562 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-30 19:51:36.563 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-30 19:51:36.563 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-30 19:51:36.563 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-30 19:51:36.606 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-01-30 19:51:36.609 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.609 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.610 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.644 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.653 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.658 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:51:36.659 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-01-30 19:51:36.660 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.661 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.662 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.663 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.664 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.664 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:51:36.665 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-30 19:51:36.666 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.667 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.667 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.668 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.668 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.669 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:51:36.670 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-30 19:51:36.670 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.671 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.671 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.672 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.673 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.673 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:51:36.674 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-30 19:51:36.674 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.675 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.675 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.676 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.676 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.677 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:51:36.678 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-30 19:51:36.678 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.681 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.682 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.684 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.685 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.686 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:51:36.687 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-30 19:51:36.688 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.689 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.689 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.690 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.690 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.691 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-30 19:51:36.692 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-30 19:51:36.692 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.693 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.693 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.694 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.694 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.696 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:51:36.697 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-30 19:51:36.698 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.699 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.699 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.700 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.701 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.702 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:51:36.703 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-30 19:51:36.703 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.704 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.704 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.705 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.705 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.706 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:51:36.706 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-30 19:51:36.707 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:51:36.707 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:51:36.707 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:51:36.708 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:51:36.709 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:51:36.709 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:51:36.743 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:51:36.744 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:51:36.745 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-30 19:51:36.764 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-30 19:51:36.765 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-30 19:51:36.769 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-30 19:51:36.822 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-30 19:51:36.859 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-30 19:51:36.860 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-30 19:51:36.861 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-30 19:51:36.868 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-30 19:51:36.872 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-30 19:51:36.873 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-30 19:51:36.877 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@720653c2
2022-01-30 19:51:36.883 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 7fd2d88d-c579-4823-850a-4f6518628bc3 (<unnamed>)
2022-01-30 19:51:36.884 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-30 19:51:36.894 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-30 19:51:37.008 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@29be7749
2022-01-30 19:51:37.009 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-30 19:51:37.152 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-30 19:51:37.294 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:51)] - begin
2022-01-30 19:51:37.325 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:231)] - Executing identity-insert immediately
2022-01-30 19:51:37.332 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    insert 
    into
        TFactures
        (amount, date) 
    values
        (?, ?)
2022-01-30 19:51:37.367 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:74)] - Natively generated identity: 1
2022-01-30 19:51:37.368 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:104)] - HHH000387: ResultSet's statement was not registered
2022-01-30 19:51:37.376 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:62)] - committing
2022-01-30 19:51:37.378 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:132)] - Processing flush-time cascades
2022-01-30 19:51:37.381 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:174)] - Dirty checking collections
2022-01-30 19:51:37.387 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:106)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-30 19:51:37.388 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-30 19:51:37.391 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:102)] - Listing entities:
2022-01-30 19:51:37.402 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:109)] - ma.cigma.pfe.models.Facture{date=Sun Jan 30 19:51:37 CET 2022, amount=20.05, id=1}
2022-01-30 19:51:55.956 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@194bcebf
2022-01-30 19:51:56.297 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-30 19:51:56.442 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-30 19:51:56.526 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-30 19:51:56.529 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-30 19:51:56.617 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-30 19:51:56.791 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-30 19:51:56.968 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-30 19:51:56.969 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-30 19:51:56.974 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-30 19:51:56.998 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-30 19:51:57.043 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-30 19:51:57.049 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-30 19:51:57.061 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-30 19:51:57.062 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-30 19:51:57.217 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-30 19:51:57.220 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-30 19:51:57.223 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-30 19:51:57.247 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-30 19:51:57.330 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-30 19:51:57.353 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-30 19:51:57.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@63f34b70
2022-01-30 19:51:57.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@63f34b70
2022-01-30 19:51:57.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@63f34b70
2022-01-30 19:51:57.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3277e499
2022-01-30 19:51:57.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@16afbd92
2022-01-30 19:51:57.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@486be205
2022-01-30 19:51:57.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@4d411036
2022-01-30 19:51:57.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@4d411036
2022-01-30 19:51:57.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4d411036
2022-01-30 19:51:57.527 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@7d373bcf
2022-01-30 19:51:57.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@7d373bcf
2022-01-30 19:51:57.528 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d373bcf
2022-01-30 19:51:57.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@5a021cb9
2022-01-30 19:51:57.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@5a021cb9
2022-01-30 19:51:57.535 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a021cb9
2022-01-30 19:51:57.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@67af833b
2022-01-30 19:51:57.539 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@67af833b
2022-01-30 19:51:57.540 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@67af833b
2022-01-30 19:51:57.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5489c777
2022-01-30 19:51:57.545 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@5489c777
2022-01-30 19:51:57.546 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5489c777
2022-01-30 19:51:57.552 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@ecf9049
2022-01-30 19:51:57.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@ecf9049
2022-01-30 19:51:57.553 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@ecf9049
2022-01-30 19:51:57.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6bc28a83
2022-01-30 19:51:57.558 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6bc28a83
2022-01-30 19:51:57.559 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6bc28a83
2022-01-30 19:51:57.564 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7646731d
2022-01-30 19:51:57.565 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7646731d
2022-01-30 19:51:57.568 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@62da83ed
2022-01-30 19:51:57.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@62da83ed
2022-01-30 19:51:57.572 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@408b35bf
2022-01-30 19:51:57.573 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@408b35bf
2022-01-30 19:51:57.577 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@649f2009
2022-01-30 19:51:57.581 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6c4f9535
2022-01-30 19:51:57.585 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@344344fa
2022-01-30 19:51:57.585 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@344344fa
2022-01-30 19:51:57.592 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@750fe12e
2022-01-30 19:51:57.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@750fe12e
2022-01-30 19:51:57.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@3aacf32a
2022-01-30 19:51:57.599 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3aacf32a
2022-01-30 19:51:57.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@5ed190be
2022-01-30 19:51:57.604 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5ed190be
2022-01-30 19:51:57.605 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5ed190be
2022-01-30 19:51:57.612 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@41382722
2022-01-30 19:51:57.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@6ce1f601
2022-01-30 19:51:57.618 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ce1f601
2022-01-30 19:51:57.619 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ce1f601
2022-01-30 19:51:57.622 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@6c451c9c
2022-01-30 19:51:57.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@2a7b6f69
2022-01-30 19:51:57.627 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a7b6f69
2022-01-30 19:51:57.630 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@5528a42c
2022-01-30 19:51:57.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5528a42c
2022-01-30 19:51:57.634 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@29539e36
2022-01-30 19:51:57.635 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@29539e36
2022-01-30 19:51:57.638 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@49a64d82
2022-01-30 19:51:57.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@49a64d82
2022-01-30 19:51:57.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@60d84f61
2022-01-30 19:51:57.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@60d84f61
2022-01-30 19:51:57.649 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@72bca894
2022-01-30 19:51:57.653 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@4593ff34
2022-01-30 19:51:57.654 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@4593ff34
2022-01-30 19:51:57.655 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@4593ff34
2022-01-30 19:51:57.661 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@29caf222
2022-01-30 19:51:57.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@29caf222
2022-01-30 19:51:57.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@29caf222
2022-01-30 19:51:57.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1804f60d
2022-01-30 19:51:57.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@21680803
2022-01-30 19:51:57.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@21680803
2022-01-30 19:51:57.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@21680803
2022-01-30 19:51:57.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c074c0c
2022-01-30 19:51:57.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c074c0c
2022-01-30 19:51:57.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c074c0c
2022-01-30 19:51:57.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@2d0566ba
2022-01-30 19:51:57.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@2c444798
2022-01-30 19:51:57.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@10b3df93
2022-01-30 19:51:57.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@10b3df93
2022-01-30 19:51:57.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@33c2bd
2022-01-30 19:51:57.706 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@79f227a9
2022-01-30 19:51:57.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@79f227a9
2022-01-30 19:51:57.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@26d10f2e
2022-01-30 19:51:57.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26d10f2e
2022-01-30 19:51:57.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@22ee2d0
2022-01-30 19:51:57.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@26f143ed
2022-01-30 19:51:57.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@50b0bc4c
2022-01-30 19:51:57.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@437e951d
2022-01-30 19:51:57.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@437e951d
2022-01-30 19:51:57.734 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@49ef32e0
2022-01-30 19:51:57.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@271f18d3
2022-01-30 19:51:57.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6bd51ed8
2022-01-30 19:51:57.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@61e3a1fd
2022-01-30 19:51:57.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@51abf713
2022-01-30 19:51:57.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@eadb475
2022-01-30 19:51:57.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4d4d48a6
2022-01-30 19:51:57.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@315df4bb
2022-01-30 19:51:57.770 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-30 19:51:57.796 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-30 19:51:57.798 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-30 19:51:57.803 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-30 19:51:57.826 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-30 19:51:57.827 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-30 19:52:00.030 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-30 19:52:00.031 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-30 19:52:00.034 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-30 19:52:00.106 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-30 19:52:00.175 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-30 19:52:00.330 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-30 19:52:00.340 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-30 19:52:00.436 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-30 19:52:00.439 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-30 19:52:00.443 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 19:52:00.444 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 19:52:00.446 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-30 19:52:00.449 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-30 19:52:00.452 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-30 19:52:00.457 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 19:52:00.461 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-30 19:52:00.463 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-30 19:52:00.465 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-30 19:52:00.467 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-30 19:52:00.468 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 19:52:00.472 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-30 19:52:00.665 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-30 19:52:00.746 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-30 19:52:00.891 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-30 19:52:00.909 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-30 19:52:00.918 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-30 19:52:00.990 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-30 19:52:00.996 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-30 19:52:01.001 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-30 19:52:01.004 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-30 19:52:01.010 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-30 19:52:01.020 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-30 19:52:01.022 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-30 19:52:01.023 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-30 19:52:01.023 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-30 19:52:01.024 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-30 19:52:01.025 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-30 19:52:01.047 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-30 19:52:01.051 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-30 19:52:01.052 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-30 19:52:01.053 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-30 19:52:01.093 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-30 19:52:01.094 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-30 19:52:01.095 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-30 19:52:01.099 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-30 19:52:01.183 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-30 19:52:01.185 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-30 19:52:01.185 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-30 19:52:01.186 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-30 19:52:01.186 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-30 19:52:01.187 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-30 19:52:01.187 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-30 19:52:01.187 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-30 19:52:01.188 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-30 19:52:01.188 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-30 19:52:01.189 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-30 19:52:01.189 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-30 19:52:01.190 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-30 19:52:01.190 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-30 19:52:01.191 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-30 19:52:01.191 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-30 19:52:01.191 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-30 19:52:01.192 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-30 19:52:01.192 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-30 19:52:01.193 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-30 19:52:01.193 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-30 19:52:01.194 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-30 19:52:01.194 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@862f408
2022-01-30 19:52:01.194 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-30 19:52:01.195 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-30 19:52:01.195 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-30 19:52:01.196 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-30 19:52:01.196 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-30 19:52:01.197 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-30 19:52:01.197 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-30 19:52:01.197 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-30 19:52:01.198 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-30 19:52:01.198 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-30 19:52:01.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-30 19:52:01.199 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-30 19:52:01.200 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-30 19:52:01.416 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-30 19:52:01.810 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-30 19:52:01.811 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {java.vendor=Oracle Corporation, jboss.modules.system.pkgs=com.intellij.rt, sun.java.launcher=SUN_STANDARD, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.name=Windows 10, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IdeaIC2021.3\captureAgent\debugger-agent.jar, sun.desktop=windows, java.vm.specification.vendor=Oracle Corporation, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, user.name=J.SaLahEddine, user.language=en, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, java.version=1.8.0_271, user.timezone=Europe/Paris, sun.arch.data.model=64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, file.encoding.pkg=sun.io, file.separator=\, java.specification.name=Java Platform API Specification, hibernate.format_sql=true, java.class.version=52.0, user.country=US, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, java.vm.info=mixed mode, os.version=10.0, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@49c17ba4, path.separator=;, java.vm.version=25.271-b09, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.connection.password=root, user.variant=, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.io.unicode.encoding=UnicodeLittle, awt.toolkit=sun.awt.windows.WToolkit, hibernate.connection.username=root, user.script=, user.home=C:\Users\J.SaLahEddine, java.specification.vendor=Oracle Corporation, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, hibernate.hbm2ddl.auto=create, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., java.vendor.url=http://java.oracle.com/, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vm.vendor=Oracle Corporation, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, hibernate.ejb.persistenceUnitName=unit_factures, java.runtime.name=Java(TM) SE Runtime Environment, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IdeaIC2021.3\captureAgent\debugger-agent.jar, hibernate.bytecode.use_reflection_optimizer=false, java.vm.specification.name=Java Virtual Machine Specification, java.vm.specification.version=1.8, sun.cpu.endian=little, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.os.patch.level=, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, os.arch=amd64, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, javax.persistence.jdbc.password=root, user.dir=C:\Users\J.SaLahEddine\workshop, line.separator=
, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding=UTF-8, java.specification.version=1.8, intellij.debug.agent=true, hibernate.show_sql=true}
2022-01-30 19:52:01.912 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-30 19:52:01.932 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-30 19:52:02.116 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 19:52:02.117 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 19:52:02.275 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 19:52:02.276 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 19:52:02.452 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-30 19:52:02.453 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-30 19:52:02.454 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-30 19:52:02.455 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-30 19:52:02.455 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-30 19:52:02.456 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-30 19:52:02.457 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-30 19:52:02.537 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@772caabe]
2022-01-30 19:52:02.541 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.542 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.543 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.624 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.639 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.646 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:52:02.647 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c9c6245]
2022-01-30 19:52:02.647 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.648 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.649 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.650 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.651 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.651 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:52:02.653 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d4fb213]
2022-01-30 19:52:02.654 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.663 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.664 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.665 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.667 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.668 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:52:02.670 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3127cb44]
2022-01-30 19:52:02.671 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.672 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.673 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.674 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.675 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.676 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:52:02.677 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@631cb129]
2022-01-30 19:52:02.678 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.679 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.679 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.680 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.682 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.683 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:52:02.684 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3252747e]
2022-01-30 19:52:02.685 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.686 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.696 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.697 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.698 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.699 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:52:02.700 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dd8ff1d]
2022-01-30 19:52:02.701 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.702 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.703 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.705 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.709 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.710 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-30 19:52:02.711 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36b9cb99]
2022-01-30 19:52:02.711 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.712 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.713 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.713 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.714 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.715 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:52:02.716 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bfaba70]
2022-01-30 19:52:02.717 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.717 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.718 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.719 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.720 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.723 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 19:52:02.725 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9301672]
2022-01-30 19:52:02.726 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.727 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.727 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.728 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.729 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.729 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:52:02.730 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3238e2aa]
2022-01-30 19:52:02.730 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 19:52:02.731 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 19:52:02.732 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 19:52:02.733 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 19:52:02.733 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 19:52:02.734 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:52:02.785 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:52:02.786 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 19:52:02.787 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-30 19:52:02.819 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-30 19:52:02.821 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-30 19:52:02.831 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-30 19:52:02.904 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-30 19:52:02.980 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-30 19:52:02.981 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-30 19:52:02.983 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-30 19:52:02.993 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-30 19:52:02.997 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-30 19:52:02.998 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-30 19:52:03.003 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3069a360
2022-01-30 19:52:03.010 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 3c48837a-3cea-416b-9777-5588d8654165 (<unnamed>)
2022-01-30 19:52:03.010 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-30 19:52:03.020 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-30 19:52:03.200 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@3cd26422
2022-01-30 19:52:03.201 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-30 19:52:03.439 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-30 19:52:35.786 DEBUG [pool-2-thread-1][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [validate] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.validate(PooledConnections.java:49)] - Connection pool now considered primed; min-size will be maintained
2022-01-30 19:55:39.826 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:51)] - begin
2022-01-30 19:55:39.864 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:231)] - Executing identity-insert immediately
2022-01-30 19:55:39.874 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    insert 
    into
        TFactures
        (amount, date) 
    values
        (?, ?)
2022-01-30 19:55:39.924 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:74)] - Natively generated identity: 1
2022-01-30 19:55:39.925 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:104)] - HHH000387: ResultSet's statement was not registered
2022-01-30 19:55:39.933 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:62)] - committing
2022-01-30 19:55:39.936 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:132)] - Processing flush-time cascades
2022-01-30 20:26:02.956 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@727803de
2022-01-30 20:26:03.206 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-01-30 20:26:03.316 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-01-30 20:26:03.347 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-01-30 20:26:03.347 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-01-30 20:26:03.394 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-01-30 20:26:03.456 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-01-30 20:26:03.597 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-01-30 20:26:03.597 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-01-30 20:26:03.597 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-01-30 20:26:03.612 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/workshop/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-01-30 20:26:03.628 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-01-30 20:26:03.659 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-01-30 20:26:03.659 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-01-30 20:26:03.659 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-01-30 20:26:03.831 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-01-30 20:26:03.847 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-01-30 20:26:03.847 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-01-30 20:26:03.878 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-01-30 20:26:03.925 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-01-30 20:26:03.956 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-01-30 20:26:04.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 20:26:04.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 20:26:04.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7188af83
2022-01-30 20:26:04.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@303cf2ba
2022-01-30 20:26:04.159 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@359df09a
2022-01-30 20:26:04.159 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@792b749c
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1972e513
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1040be71
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1040be71
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1040be71
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 20:26:04.175 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@304bb45b
2022-01-30 20:26:04.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 20:26:04.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 20:26:04.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52f27fbd
2022-01-30 20:26:04.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-30 20:26:04.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@72bc6553
2022-01-30 20:26:04.190 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@72bc6553
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b695b06
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1a245833
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-30 20:26:04.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2ab4bc72
2022-01-30 20:26:04.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-30 20:26:04.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43f02ef2
2022-01-30 20:26:04.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@5f8e8a9d
2022-01-30 20:26:04.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@5f8e8a9d
2022-01-30 20:26:04.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e535154
2022-01-30 20:26:04.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@48e1f6c7
2022-01-30 20:26:04.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@194fad1
2022-01-30 20:26:04.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@194fad1
2022-01-30 20:26:04.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@57bc27f5
2022-01-30 20:26:04.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57bc27f5
2022-01-30 20:26:04.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@15888343
2022-01-30 20:26:04.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@15888343
2022-01-30 20:26:04.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 20:26:04.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 20:26:04.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@333d4a8c
2022-01-30 20:26:04.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@30f842ca
2022-01-30 20:26:04.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@25df00a0
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5884a914
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1a4927d6
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4b520ea8
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@782859e
2022-01-30 20:26:04.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@782859e
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@6f43c82
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6f43c82
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@446a1e84
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5340477f
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@28cda624
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@28cda624
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@28cda624
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 20:26:04.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 20:26:04.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@475c9c31
2022-01-30 20:26:04.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@1807f5a7
2022-01-30 20:26:04.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 20:26:04.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 20:26:04.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@7dfd3c81
2022-01-30 20:26:04.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 20:26:04.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 20:26:04.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfb0c0f
2022-01-30 20:26:04.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@d23e042
2022-01-30 20:26:04.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@6cd24612
2022-01-30 20:26:04.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-30 20:26:04.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1f9f6368
2022-01-30 20:26:04.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@49c90a9c
2022-01-30 20:26:04.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@21be3395
2022-01-30 20:26:04.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@21be3395
2022-01-30 20:26:04.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ee203eb
2022-01-30 20:26:04.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ee203eb
2022-01-30 20:26:04.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@60db1c0e
2022-01-30 20:26:04.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@41f69e84
2022-01-30 20:26:04.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@64b0598
2022-01-30 20:26:04.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@45efd90f
2022-01-30 20:26:04.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@45efd90f
2022-01-30 20:26:04.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-01-30 20:26:04.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-01-30 20:26:04.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-01-30 20:26:04.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-01-30 20:26:04.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-01-30 20:26:04.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-01-30 20:26:04.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f9edf14
2022-01-30 20:26:04.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68746f22
2022-01-30 20:26:04.409 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-01-30 20:26:04.440 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-01-30 20:26:04.440 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-01-30 20:26:04.440 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-01-30 20:26:04.472 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-01-30 20:26:04.472 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-01-30 20:26:06.812 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-01-30 20:26:06.812 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-01-30 20:26:06.812 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-01-30 20:26:06.828 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-01-30 20:26:06.843 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-01-30 20:26:06.906 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-01-30 20:26:06.921 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-01-30 20:26:06.968 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-01-30 20:26:06.968 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-01-30 20:26:06.968 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 20:26:06.968 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-01-30 20:26:06.968 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-01-30 20:26:06.968 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-01-30 20:26:06.968 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-01-30 20:26:06.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 20:26:06.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-01-30 20:26:06.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-01-30 20:26:06.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-01-30 20:26:06.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-01-30 20:26:06.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-01-30 20:26:06.984 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-01-30 20:26:07.046 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-01-30 20:26:07.140 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-01-30 20:26:07.187 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-01-30 20:26:07.202 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-01-30 20:26:07.202 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-01-30 20:26:07.249 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-01-30 20:26:07.249 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-01-30 20:26:07.265 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-01-30 20:26:07.265 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-01-30 20:26:07.265 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-01-30 20:26:07.281 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-01-30 20:26:07.359 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@425357dd
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-01-30 20:26:07.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-01-30 20:26:07.468 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-01-30 20:26:07.484 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-01-30 20:26:07.484 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@2e6ee0bc, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\workshop, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\workshop\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-01-30 20:26:07.499 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-01-30 20:26:07.499 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-01-30 20:26:07.624 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 20:26:07.624 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 20:26:07.656 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-01-30 20:26:07.656 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-01-30 20:26:07.749 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-01-30 20:26:07.749 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-01-30 20:26:07.749 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-01-30 20:26:07.749 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-01-30 20:26:07.749 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-01-30 20:26:07.749 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-01-30 20:26:07.749 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-01-30 20:26:07.796 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
2022-01-30 20:26:07.812 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.812 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.812 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.843 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.843 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.859 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.874 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.890 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 20:26:07.906 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a4c638d]
2022-01-30 20:26:07.906 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-01-30 20:26:07.906 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-01-30 20:26:07.906 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-01-30 20:26:07.906 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-01-30 20:26:07.906 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-01-30 20:26:07.906 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 20:26:07.937 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 20:26:07.937 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-01-30 20:26:07.937 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-01-30 20:26:07.952 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-01-30 20:26:07.952 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-01-30 20:26:07.952 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-01-30 20:26:08.062 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-01-30 20:26:08.124 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-01-30 20:26:08.124 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-01-30 20:26:08.124 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-01-30 20:26:08.140 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-01-30 20:26:08.140 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-01-30 20:26:08.140 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-01-30 20:26:08.140 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6ad5923a
2022-01-30 20:26:08.156 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: cf6f0e45-a7ff-4450-b069-5534bb9f5513 (<unnamed>)
2022-01-30 20:26:08.156 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-01-30 20:26:08.156 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-01-30 20:26:08.234 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@4650a407
2022-01-30 20:26:08.234 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-01-30 20:26:08.421 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-01-30 20:26:08.531 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:51)] - begin
2022-01-30 20:26:08.562 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:231)] - Executing identity-insert immediately
2022-01-30 20:26:08.562 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    insert 
    into
        TFactures
        (amount, date) 
    values
        (?, ?)
2022-01-30 20:26:08.609 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:74)] - Natively generated identity: 1
2022-01-30 20:26:08.609 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:104)] - HHH000387: ResultSet's statement was not registered
2022-01-30 20:26:08.624 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:62)] - committing
2022-01-30 20:26:08.624 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:132)] - Processing flush-time cascades
2022-01-30 20:26:08.624 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:174)] - Dirty checking collections
2022-01-30 20:26:08.624 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:106)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-01-30 20:26:08.624 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-01-30 20:26:08.624 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:102)] - Listing entities:
2022-01-30 20:26:08.640 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:109)] - ma.cigma.pfe.models.Facture{date=Sun Jan 30 20:26:08 CET 2022, amount=20.05, id=1}
2022-02-17 16:47:51.052 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4cf4d528
2022-02-17 16:47:51.337 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 16:47:51.457 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-02-17 16:47:51.491 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-02-17 16:47:51.493 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-02-17 16:47:51.532 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 16:47:51.677 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-02-17 16:47:51.850 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-02-17 16:47:51.851 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-02-17 16:47:51.856 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 16:47:51.875 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/Downloads/tp8/D2j_G1_Salah_Eddine_Jakane-master/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-02-17 16:47:51.908 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 16:47:51.914 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 16:47:51.924 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 16:47:51.929 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-02-17 16:47:52.169 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-02-17 16:47:52.172 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-02-17 16:47:52.177 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-02-17 16:47:52.214 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 16:47:52.287 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 16:47:52.320 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-02-17 16:47:52.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@24569dba
2022-02-17 16:47:52.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@24569dba
2022-02-17 16:47:52.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24569dba
2022-02-17 16:47:52.518 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7188af83
2022-02-17 16:47:52.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4a003cbe
2022-02-17 16:47:52.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b30a42c
2022-02-17 16:47:52.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@19932c16
2022-02-17 16:47:52.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@19932c16
2022-02-17 16:47:52.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19932c16
2022-02-17 16:47:52.536 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1972e513
2022-02-17 16:47:52.537 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1972e513
2022-02-17 16:47:52.538 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1972e513
2022-02-17 16:47:52.542 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@433defed
2022-02-17 16:47:52.543 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@433defed
2022-02-17 16:47:52.544 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@433defed
2022-02-17 16:47:52.548 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@304bb45b
2022-02-17 16:47:52.549 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@304bb45b
2022-02-17 16:47:52.550 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@304bb45b
2022-02-17 16:47:52.555 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4a8355dd
2022-02-17 16:47:52.556 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4a8355dd
2022-02-17 16:47:52.557 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a8355dd
2022-02-17 16:47:52.561 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4bdeaabb
2022-02-17 16:47:52.562 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4bdeaabb
2022-02-17 16:47:52.563 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4bdeaabb
2022-02-17 16:47:52.567 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f53b8a
2022-02-17 16:47:52.568 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f53b8a
2022-02-17 16:47:52.569 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f53b8a
2022-02-17 16:47:52.574 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4201c465
2022-02-17 16:47:52.575 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4201c465
2022-02-17 16:47:52.579 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ab4bc72
2022-02-17 16:47:52.580 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ab4bc72
2022-02-17 16:47:52.583 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@43f02ef2
2022-02-17 16:47:52.584 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@43f02ef2
2022-02-17 16:47:52.587 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5f8e8a9d
2022-02-17 16:47:52.590 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6e535154
2022-02-17 16:47:52.593 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@48e1f6c7
2022-02-17 16:47:52.594 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48e1f6c7
2022-02-17 16:47:52.600 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@431cd9b2
2022-02-17 16:47:52.601 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@431cd9b2
2022-02-17 16:47:52.606 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@4b8d604b
2022-02-17 16:47:52.609 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b8d604b
2022-02-17 16:47:52.613 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@14fc5f04
2022-02-17 16:47:52.615 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14fc5f04
2022-02-17 16:47:52.617 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14fc5f04
2022-02-17 16:47:52.622 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6a8658ff
2022-02-17 16:47:52.625 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@30f842ca
2022-02-17 16:47:52.626 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30f842ca
2022-02-17 16:47:52.627 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30f842ca
2022-02-17 16:47:52.629 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e990ed7
2022-02-17 16:47:52.631 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@5884a914
2022-02-17 16:47:52.632 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5884a914
2022-02-17 16:47:52.635 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1a4927d6
2022-02-17 16:47:52.635 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1a4927d6
2022-02-17 16:47:52.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b520ea8
2022-02-17 16:47:52.639 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b520ea8
2022-02-17 16:47:52.641 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@782859e
2022-02-17 16:47:52.642 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@782859e
2022-02-17 16:47:52.647 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7857fe2
2022-02-17 16:47:52.648 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7857fe2
2022-02-17 16:47:52.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29d80d2b
2022-02-17 16:47:52.855 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5340477f
2022-02-17 16:47:52.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5340477f
2022-02-17 16:47:52.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5340477f
2022-02-17 16:47:52.860 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28cda624
2022-02-17 16:47:52.861 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28cda624
2022-02-17 16:47:52.862 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28cda624
2022-02-17 16:47:52.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@475c9c31
2022-02-17 16:47:52.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1807f5a7
2022-02-17 16:47:52.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1807f5a7
2022-02-17 16:47:52.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1807f5a7
2022-02-17 16:47:52.880 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfd3c81
2022-02-17 16:47:52.882 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfd3c81
2022-02-17 16:47:52.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfd3c81
2022-02-17 16:47:52.885 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7dfb0c0f
2022-02-17 16:47:52.906 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@d23e042
2022-02-17 16:47:52.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@23941fb4
2022-02-17 16:47:52.919 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23941fb4
2022-02-17 16:47:52.920 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d908d47
2022-02-17 16:47:52.931 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@415b0b49
2022-02-17 16:47:52.932 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@415b0b49
2022-02-17 16:47:52.942 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@730d2164
2022-02-17 16:47:52.943 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@730d2164
2022-02-17 16:47:52.944 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c86dbc5
2022-02-17 16:47:52.946 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a5a4e19
2022-02-17 16:47:52.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@41f69e84
2022-02-17 16:47:52.959 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@5038d0b5
2022-02-17 16:47:52.960 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5038d0b5
2022-02-17 16:47:52.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-02-17 16:47:52.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-02-17 16:47:52.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-02-17 16:47:52.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-02-17 16:47:52.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-02-17 16:47:52.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-02-17 16:47:52.965 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-02-17 16:47:52.966 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-02-17 16:47:52.991 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 16:47:53.008 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 16:47:53.009 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-02-17 16:47:53.010 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-02-17 16:47:53.021 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 16:47:53.023 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 16:47:55.288 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-02-17 16:47:55.289 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-02-17 16:47:55.289 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 16:47:55.317 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 16:47:55.352 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-02-17 16:47:55.450 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 16:47:55.454 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 16:47:55.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 16:47:55.512 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 16:47:55.514 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 16:47:55.515 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 16:47:55.517 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 16:47:55.523 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 16:47:55.525 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 16:47:55.530 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 16:47:55.534 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 16:47:55.537 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 16:47:55.539 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 16:47:55.541 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 16:47:55.542 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 16:47:55.545 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 16:47:55.645 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 16:47:55.701 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-02-17 16:47:55.752 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 16:47:55.769 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-02-17 16:47:55.776 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-02-17 16:47:55.853 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 16:47:55.862 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 16:47:55.869 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-02-17 16:47:55.877 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-02-17 16:47:55.896 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-02-17 16:47:55.910 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-02-17 16:47:55.911 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-02-17 16:47:55.912 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-02-17 16:47:55.934 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-02-17 16:47:55.934 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-02-17 16:47:55.936 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-02-17 16:47:55.939 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-02-17 16:47:55.941 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-02-17 16:47:55.942 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-02-17 16:47:55.943 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-02-17 16:47:55.946 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-02-17 16:47:55.947 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-02-17 16:47:55.948 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-02-17 16:47:55.951 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-02-17 16:47:56.016 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-02-17 16:47:56.020 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-02-17 16:47:56.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-02-17 16:47:56.021 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-02-17 16:47:56.022 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-02-17 16:47:56.023 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 16:47:56.023 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-02-17 16:47:56.024 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 16:47:56.024 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-02-17 16:47:56.025 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-02-17 16:47:56.025 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-02-17 16:47:56.026 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-02-17 16:47:56.026 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-02-17 16:47:56.027 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-02-17 16:47:56.027 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-02-17 16:47:56.028 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-02-17 16:47:56.028 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-02-17 16:47:56.029 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-02-17 16:47:56.030 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-02-17 16:47:56.033 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-02-17 16:47:56.034 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-02-17 16:47:56.035 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-02-17 16:47:56.036 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@402f80f5
2022-02-17 16:47:56.037 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-02-17 16:47:56.037 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 16:47:56.040 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-02-17 16:47:56.041 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-02-17 16:47:56.042 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-02-17 16:47:56.042 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-02-17 16:47:56.043 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-02-17 16:47:56.044 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-02-17 16:47:56.045 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-02-17 16:47:56.046 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 16:47:56.049 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-02-17 16:47:56.050 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-02-17 16:47:56.050 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-02-17 16:47:56.243 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-02-17 16:47:56.250 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-02-17 16:47:56.251 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fc08eec, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\Downloads\tp8\D2j_G1_Salah_Eddine_Jakane-master, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\nodejs\;C:\Program Files\nodejs\node_modules\npm\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;C:\Users\J.SaLahEddine\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\J.SaLahEddine\AppData\Roaming\npm;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\Downloads\tp8\D2j_G1_Salah_Eddine_Jakane-master\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-02-17 16:47:56.301 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-02-17 16:47:56.325 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-02-17 16:47:56.552 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-02-17 16:47:56.554 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-02-17 16:47:56.600 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-02-17 16:47:56.600 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-02-17 16:47:56.693 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-02-17 16:47:56.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-02-17 16:47:56.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-02-17 16:47:56.694 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-02-17 16:47:56.695 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-02-17 16:47:56.695 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-02-17 16:47:56.696 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-02-17 16:47:56.753 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383f3558]
2022-02-17 16:47:56.757 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.758 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.759 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.808 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.824 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.834 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:47:56.834 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a9800f8]
2022-02-17 16:47:56.835 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.836 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.839 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.840 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.842 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:47:56.843 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40226788]
2022-02-17 16:47:56.846 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.847 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.849 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.850 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.851 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.855 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:47:56.856 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5caf08]
2022-02-17 16:47:56.857 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.858 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.859 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.860 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.862 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.863 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:47:56.863 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70807224]
2022-02-17 16:47:56.865 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.866 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.867 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.872 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.894 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.896 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:47:56.901 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400d912a]
2022-02-17 16:47:56.913 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.940 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.942 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.943 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.944 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.944 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:47:56.946 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
2022-02-17 16:47:56.946 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.948 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.949 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.950 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.952 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.953 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-02-17 16:47:56.957 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12477988]
2022-02-17 16:47:56.958 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.959 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.960 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.960 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.963 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.965 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:47:56.966 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
2022-02-17 16:47:56.967 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.967 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.968 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.969 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.970 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.971 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:47:56.983 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d01dfa5]
2022-02-17 16:47:56.984 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.984 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.985 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.986 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.987 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.988 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:47:56.988 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
2022-02-17 16:47:56.989 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:47:56.990 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:47:56.990 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:47:56.991 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:47:56.992 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:47:56.992 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:47:57.020 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:47:57.021 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:47:57.021 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-02-17 16:47:57.052 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-02-17 16:47:57.053 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-02-17 16:47:57.060 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-02-17 16:47:57.191 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-02-17 16:47:57.239 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-02-17 16:47:57.239 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-02-17 16:47:57.241 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 16:47:57.248 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 16:47:57.251 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-02-17 16:47:57.251 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-02-17 16:47:57.254 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60baef24
2022-02-17 16:47:57.259 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 7a982476-afed-428d-a48e-9215083489e0 (<unnamed>)
2022-02-17 16:47:57.260 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 16:47:57.268 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-02-17 16:47:57.380 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@72209d93
2022-02-17 16:47:57.380 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-02-17 16:47:57.539 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-02-17 16:47:57.655 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:51)] - begin
2022-02-17 16:47:57.676 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:231)] - Executing identity-insert immediately
2022-02-17 16:47:57.682 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    insert 
    into
        TFactures
        (amount, date) 
    values
        (?, ?)
2022-02-17 16:47:57.715 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:74)] - Natively generated identity: 1
2022-02-17 16:47:57.715 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:104)] - HHH000387: ResultSet's statement was not registered
2022-02-17 16:47:57.720 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:62)] - committing
2022-02-17 16:47:57.722 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:132)] - Processing flush-time cascades
2022-02-17 16:47:57.723 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:174)] - Dirty checking collections
2022-02-17 16:47:57.727 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:106)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-02-17 16:47:57.727 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-17 16:47:57.728 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:102)] - Listing entities:
2022-02-17 16:47:57.729 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:109)] - ma.cigma.pfe.models.Facture{date=Thu Feb 17 16:47:57 CET 2022, amount=20.05, id=1}
2022-02-17 16:49:58.539 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4cf4d528
2022-02-17 16:49:58.807 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 16:49:58.895 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-02-17 16:49:58.930 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-02-17 16:49:58.932 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-02-17 16:49:58.969 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 16:49:59.059 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-02-17 16:49:59.217 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-02-17 16:49:59.218 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-02-17 16:49:59.222 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 16:49:59.235 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/Downloads/tp8/D2j_G1_Salah_Eddine_Jakane-master/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-02-17 16:49:59.252 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 16:49:59.256 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 16:49:59.261 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 16:49:59.262 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-02-17 16:49:59.447 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-02-17 16:49:59.449 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-02-17 16:49:59.453 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-02-17 16:49:59.482 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 16:49:59.555 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 16:49:59.589 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-02-17 16:49:59.788 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@24569dba
2022-02-17 16:49:59.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@24569dba
2022-02-17 16:49:59.791 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@24569dba
2022-02-17 16:49:59.795 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7188af83
2022-02-17 16:49:59.799 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4a003cbe
2022-02-17 16:49:59.801 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@2b30a42c
2022-02-17 16:49:59.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@19932c16
2022-02-17 16:49:59.807 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@19932c16
2022-02-17 16:49:59.808 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@19932c16
2022-02-17 16:49:59.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@1972e513
2022-02-17 16:49:59.812 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@1972e513
2022-02-17 16:49:59.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1972e513
2022-02-17 16:49:59.817 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@433defed
2022-02-17 16:49:59.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@433defed
2022-02-17 16:49:59.820 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@433defed
2022-02-17 16:49:59.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@304bb45b
2022-02-17 16:49:59.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@304bb45b
2022-02-17 16:49:59.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@304bb45b
2022-02-17 16:49:59.827 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4a8355dd
2022-02-17 16:49:59.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@4a8355dd
2022-02-17 16:49:59.828 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4a8355dd
2022-02-17 16:49:59.832 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4bdeaabb
2022-02-17 16:49:59.833 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@4bdeaabb
2022-02-17 16:49:59.834 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4bdeaabb
2022-02-17 16:49:59.837 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f53b8a
2022-02-17 16:49:59.838 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f53b8a
2022-02-17 16:49:59.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f53b8a
2022-02-17 16:49:59.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4201c465
2022-02-17 16:49:59.844 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4201c465
2022-02-17 16:49:59.847 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ab4bc72
2022-02-17 16:49:59.848 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ab4bc72
2022-02-17 16:49:59.851 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@43f02ef2
2022-02-17 16:49:59.852 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@43f02ef2
2022-02-17 16:49:59.854 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5f8e8a9d
2022-02-17 16:49:59.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6e535154
2022-02-17 16:49:59.864 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@48e1f6c7
2022-02-17 16:49:59.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@48e1f6c7
2022-02-17 16:49:59.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@431cd9b2
2022-02-17 16:49:59.873 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@431cd9b2
2022-02-17 16:49:59.878 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@4b8d604b
2022-02-17 16:49:59.879 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4b8d604b
2022-02-17 16:49:59.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@14fc5f04
2022-02-17 16:49:59.885 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@14fc5f04
2022-02-17 16:49:59.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@14fc5f04
2022-02-17 16:49:59.892 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6a8658ff
2022-02-17 16:49:59.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@30f842ca
2022-02-17 16:49:59.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30f842ca
2022-02-17 16:49:59.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30f842ca
2022-02-17 16:49:59.900 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e990ed7
2022-02-17 16:49:59.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@5884a914
2022-02-17 16:49:59.904 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5884a914
2022-02-17 16:49:59.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1a4927d6
2022-02-17 16:49:59.909 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1a4927d6
2022-02-17 16:49:59.912 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4b520ea8
2022-02-17 16:49:59.913 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4b520ea8
2022-02-17 16:49:59.916 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@782859e
2022-02-17 16:49:59.917 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@782859e
2022-02-17 16:49:59.921 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7857fe2
2022-02-17 16:49:59.922 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7857fe2
2022-02-17 16:49:59.924 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@29d80d2b
2022-02-17 16:49:59.927 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@5340477f
2022-02-17 16:49:59.928 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@5340477f
2022-02-17 16:49:59.929 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@5340477f
2022-02-17 16:49:59.933 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@28cda624
2022-02-17 16:49:59.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@28cda624
2022-02-17 16:49:59.935 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@28cda624
2022-02-17 16:49:59.938 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@475c9c31
2022-02-17 16:49:59.940 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@1807f5a7
2022-02-17 16:49:59.941 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@1807f5a7
2022-02-17 16:49:59.942 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@1807f5a7
2022-02-17 16:49:59.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7dfd3c81
2022-02-17 16:49:59.965 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7dfd3c81
2022-02-17 16:49:59.966 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7dfd3c81
2022-02-17 16:49:59.968 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@7dfb0c0f
2022-02-17 16:49:59.970 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@d23e042
2022-02-17 16:49:59.979 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@23941fb4
2022-02-17 16:49:59.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@23941fb4
2022-02-17 16:49:59.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5d908d47
2022-02-17 16:49:59.992 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@415b0b49
2022-02-17 16:49:59.993 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@415b0b49
2022-02-17 16:50:00.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@730d2164
2022-02-17 16:50:00.003 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@730d2164
2022-02-17 16:50:00.006 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c86dbc5
2022-02-17 16:50:00.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1a5a4e19
2022-02-17 16:50:00.010 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@41f69e84
2022-02-17 16:50:00.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@5038d0b5
2022-02-17 16:50:00.020 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5038d0b5
2022-02-17 16:50:00.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6bb4dd34
2022-02-17 16:50:00.023 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d9f158f
2022-02-17 16:50:00.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@45efd90f
2022-02-17 16:50:00.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-02-17 16:50:00.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-02-17 16:50:00.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-02-17 16:50:00.027 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-02-17 16:50:00.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-02-17 16:50:00.074 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 16:50:00.108 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 16:50:00.108 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-02-17 16:50:00.109 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-02-17 16:50:00.119 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 16:50:00.121 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 16:50:02.403 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-02-17 16:50:02.403 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-02-17 16:50:02.404 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 16:50:02.423 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 16:50:02.449 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-02-17 16:50:02.513 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 16:50:02.516 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 16:50:02.564 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 16:50:02.565 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 16:50:02.566 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 16:50:02.566 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 16:50:02.567 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 16:50:02.570 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 16:50:02.572 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 16:50:02.574 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 16:50:02.576 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 16:50:02.577 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 16:50:02.578 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 16:50:02.579 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 16:50:02.579 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 16:50:02.581 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 16:50:02.641 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 16:50:02.706 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-02-17 16:50:02.749 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 16:50:02.761 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-02-17 16:50:02.766 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-02-17 16:50:02.816 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 16:50:02.821 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 16:50:02.824 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-02-17 16:50:02.826 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-02-17 16:50:02.831 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-02-17 16:50:02.836 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-02-17 16:50:02.837 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-02-17 16:50:02.838 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-02-17 16:50:02.838 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-02-17 16:50:02.839 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-02-17 16:50:02.840 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-02-17 16:50:02.840 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-02-17 16:50:02.841 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-02-17 16:50:02.842 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-02-17 16:50:02.842 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-02-17 16:50:02.846 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-02-17 16:50:02.847 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-02-17 16:50:02.847 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-02-17 16:50:02.852 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-02-17 16:50:02.937 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-02-17 16:50:02.939 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-02-17 16:50:02.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-02-17 16:50:02.940 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-02-17 16:50:02.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-02-17 16:50:02.941 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 16:50:02.942 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-02-17 16:50:02.943 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 16:50:02.943 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-02-17 16:50:02.944 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-02-17 16:50:02.944 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-02-17 16:50:02.944 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-02-17 16:50:02.945 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-02-17 16:50:02.945 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-02-17 16:50:02.945 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-02-17 16:50:02.946 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-02-17 16:50:02.946 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-02-17 16:50:02.947 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-02-17 16:50:02.947 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-02-17 16:50:02.948 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-02-17 16:50:02.948 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-02-17 16:50:02.949 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-02-17 16:50:02.949 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@402f80f5
2022-02-17 16:50:02.950 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-02-17 16:50:02.950 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 16:50:02.951 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-02-17 16:50:02.952 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-02-17 16:50:02.953 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-02-17 16:50:02.954 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-02-17 16:50:02.955 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-02-17 16:50:02.957 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-02-17 16:50:02.958 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-02-17 16:50:02.960 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 16:50:02.961 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-02-17 16:50:02.961 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-02-17 16:50:02.962 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-02-17 16:50:03.045 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-02-17 16:50:03.048 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-02-17 16:50:03.049 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3fc08eec, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\Downloads\tp8\D2j_G1_Salah_Eddine_Jakane-master, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\nodejs\;C:\Program Files\nodejs\node_modules\npm\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;C:\Users\J.SaLahEddine\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\J.SaLahEddine\AppData\Roaming\npm;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\Downloads\tp8\D2j_G1_Salah_Eddine_Jakane-master\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-02-17 16:50:03.072 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-02-17 16:50:03.090 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-02-17 16:50:03.262 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-02-17 16:50:03.262 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-02-17 16:50:03.297 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-02-17 16:50:03.297 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-02-17 16:50:03.400 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-02-17 16:50:03.400 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-02-17 16:50:03.401 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-02-17 16:50:03.401 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-02-17 16:50:03.402 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-02-17 16:50:03.402 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-02-17 16:50:03.402 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-02-17 16:50:03.458 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383f3558]
2022-02-17 16:50:03.461 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.461 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.462 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.497 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.508 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.514 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:03.515 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a9800f8]
2022-02-17 16:50:03.516 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.517 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.520 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.521 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.522 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.523 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:03.524 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40226788]
2022-02-17 16:50:03.525 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.526 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.527 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.528 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.529 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.530 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:03.530 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5caf08]
2022-02-17 16:50:03.531 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.532 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.533 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.533 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.534 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.535 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:03.536 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70807224]
2022-02-17 16:50:03.536 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.537 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.537 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.538 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.539 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.540 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:03.541 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@400d912a]
2022-02-17 16:50:03.549 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.551 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.552 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.553 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.554 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.555 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:03.556 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
2022-02-17 16:50:03.557 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.557 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.565 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.566 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.567 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.568 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-02-17 16:50:03.569 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12477988]
2022-02-17 16:50:03.570 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.570 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.571 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.572 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.573 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.578 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:03.579 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
2022-02-17 16:50:03.580 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.581 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.582 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.583 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.584 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.584 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:03.585 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d01dfa5]
2022-02-17 16:50:03.586 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.586 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.587 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.587 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.588 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.590 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:03.591 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
2022-02-17 16:50:03.591 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:03.594 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:03.595 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:03.596 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:03.597 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:03.597 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:03.632 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:03.633 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:03.634 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-02-17 16:50:03.656 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-02-17 16:50:03.658 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-02-17 16:50:03.663 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-02-17 16:50:03.707 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-02-17 16:50:03.784 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-02-17 16:50:03.784 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-02-17 16:50:03.785 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 16:50:03.790 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 16:50:03.796 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-02-17 16:50:03.796 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-02-17 16:50:03.802 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60baef24
2022-02-17 16:50:03.808 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: bc68769b-adf5-4a20-b8e1-96f348481300 (<unnamed>)
2022-02-17 16:50:03.811 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 16:50:03.820 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-02-17 16:50:03.921 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@72209d93
2022-02-17 16:50:03.922 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-02-17 16:50:04.040 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-02-17 16:50:04.188 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:51)] - begin
2022-02-17 16:50:04.218 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:231)] - Executing identity-insert immediately
2022-02-17 16:50:04.226 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    insert 
    into
        TFactures
        (amount, date) 
    values
        (?, ?)
2022-02-17 16:50:04.276 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:74)] - Natively generated identity: 1
2022-02-17 16:50:04.277 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:104)] - HHH000387: ResultSet's statement was not registered
2022-02-17 16:50:04.292 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:62)] - committing
2022-02-17 16:50:04.295 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:132)] - Processing flush-time cascades
2022-02-17 16:50:04.298 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:174)] - Dirty checking collections
2022-02-17 16:50:04.303 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:106)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-02-17 16:50:04.304 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:113)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-17 16:50:04.307 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:102)] - Listing entities:
2022-02-17 16:50:04.308 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:109)] - ma.cigma.pfe.models.Facture{date=Thu Feb 17 16:50:04 CET 2022, amount=20.05, id=1}
2022-02-17 16:50:32.345 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c762604
2022-02-17 16:50:32.653 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 16:50:32.733 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'controller'
2022-02-17 16:50:32.767 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'service'
2022-02-17 16:50:32.768 DEBUG [main][org.springframework.beans.factory.support.DefaultListableBeanFactory] [getSingleton] [org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)] - Creating shared instance of singleton bean 'dao'
2022-02-17 16:50:32.800 DEBUG [main][org.jboss.logging] [<clinit>] [org.hibernate.jpa.HibernatePersistenceProvider.<clinit>(HibernatePersistenceProvider.java:38)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 16:50:32.890 DEBUG [main][org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl] [fromConfigSettings] [org.hibernate.boot.registry.classloading.internal.ClassLoaderServiceImpl.fromConfigSettings(ClassLoaderServiceImpl.java:124)] - Incoming config yielded no classloaders; adding standard SE ones
2022-02-17 16:50:33.025 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:87)] - Located and parsed 1 persistence units; checking each
2022-02-17 16:50:33.026 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:95)] - Checking persistence-unit [name=unit_factures, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_factures]
2022-02-17 16:50:33.029 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:89)] - Persistence-unit [unit_factures] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 16:50:33.049 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_factures
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/J.SaLahEddine/Downloads/tp8/D2j_G1_Salah_Eddine_Jakane-master/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		javax.persistence.jdbc.password: root
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		hibernate.show_sql: true
		hibernate.format_sql: true
		hibernate.hbm2ddl.auto: create
		javax.persistence.jdbc.user: root]
2022-02-17 16:50:33.067 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 16:50:33.072 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 16:50:33.078 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 16:50:33.079 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2022-02-17 16:50:33.287 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:37)] - HHH000412: Hibernate Core {5.0.4.Final}
2022-02-17 16:50:33.291 INFO [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:213)] - HHH000206: hibernate.properties not found
2022-02-17 16:50:33.296 INFO [main][org.hibernate.cfg.Environment] [buildBytecodeProvider] [org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)] - HHH000021: Bytecode provider name : javassist
2022-02-17 16:50:33.330 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 16:50:33.427 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:88)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 16:50:33.452 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)] - HCANN000001: Hibernate Commons Annotations {5.0.0.Final}
2022-02-17 16:50:33.650 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-02-17 16:50:33.651 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration boolean -> org.hibernate.type.BooleanType@496bc455
2022-02-17 16:50:33.651 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@496bc455
2022-02-17 16:50:33.656 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@247310d0
2022-02-17 16:50:33.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b30a42c
2022-02-17 16:50:33.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@43df23d3
2022-02-17 16:50:33.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-02-17 16:50:33.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte -> org.hibernate.type.ByteType@305ffe9e
2022-02-17 16:50:33.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@305ffe9e
2022-02-17 16:50:33.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration character -> org.hibernate.type.CharacterType@61c4eee0
2022-02-17 16:50:33.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char -> org.hibernate.type.CharacterType@61c4eee0
2022-02-17 16:50:33.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@61c4eee0
2022-02-17 16:50:33.680 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-02-17 16:50:33.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration short -> org.hibernate.type.ShortType@7fd50002
2022-02-17 16:50:33.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fd50002
2022-02-17 16:50:33.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration integer -> org.hibernate.type.IntegerType@28dcca0c
2022-02-17 16:50:33.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration int -> org.hibernate.type.IntegerType@28dcca0c
2022-02-17 16:50:33.689 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@28dcca0c
2022-02-17 16:50:33.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-02-17 16:50:33.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration long -> org.hibernate.type.LongType@312aa7c
2022-02-17 16:50:33.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@312aa7c
2022-02-17 16:50:33.701 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-02-17 16:50:33.702 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration float -> org.hibernate.type.FloatType@71075444
2022-02-17 16:50:33.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@71075444
2022-02-17 16:50:33.707 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-02-17 16:50:33.708 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration double -> org.hibernate.type.DoubleType@6f01b95f
2022-02-17 16:50:33.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6f01b95f
2022-02-17 16:50:33.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@710636b0
2022-02-17 16:50:33.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@710636b0
2022-02-17 16:50:33.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@740fb309
2022-02-17 16:50:33.721 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@740fb309
2022-02-17 16:50:33.724 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration string -> org.hibernate.type.StringType@6f204a1a
2022-02-17 16:50:33.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@6f204a1a
2022-02-17 16:50:33.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3cce5371
2022-02-17 16:50:33.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@338fc1d8
2022-02-17 16:50:33.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration url -> org.hibernate.type.UrlType@480d3575
2022-02-17 16:50:33.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@480d3575
2022-02-17 16:50:33.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration date -> org.hibernate.type.DateType@790da477
2022-02-17 16:50:33.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@790da477
2022-02-17 16:50:33.743 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration time -> org.hibernate.type.TimeType@d554c5f
2022-02-17 16:50:33.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d554c5f
2022-02-17 16:50:33.748 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-02-17 16:50:33.749 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6a8658ff
2022-02-17 16:50:33.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6a8658ff
2022-02-17 16:50:33.754 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@55de24cc
2022-02-17 16:50:33.758 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-02-17 16:50:33.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e990ed7
2022-02-17 16:50:33.761 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e990ed7
2022-02-17 16:50:33.763 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4d15107f
2022-02-17 16:50:33.766 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration locale -> org.hibernate.type.LocaleType@79207381
2022-02-17 16:50:33.767 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@79207381
2022-02-17 16:50:33.769 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration currency -> org.hibernate.type.CurrencyType@97e93f1
2022-02-17 16:50:33.770 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@97e93f1
2022-02-17 16:50:33.772 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@624ea235
2022-02-17 16:50:33.773 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@624ea235
2022-02-17 16:50:33.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration class -> org.hibernate.type.ClassType@1b1cfb87
2022-02-17 16:50:33.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1b1cfb87
2022-02-17 16:50:33.781 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-02-17 16:50:33.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@29d80d2b
2022-02-17 16:50:33.784 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4f0f2942
2022-02-17 16:50:33.788 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration binary -> org.hibernate.type.BinaryType@69504ae9
2022-02-17 16:50:33.789 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@69504ae9
2022-02-17 16:50:33.789 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [B -> org.hibernate.type.BinaryType@69504ae9
2022-02-17 16:50:33.792 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@126253fd
2022-02-17 16:50:33.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@126253fd
2022-02-17 16:50:33.794 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@126253fd
2022-02-17 16:50:33.817 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration image -> org.hibernate.type.ImageType@5276d6ee
2022-02-17 16:50:33.820 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration characters -> org.hibernate.type.CharArrayType@4dc27487
2022-02-17 16:50:33.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@4dc27487
2022-02-17 16:50:33.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [C -> org.hibernate.type.CharArrayType@4dc27487
2022-02-17 16:50:33.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-02-17 16:50:33.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-02-17 16:50:33.826 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6933b6c6
2022-02-17 16:50:33.829 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration text -> org.hibernate.type.TextType@1f9e9475
2022-02-17 16:50:33.831 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration ntext -> org.hibernate.type.NTextType@14dd7b39
2022-02-17 16:50:33.842 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration blob -> org.hibernate.type.BlobType@5d908d47
2022-02-17 16:50:33.843 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5d908d47
2022-02-17 16:50:33.845 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1c9b0314
2022-02-17 16:50:33.857 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration clob -> org.hibernate.type.ClobType@642a7222
2022-02-17 16:50:33.858 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@642a7222
2022-02-17 16:50:33.867 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration nclob -> org.hibernate.type.NClobType@5c86dbc5
2022-02-17 16:50:33.868 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5c86dbc5
2022-02-17 16:50:33.870 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1a5a4e19
2022-02-17 16:50:33.872 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3e78b6a5
2022-02-17 16:50:33.875 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration serializable -> org.hibernate.type.SerializableType@24105dc5
2022-02-17 16:50:33.883 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration object -> org.hibernate.type.ObjectType@6bb4dd34
2022-02-17 16:50:33.884 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@6bb4dd34
2022-02-17 16:50:33.892 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4b8729ff
2022-02-17 16:50:33.893 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@61710c6
2022-02-17 16:50:33.894 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3214ee6
2022-02-17 16:50:33.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@383dc82c
2022-02-17 16:50:33.895 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a07d605
2022-02-17 16:50:33.896 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@74287ea3
2022-02-17 16:50:33.897 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d7758be
2022-02-17 16:50:33.899 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:135)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2bdd8394
2022-02-17 16:50:33.937 WARN [main][org.hibernate.orm.connections] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:71)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 16:50:33.955 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)] - HHH10001005: using driver [com.mysql.cj.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 16:50:33.957 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:133)] - HHH10001001: Connection properties: {user=root, password=root}
2022-02-17 16:50:33.957 INFO [main][org.hibernate.orm.connections] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)] - HHH10001003: Autocommit mode: false
2022-02-17 16:50:33.970 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 16:50:33.971 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 16:50:35.968 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 8.0.27
      major : 8
      minor : 0
2022-02-17 16:50:35.969 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
2022-02-17 16:50:35.970 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 16:50:35.989 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:154)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 16:50:36.014 DEBUG [main][org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport] [supportsRefCursors] [org.hibernate.engine.jdbc.cursor.internal.StandardRefCursorSupport.supportsRefCursors(StandardRefCursorSupport.java:170)] - Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2022-02-17 16:50:36.082 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:116)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 16:50:36.086 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:182)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 16:50:36.133 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 16:50:36.134 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 16:50:36.136 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 16:50:36.136 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 16:50:36.137 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 16:50:36.139 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 16:50:36.140 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 16:50:36.143 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 16:50:36.146 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 16:50:36.148 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 16:50:36.150 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 16:50:36.152 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 16:50:36.153 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 16:50:36.155 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:78)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 16:50:36.227 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:47)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 16:50:36.292 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:509)] - Binding entity from annotated class: ma.cigma.pfe.models.Facture
2022-02-17 16:50:36.339 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 16:50:36.354 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:389)] - Import with entity name Facture
2022-02-17 16:50:36.360 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:665)] - Bind entity ma.cigma.pfe.models.Facture on table TFactures
2022-02-17 16:50:36.408 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 16:50:36.412 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 16:50:36.416 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:id]
2022-02-17 16:50:36.418 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for id
2022-02-17 16:50:36.422 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property id
2022-02-17 16:50:36.427 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=amount, insertable=true, updatable=true, unique=false}
2022-02-17 16:50:36.428 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property amount with lazy=false
2022-02-17 16:50:36.428 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:amount]
2022-02-17 16:50:36.429 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for amount
2022-02-17 16:50:36.429 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property amount
2022-02-17 16:50:36.430 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:213)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TFactures), mappingColumn=date, insertable=true, updatable=true, unique=false}
2022-02-17 16:50:36.431 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:169)] - MetadataSourceProcessor property date with lazy=false
2022-02-17 16:50:36.432 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDefinition] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDefinition(AbstractPropertyHolder.java:90)] - Attempting to locate auto-apply AttributeConverter for property [ma.cigma.pfe.models.Facture:date]
2022-02-17 16:50:36.432 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:392)] - building SimpleValue for date
2022-02-17 16:50:36.433 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:260)] - Building property date
2022-02-17 16:50:36.436 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for id
2022-02-17 16:50:36.436 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for amount
2022-02-17 16:50:36.438 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:431)] - Starting fillSimpleValue for date
2022-02-17 16:50:36.442 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:35)] - Forcing column [id] to be non-null as it is part of the primary key for table [tfactures]
2022-02-17 16:50:36.523 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:210)] - Building session factory
2022-02-17 16:50:36.525 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - SessionFactory name : null
2022-02-17 16:50:36.526 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic flush during beforeCompletion(): disabled
2022-02-17 16:50:36.526 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:71)] - Automatic session close at end of transaction: disabled
2022-02-17 16:50:36.527 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:73)] - Statistics: disabled
2022-02-17 16:50:36.527 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 16:50:36.527 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Default entity-mode: pojo
2022-02-17 16:50:36.527 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 16:50:36.528 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:78)] - Allow initialization of lazy state outside session : disabled
2022-02-17 16:50:36.528 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Using BatchFetchStyle : LEGACY
2022-02-17 16:50:36.528 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Default batch fetch size: -1
2022-02-17 16:50:36.529 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Maximum outer join fetch depth: 2
2022-02-17 16:50:36.529 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Default null ordering: NONE
2022-02-17 16:50:36.529 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL updates by primary key: disabled
2022-02-17 16:50:36.530 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:85)] - Order SQL inserts for batching: disabled
2022-02-17 16:50:36.530 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:87)] - multi-tenancy strategy : NONE
2022-02-17 16:50:36.531 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:89)] - JTA Track by Thread: enabled
2022-02-17 16:50:36.533 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Query language substitutions: {}
2022-02-17 16:50:36.534 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:92)] - JPA query language strict compliance: disabled
2022-02-17 16:50:36.535 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Named query checking : enabled
2022-02-17 16:50:36.535 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level cache: enabled
2022-02-17 16:50:36.536 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level query cache: disabled
2022-02-17 16:50:36.537 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@41382722
2022-02-17 16:50:36.537 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Second-level cache region prefix: null
2022-02-17 16:50:36.538 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 16:50:36.538 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Structured second-level cache entries: disabled
2022-02-17 16:50:36.539 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:101)] - Second-level cache direct-reference entries: disabled
2022-02-17 16:50:36.539 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - Automatic eviction of collection cache: disabled
2022-02-17 16:50:36.540 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - JDBC batch size: 15
2022-02-17 16:50:36.541 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - JDBC batch updates for versioned data: enabled
2022-02-17 16:50:36.541 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - Scrollable result sets: enabled
2022-02-17 16:50:36.542 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - Wrap result sets: disabled
2022-02-17 16:50:36.543 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 16:50:36.543 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - JDBC result set fetch size: null
2022-02-17 16:50:36.544 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:110)] - Connection release mode: ON_CLOSE
2022-02-17 16:50:36.544 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - Generate SQL with comments: disabled
2022-02-17 16:50:36.623 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [getReference] [org.hibernate.internal.SessionFactoryImpl.getReference(SessionFactoryImpl.java:870)] - Returning a Reference to the SessionFactory
2022-02-17 16:50:36.627 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:255)] - Session factory constructed with filter configurations : {}
2022-02-17 16:50:36.628 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:256)] - Instantiating session factory with properties: {hibernate.connection.password=root, java.runtime.name=Java(TM) SE Runtime Environment, java.vm.version=25.271-b09, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_271\jre\bin, hibernate.connection.username=root, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@25243bc1, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, sun.os.patch.level=, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, java.vm.specification.name=Java Virtual Machine Specification, user.dir=C:\Users\J.SaLahEddine\Downloads\tp8\D2j_G1_Salah_Eddine_Jakane-master, java.runtime.version=1.8.0_271-b09, javax.persistence.jdbc.user=root, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, os.arch=amd64, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\endorsed, java.io.tmpdir=C:\Users\J83B3~1.SAL\AppData\Local\Temp\, line.separator=
, javax.persistence.jdbc.password=root, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 10, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, sun.jnu.encoding=Cp1252, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, java.library.path=C:\Program Files\Java\jdk1.8.0_271\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Git\bin;C:\Program Files\nodejs\;C:\Program Files\nodejs\node_modules\npm\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\J.SaLahEddine\AppData\Local\Microsoft\WindowsApps;;C:\Users\J.SaLahEddine\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\J.SaLahEddine\AppData\Roaming\npm;C:\Program Files (x86)\SSH Communications Security\SSH Secure Shell;., javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, java.class.version=52.0, hibernate.ejb.persistenceUnitName=unit_factures, java.specification.name=Java Platform API Specification, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=10.0, user.home=C:\Users\J.SaLahEddine, user.timezone=Europe/Paris, java.awt.printerjob=sun.awt.windows.WPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, hibernate.format_sql=true, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, user.name=J.SaLahEddine, java.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Users\J.SaLahEddine\Downloads\tp8\D2j_G1_Salah_Eddine_Jakane-master\target\classes;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-core\5.0.4.Final\hibernate-core-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;C:\Users\J.SaLahEddine\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\jboss\jandex\2.0.0.CR1\jandex-2.0.0.CR1.jar;C:\Users\J.SaLahEddine\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.0.Final\hibernate-commons-annotations-5.0.0.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\org\hibernate\hibernate-entitymanager\5.0.4.Final\hibernate-entitymanager-5.0.4.Final.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\J.SaLahEddine\.m2\repository\mysql\mysql-connector-java\8.0.16\mysql-connector-java-8.0.16.jar;C:\Users\J.SaLahEddine\.m2\repository\com\google\protobuf\protobuf-java\3.6.1\protobuf-java-3.6.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\J.SaLahEddine\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-api\2.7\log4j-api-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-core\2.7\log4j-core-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\apache\logging\log4j\log4j-slf4j-impl\2.7\log4j-slf4j-impl-2.7.jar;C:\Users\J.SaLahEddine\.m2\repository\org\slf4j\slf4j-api\1.7.21\slf4j-api-1.7.21.jar;C:\Users\J.SaLahEddine\AppData\Local\JetBrains\IntelliJ IDEA Community Edition 2021.3.1\lib\idea_rt.jar, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, java.vm.specification.version=1.8, sun.arch.data.model=64, sun.java.command=ma.cigma.pfe.ApplicationRunner, java.home=C:\Program Files\Java\jdk1.8.0_271\jre, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, user.language=en, java.specification.vendor=Oracle Corporation, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.8.0_271, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_271\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_271\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_271\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_271\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.desktop=windows, sun.cpu.isalist=amd64}
2022-02-17 16:50:36.648 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:80)] - Skipping JACC integration as it was not enabled
2022-02-17 16:50:36.655 DEBUG [main][org.hibernate.engine.spi.CascadeStyles] [registerCascadeStyle] [org.hibernate.engine.spi.CascadeStyles.registerCascadeStyle(CascadeStyles.java:268)] - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2022-02-17 16:50:36.774 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-02-17 16:50:36.775 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-02-17 16:50:36.802 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:55)] - Not known whether passed class name [ma.cigma.pfe.models.Facture] is safe
2022-02-17 16:50:36.802 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:57)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ma.cigma.pfe.models.Facture
2022-02-17 16:50:36.886 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3479)] - Static SQL for entity: ma.cigma.pfe.models.Facture
2022-02-17 16:50:36.886 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3484)] -  Version select: select id from TFactures where id =?
2022-02-17 16:50:36.887 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3487)] -  Snapshot select: select facture_.id, facture_.amount as amount2_0_, facture_.date as date3_0_ from TFactures facture_ where facture_.id=?
2022-02-17 16:50:36.887 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TFactures (amount, date, id) values (?, ?, ?)
2022-02-17 16:50:36.888 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TFactures set amount=?, date=? where id=?
2022-02-17 16:50:36.888 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TFactures where id=?
2022-02-17 16:50:36.889 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:3495)] -  Identity insert: insert into TFactures (amount, date) values (?, ?)
2022-02-17 16:50:36.939 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
2022-02-17 16:50:36.941 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:36.942 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:36.943 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:36.980 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:36.990 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:36.993 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [NONE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:36.994 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4159e81b]
2022-02-17 16:50:36.995 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:36.995 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:36.996 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:36.997 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:36.998 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.000 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:37.000 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23cd4ff2]
2022-02-17 16:50:37.001 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.002 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.002 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.003 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.003 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.004 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:37.005 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
2022-02-17 16:50:37.006 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.006 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.007 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.008 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.009 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.010 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_NOWAIT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:37.011 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9f6e406]
2022-02-17 16:50:37.011 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.012 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.012 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.013 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.014 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.016 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [UPGRADE_SKIPLOCKED]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:37.017 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e6f3bae]
2022-02-17 16:50:37.018 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.019 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.020 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.021 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.022 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.023 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [FORCE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:37.024 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
2022-02-17 16:50:37.024 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.025 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.026 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.027 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.028 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.029 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_READ]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? lock in share mode
2022-02-17 16:50:37.030 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34237b90]
2022-02-17 16:50:37.030 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.031 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.032 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.033 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.034 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.035 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_WRITE]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:37.035 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
2022-02-17 16:50:37.036 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.037 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.037 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.038 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.039 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.039 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [PESSIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=? for update
2022-02-17 16:50:37.040 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22101c80]
2022-02-17 16:50:37.041 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.042 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.043 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.043 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.044 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.045 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:37.045 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
2022-02-17 16:50:37.046 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : amount
2022-02-17 16:50:37.047 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:137)] - Visiting attribute path : date
2022-02-17 16:50:37.047 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:76)] - Building LoadPlan...
2022-02-17 16:50:37.048 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:95)] - processing queryspace <gen:0>
2022-02-17 16:50:37.049 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=ma.cigma.pfe.models.Facture)
    - Returns
       - EntityReturnImpl(entity=ma.cigma.pfe.models.Facture, querySpaceUid=<gen:0>, path=ma.cigma.pfe.models.Facture)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ma.cigma.pfe.models.Facture)
          - SQL table alias mapping - facture0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 16:50:37.050 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:128)] - Static select for entity ma.cigma.pfe.models.Facture [OPTIMISTIC_FORCE_INCREMENT]: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:37.083 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_MERGE on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:37.084 DEBUG [main][org.hibernate.loader.Loader] [<init>] [org.hibernate.loader.entity.CascadeEntityLoader.<init>(CascadeEntityLoader.java:38)] - Static select for action ACTION_REFRESH on entity ma.cigma.pfe.models.Facture: select facture0_.id as id1_0_0_, facture0_.amount as amount2_0_0_, facture0_.date as date3_0_0_ from TFactures facture0_ where facture0_.id=?
2022-02-17 16:50:37.084 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:462)] - Instantiated session factory
2022-02-17 16:50:37.102 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:400)] - HHH000227: Running hbm2ddl schema export
2022-02-17 16:50:37.104 DEBUG [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:408)] - Import file not found: /import.sql
2022-02-17 16:50:37.111 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    drop table if exists TFactures
2022-02-17 16:50:37.159 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:92)] - 
    create table TFactures (
        id bigint not null auto_increment,
        amount double precision,
        date datetime,
        primary key (id)
    )
2022-02-17 16:50:37.220 INFO [main][org.hibernate.tool.hbm2ddl.SchemaExport] [execute] [org.hibernate.tool.hbm2ddl.SchemaExport.execute(SchemaExport.java:463)] - HHH000230: Schema export complete
2022-02-17 16:50:37.221 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:42)] - No JtaPlatform was specified, checking resolver
2022-02-17 16:50:37.222 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 16:50:37.229 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:101)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 16:50:37.233 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:149)] - Checking 0 named HQL queries
2022-02-17 16:50:37.234 DEBUG [main][org.hibernate.internal.NamedQueryRepository] [checkNamedQueries] [org.hibernate.internal.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:165)] - Checking 0 named SQL queries
2022-02-17 16:50:37.238 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:52)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@720653c2
2022-02-17 16:50:37.242 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:74)] - Registering SessionFactory: 49da051c-dcf6-473e-98f7-d8422030c747 (<unnamed>)
2022-02-17 16:50:37.243 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:81)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 16:50:37.250 DEBUG [main][org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator] [execute] [org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator$GenerationProcess.execute(JpaSchemaGenerator.java:106)] - No actions specified; doing nothing
2022-02-17 16:50:37.337 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [<init>] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.<init>(EntityManagerFactoryRegistry.java:39)] - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@29be7749
2022-02-17 16:50:37.338 DEBUG [main][org.hibernate.jpa.internal.EntityManagerFactoryRegistry] [addEntityManagerFactory] [org.hibernate.jpa.internal.EntityManagerFactoryRegistry.addEntityManagerFactory(EntityManagerFactoryRegistry.java:49)] - Registering EntityManagerFactory: unit_factures 
2022-02-17 16:50:37.502 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:82)] - Statistics initialized [enabled=false]
2022-02-17 16:50:37.594 WARN [main][org.springframework.context.support.ClassPathXmlApplicationContext] [refresh] [org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)] - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'controller' defined in class path resource [spring.xml]: Cannot resolve reference to bean 'service' while setting bean property 'fservice'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'service' defined in class path resource [spring.xml]: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property 'fdao' of bean class [ma.cigma.pfe.service.FactureServiceImpl]: Bean property 'fdao' is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?
